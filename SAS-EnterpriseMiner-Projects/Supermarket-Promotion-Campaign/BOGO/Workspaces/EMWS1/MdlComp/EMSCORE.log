*------------------------------------------------------------*
* Score Log
Date:                May 09, 2018
Time:                14:57:33
*------------------------------------------------------------*
NOTE: View EMWS1.REG3_TRAIN.VIEW used (Total process time):
      real time           0.10 seconds
      cpu time            0.10 seconds
      
NOTE: View EMWS1.REG3_TRAIN.VIEW used (Total process time):
      real time           0.23 seconds
      cpu time            0.23 seconds
      
13256  /* Generate assessment metadata, which will be used to generate assessment data step */
13257  /* code, such as retrieving names of temporary variables and summary variables,      */
13258  /* labels, etc.  It is used in almost all the assessment computations such as lift,  */
13259  /* roc, index, scoreDist and could be thought as a global variable in assessment     */
13260  /* computation.                                                                      */
13261  data work.ASSESS_244AD2I_assessMeta_C43vLE;
13262  length VARIABLE $32 FORMAT $44 TYPE $32 PARENT $32 LEVEL $32 PROPERTY $32 MEASUREMENT
13262! $10 LAST_LEVEL $32 GEN_VAR_IN_TEMP_DATA $32 RESULT_MEAN $32 RESULT_MEAN_LABEL $100
13262! RESULT_MIN $32 RESULT_MIN_LABEL $100 MIN_ADJUSTED $32 RESULT_MAX $32 RESULT_MAX_LABEL
13263     $100 MAX_ADJUSTED $32 RESULT_COUNT $32 RESULT_COUNT_LABEL $100 TEMPORARY_VARIABLE $32
13263! ;
13264  VARIABLE = "TargetBuy";
13265  PARENT = "";
13266  FORMAT = "";
13267  TYPE = "";
13268  LEVEL = '';
13269  PROPERTY = "TARGET";
13270  MEASUREMENT = "BINARY";
13271  LAST_LEVEL = '';
13272  GEN_VAR_IN_TEMP_DATA = "TargetBuy";
13273  RESULT_MEAN = "";
13274  RESULT_MEAN_LABEL = "";
13275  RESULT_MIN = "";
13276  RESULT_MIN_LABEL = "";
13277  MIN_ADJUSTED = "";
13278  RESULT_MAX = "";
13279  RESULT_MAX_LABEL = "";
13280  MAX_ADJUSTED = "";
13281  RESULT_COUNT = "";
13282  RESULT_COUNT_LABEL = "";
13283  TEMPORARY_VARIABLE = "TargetBuy_FsNJtcnosGtu1yz";
13284  output;
13285  VARIABLE = "F_TargetBuy_1";
13286  FORMAT = "";
13287  TYPE = "";
13288  PARENT = "F_TargetBuy";
13289  LEVEL = "1";
13290  PROPERTY = "TARGET_LEVEL";
13291  MEASUREMENT = "INTERVAL";
13292  LAST_LEVEL = "0";
13293  GEN_VAR_IN_TEMP_DATA = "F_TargetBuy_1_ffpYSsaNPV3CSSK";
13294  RESULT_MEAN = "F_TargetBu_mean_QaAgO_PRDL5Q5og";
13295  /* adjust for tied cases */
13296  RESULT_MEAN_LABEL = "";
13297  RESULT_MIN = "";
13298  RESULT_MIN_LABEL = "";
13299  RESULT_MAX = "";
13300  RESULT_MAX_LABEL = "";
13301  RESULT_COUNT = "NumberOfEvents";
13302  RESULT_COUNT_LABEL = "%sysfunc(sasmsg(sashelp.dmine, assmt_NumEvent_vlabel, NOQUOTE))";
13303  TEMPORARY_VARIABLE = "F_TargetBuy_1_gahHj3N_NwsYhnI";
13304  output;
13305  VARIABLE = "F_TargetBuy_0";
13306  FORMAT = "";
13307  TYPE = "";
13308  PARENT = "F_TargetBuy";
13309  LEVEL = "0";
13310  PROPERTY = "TARGET_LEVEL";
13311  MEASUREMENT = "INTERVAL";
13312  LAST_LEVEL = "0";
13313  GEN_VAR_IN_TEMP_DATA = "F_TargetBuy_0_HwLsiSsHqguCgZp";
13314  RESULT_MEAN = "F_TargetBu_mean_AHIgiOrT_4MMdMd";
13315  /* adjust for tied cases */
13316  RESULT_MEAN_LABEL = "";
13317  RESULT_MIN = "";
13318  RESULT_MIN_LABEL = "";
13319  RESULT_MAX = "";
13320  RESULT_MAX_LABEL = "";
13321  RESULT_COUNT = "NumberOfEvents";
13322  RESULT_COUNT_LABEL = "%sysfunc(sasmsg(sashelp.dmine, assmt_NumEvent_vlabel, NOQUOTE))";
13323  TEMPORARY_VARIABLE = "F_TargetBuy_0_8luURjL_E673ylZ";
13324  output;
13325  VARIABLE = "P_TargetBuy1";
13326  FORMAT = "";
13327  TYPE = "";
13328  PARENT = "";
13329  LEVEL = "1";
13330  PROPERTY = "POSTERIOR_LEVEL";
13331  MEASUREMENT = "INTERVAL";
13332  LAST_LEVEL = "";
13333  GEN_VAR_IN_TEMP_DATA = "P_TargetBuy1";
13334  RESULT_MEAN = "_meanP_";
13335  RESULT_MEAN_LABEL = "%sysfunc(sasmsg(sashelp.dmine, assmt_probMean_vlabel, NOQUOTE))";
13336  RESULT_MIN = "_minP_";
13337  RESULT_MIN_LABEL = "%sysfunc(sasmsg(sashelp.dmine, assmt_probMin_vlabel, NOQUOTE))";
13338  MIN_ADJUSTED = "P_Target_minAdjusted__HwbVdMaZ";
13339  RESULT_MAX = "_maxP_";
13340  RESULT_MAX_LABEL = "%sysfunc(sasmsg(sashelp.dmine, assmt_probMax_vlabel, NOQUOTE))";
13341  MAX_ADJUSTED = "P_Target_maxAdjusted_H2_VCAfO3";
13342  RESULT_COUNT = "";
13343  RESULT_COUNT_LABEL = "";
13344  TEMPORARY_VARIABLE = "P_TargetBuy1_hWg6OLxrMn2IFsU";
13345  output;
13346  VARIABLE = "P_TargetBuy0";
13347  FORMAT = "";
13348  TYPE = "";
13349  PARENT = "";
13350  LEVEL = "0";
13351  PROPERTY = "POSTERIOR_LEVEL";
13352  MEASUREMENT = "INTERVAL";
13353  LAST_LEVEL = "";
13354  GEN_VAR_IN_TEMP_DATA = "P_TargetBuy0";
13355  RESULT_MEAN = "_meanP_";
13356  RESULT_MEAN_LABEL = "%sysfunc(sasmsg(sashelp.dmine, assmt_probMean_vlabel, NOQUOTE))";
13357  RESULT_MIN = "_minP_";
13358  RESULT_MIN_LABEL = "%sysfunc(sasmsg(sashelp.dmine, assmt_probMin_vlabel, NOQUOTE))";
13359  MIN_ADJUSTED = "P_Target_minAdjusted_3IYUlcPa1";
13360  RESULT_MAX = "_maxP_";
13361  RESULT_MAX_LABEL = "%sysfunc(sasmsg(sashelp.dmine, assmt_probMax_vlabel, NOQUOTE))";
13362  MAX_ADJUSTED = "P_Target_maxAdjusted_CWj_o5z0E";
13363  RESULT_COUNT = "";
13364  RESULT_COUNT_LABEL = "";
13365  TEMPORARY_VARIABLE = "P_TargetBuy0_7ptWI8YKRVft4mF";
13366  output;
13367  run;

NOTE: The data set WORK.ASSESS_244AD2I_ASSESSMETA_C43VLE has 5 observations and 20 variables.
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
      

13368  /* Generate temporary dataset and obtain summary statistics such as total number of   */
13369  /* obserations, frequency of target.  However, summary statistics for class reporting */
13370  /* variabels are not computed here since if there exist class reporting variables,    */
13371  /* then PROC DMDB will be called. And there is no need to compute interval reporting  */
13372  /* summary statisitcs, if any.                                                        */
13373  data work.ASSESS_244AD2I_normSD_TBVYbM(drop=
13374  _numberOfObservation_
13375  _levelFrequency_1
13376  _levelFrequency_2
13377  )
13378  work.ASSESS_244AD2I_meansAndTi_b5JgUu (keep=
13379  _numberOfObservation_
13380  _levelFrequency_1
13381  _levelFrequency_2
13382  );
13383  set EMWS1.Reg3_TRAIN(
13384  where=(
13385  (TargetBuy ^= .)
13386  )
13387  ) end=_lastObservation_;
13388  keep frequency_v65Weh;
13389  frequency_v65Weh = 1;
13390  keep I_TargetBuy F_TargetBuy;
13391  keep F_TargetBuy_1_ffpYSsaNPV3CSSK;
13392  if (F_TargetBuy = '1') then do;
13393  F_TargetBuy_1_ffpYSsaNPV3CSSK = 1;
13394  end;
13395  else do;
13396  F_TargetBuy_1_ffpYSsaNPV3CSSK = 0;
13397  end;
13398  keep F_TargetBuy_0_HwLsiSsHqguCgZp;
13399  if (F_TargetBuy = '0') then do;
13400  F_TargetBuy_0_HwLsiSsHqguCgZp = 1;
13401  end;
13402  else do;
13403  F_TargetBuy_0_HwLsiSsHqguCgZp = 0;
13404  end;
13405  keep P_TargetBuy1;
13406  keep P_TargetBuy0;
13407  output work.ASSESS_244AD2I_normSD_TBVYbM;
13408  keep _numberOfObservation_;
13409  retain _numberOfObservation_ 0;
13410  _numberOfObservation_ + frequency_v65Weh;
13411  keep _levelFrequency_1;
13412  retain _levelFrequency_1 0;
13413  if (F_TargetBuy = '1') then do;
13414  _levelFrequency_1 + frequency_v65Weh;
13415  end;
13416  keep _levelFrequency_2;
13417  retain _levelFrequency_2 0;
13418  if (F_TargetBuy = '0') then do;
13419  _levelFrequency_2 + frequency_v65Weh;
13420  end;
13421  if _lastObservation_ then do;
13422  output work.ASSESS_244AD2I_meansAndTi_b5JgUu;
13423  end;
13424  run;

NOTE: There were 893 observations read from the data set EMWS1.PART3_TRAIN.
NOTE: View EMWS1.REG3_TRAIN.VIEW used (Total process time):
      real time           0.12 seconds
      cpu time            0.10 seconds
      
NOTE: There were 893 observations read from the data set EMWS1.IMPT2_TRAIN.
NOTE: There were 893 observations read from the data set EMWS1.REG3_TRAIN.
      WHERE TargetBuy not = .;
NOTE: The data set WORK.ASSESS_244AD2I_NORMSD_TBVYBM has 893 observations and 7 variables.
NOTE: The data set WORK.ASSESS_244AD2I_MEANSANDTI_B5JGUU has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.15 seconds
      cpu time            0.12 seconds
      

13425  data WORK._EMRANK;
13426  set EMWS1.MdlComp_EMRANK;
13427  where MODEL = "Reg3" and TARGET = "TargetBuy" and dataRole="TRAIN";
13428  run;

NOTE: There were 20 observations read from the data set EMWS1.MDLCOMP_EMRANK.
      WHERE (MODEL='Reg3') and (TARGET='TargetBuy') and (dataRole='TRAIN');
NOTE: The data set WORK._EMRANK has 20 observations and 38 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

13429  data work._augment;
13430  do BIN= 1 to 20;
13431  DECILE = BIN*5;
13432  output;
13433  end;
13434  run;

NOTE: The data set WORK._AUGMENT has 20 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

13435  data WORK._EMRANK;
13436  merge WORK._AUGMENT WORK._EMRANK;
13437  by BIN;
13438  run;

NOTE: There were 20 observations read from the data set WORK._AUGMENT.
NOTE: There were 20 observations read from the data set WORK._EMRANK.
NOTE: The data set WORK._EMRANK has 20 observations and 38 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

13439  data WORK._EMRANK;
13440  set WORK._EMRANK end=_lastObservation_;
13441  retain _previousMinP_ _previousMaxP_;
13442  retain _group_ 1;
13443  keep event;
13444  keep bin _cutoff_ _group_;
13445  if (bin > 1) then do;
13446  bin = bin - 1;
13447  _cutoff_ = (_maxP_ + _previousMinP_) / 2;
13448  if (abs(_previousMaxP_ - _previousMinP_) < 1E-6) then do;
13449  /* tied */
13450  _cutoff_ = max((_minP_ + _maxP_)/2, min(_cutoff_, _previousMinP_/*-1E-6*/
13451  ));
13452  end;
13453  else if (abs(_maxP_ - _minP_) < 1E-6) then do;
13454  /* next tied */
13455  _cutoff_ = min((_previousMinP_ + _previousMaxP_)/2, max(_cutoff_, _maxP_/*+ 1E-6*/
13456  ));
13457  end;
13458  output;
13459  *if ( abs((_maxP_ +_minP_)/2 - (_previousMaxP_ + _previousMinP_)/2) > 1E-6) then do;
13460  * _group_ + 1;
13461  *end;
13462  if (_maxP_ le _previousMinP_ - 1E-6) then do;
13463  _group_ + 1;
13464  end;
13465  else if (abs(_maxP_ - _previousMinP_) < 1E-6) then do;
13466  if (abs(_maxP_ - _minP_) > 1E-6) then do;
13467  _group_ + 1;
13468  end;
13469  end;
13470  bin + 1;
13471  /* correct the previous change */
13472  end;
13473  if (_lastObservation_) then do;
13474  _cutoff_ = .;
13475  output;
13476  end;
13477  _previousMinP_ = _minP_;
13478  _previousMaxP_ = _maxP_;
13479  run;

NOTE: There were 20 observations read from the data set WORK._EMRANK.
NOTE: The data set WORK._EMRANK has 20 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

13480  data WORK._EMRANK;
13481  set WORK._EMRANK;
13482  by _group_;
13483  retain _start_;
13484  if (first._group_) then do;
13485  _start_ = _n_;
13486  end;
13487  if (last._group_) then do;
13488  _end_ = _n_;
13489  output;
13490  end;
13491  run;

NOTE: There were 20 observations read from the data set WORK._EMRANK.
NOTE: The data set WORK._EMRANK has 20 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

NOTE: This SAS session is using a registry in WORK.  All changes will be lost at the end of 
      this session.
13492  filename emflow "D:\Nida\Data
13492! mining\datamining\BOGO\Workspaces\EMWS1\MdlComp\EMFLOWSCORE.sas";
13493  *------------------------------------------------------------*;
13494  * MdlComp: Scoring REG3_TRAIN data;
13495  *------------------------------------------------------------*;
13496  data EMWS1.MdlComp_TRAIN
13497  / view=EMWS1.MdlComp_TRAIN
13498  ;
13499  set EMWS1.Reg3_TRAIN
13500  ;
13501  %inc emflow;
13581  run;

NOTE: DATA STEP view saved on file EMWS1.MDLCOMP_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS1.REG3_TRAIN.VIEW used (Total process time):
      real time           0.10 seconds
      cpu time            0.10 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.12 seconds
      cpu time            0.12 seconds
      

13582  quit;
13583  filename emflow;
NOTE: Fileref EMFLOW has been deassigned.

13584  filename emflow "D:\Nida\Data
13584! mining\datamining\BOGO\Workspaces\EMWS1\MdlComp\EMFLOWSCORE.sas";
13585  *------------------------------------------------------------*;
13586  * MdlComp: Scoring REG3_VALIDATE data;
13587  *------------------------------------------------------------*;
13588  data EMWS1.MdlComp_VALIDATE
13589  / view=EMWS1.MdlComp_VALIDATE
13590  ;
13591  set EMWS1.Reg3_VALIDATE
13592  ;
13593  %inc emflow;
13673  run;

NOTE: DATA STEP view saved on file EMWS1.MDLCOMP_VALIDATE.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS1.REG3_VALIDATE.VIEW used (Total process time):
      real time           0.09 seconds
      cpu time            0.07 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.10 seconds
      cpu time            0.09 seconds
      

13674  quit;
13675  filename emflow;
NOTE: Fileref EMFLOW has been deassigned.

13676  *------------------------------------------------------------*;
13677  * MdlComp: Computing metadata for TRAIN data;
13678  *------------------------------------------------------------*;

NOTE: View EMWS1.MDLCOMP_TRAIN.VIEW used (Total process time):
      real time           0.18 seconds
      cpu time            0.18 seconds
      
NOTE: View EMWS1.MDLCOMP_TRAIN.VIEW used (Total process time):
      real time           0.14 seconds
      cpu time            0.14 seconds
      
NOTE: View EMWS1.MDLCOMP_VALIDATE.VIEW used (Total process time):
      real time           0.14 seconds
      cpu time            0.14 seconds
      
