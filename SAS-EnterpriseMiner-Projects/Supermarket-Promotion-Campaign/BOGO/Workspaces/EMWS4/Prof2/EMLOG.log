*------------------------------------------------------------*
User:                Mohamed
Date:                May 09, 2018
Time:                15:16:32
Site:                12400032
Platform:            X64_10HOME
Maintenance Release: 9.04.01M4P110916
EM Version:          14.2
* 
*------------------------------------------------------------*
* Training Log
Date:                May 09, 2018
Time:                15:16:18
*------------------------------------------------------------*
15253  proc freq data=EMWS4.Prof2_VariableSet noprint;
15254  table ROLE*LEVEL/out=WORK.Prof2META;
15255  run;
 
NOTE: There were 30 observations read from the data set EMWS4.PROF2_VARIABLESET.
NOTE: The data set WORK.PROF2META has 8 observations and 4 variables.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
 
 
15256  proc print data=WORK.Prof2META label noobs;
15257  var ROLE LEVEL COUNT;
15258  label ROLE = "%sysfunc(sasmsg(sashelp.dmine, meta_role_vlabel, NOQUOTE))" LEVEL = "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" COUNT = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel, NOQUOTE))";
15259  title9 ' ';
15260  title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_varSummary_title  , NOQUOTE))";
15261  run;
 
NOTE: There were 8 observations read from the data set WORK.PROF2META.
NOTE: The PROCEDURE PRINT printed page 1.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
15262  title10;
 
15263  %let EMEXCEPTIONSTRING=;
PERFORMANCE  DETAILS
15598  *------------------------------------------------------------*;
15599  * Prof2: Generation of macros and macro variables;
15600  * To see the code generated, set the EM_DEBUG macro variable to SOURCE or _ALL_;
15601  *------------------------------------------------------------*;
 
15602  %let EMEXCEPTIONSTRING=;
15603  *------------------------------------------------------------*;
15604  * TRAIN: Prof2;
15605  *------------------------------------------------------------*;
15606  %let EM_ACTION = TRAIN;
15607  %let syscc = 0;
15608  %macro main;
15609     %if %sysfunc(indexw(&EM_DEBUG, _ALL_)) or %sysfunc(indexw(&EM_DEBUG, SOURCE)) %then %do;
15610         options MPRINT;
15611     %end;
15612
15613     filename temp catalog 'sashelp.emexpl.profile_macros.source';
15614     %include temp;
15615     filename temp;
15616
15617     /* Initialize property macro variables */
15618     %SetProperties;
15619
15620     %if %upcase(&EM_ACTION) = CREATE %then %do;
15621
15622         filename temp catalog 'sashelp.emexpl.profile_create.source';
15623         %include temp;
15624         filename temp;
15625         %create;
15626     %end;
15627     %else
15628     %if %upcase(&EM_ACTION) = TRAIN %then %do;
15629
15630         filename temp catalog 'sashelp.emexpl.profile_train.source';
15631         %include temp;
15632         filename temp;
15633         %train;
15634     %end;
15635  %mend main;
15636
15637  %main;
NOTE: %INCLUDE (level 1) file TEMP is file SASHELP.EMEXPL.PROFILE_MACROS.SOURCE.
15638 +%macro SetProperties;
15639 +   %em_checkmacro(name=EM_PROPERTY_PROFILEALL,         global=Y, value=N);
15640 +   %em_checkmacro(name=EM_PROPERTY_USEREPORTVARS,      global=Y, value=Y);
15641 +   %em_checkmacro(name=EM_PROPERTY_OTHERPERCENTCUTOFF, global=Y, value=95);
15642 +   %em_checkmacro(name=EM_PROPERTY_TARGETROLE,         global=Y, value=NONE);
15643 +   %em_checkmacro(name=EM_PROPERTY_NUMHISTBARS,        global=Y, value=8);
15644 +   %em_checkmacro(name=EM_PROPERTY_MINWORTH,           global=Y, value=0.01);
15645 +   %em_checkmacro(name=EM_PROPERTY_MAXDEPTH,           global=Y, value=1);
15646 +   %em_checkmacro(name=EM_PROPERTY_MAXNUMREPORT,       global=Y, value=10);
15647 +   %em_checkmacro(name=EM_PROPERTY_MAXNUMINPUT,        global=Y, value=10);
15648 +   %em_checkmacro(name=EM_PROPERTY_PRINTWORTH,         global=Y, value=Y);
15649 +%mend SetProperties;
15650 +
15651 +
15652 +%macro makeVarMacros(level= );
15653 +
15654 +    %let numvars = 0;
15655 +    %let where   = '';
15656 +
15657 +    %if (%upcase(&EM_PROPERTY_TARGETROLE) eq INPUT) %then
15658 +        %let where = (ROLE = 'REJECTED' and LEVEL="&level" and USE='Y') or (ROLE in('INPUT', 'TARGET') and LEVEL="&level"  and USE in('Y', 'D'));
15659 +    %else
15660 +        %let where = (ROLE = 'REJECTED' and LEVEL="&level" and USE='Y') or (ROLE ='INPUT' and LEVEL="&level" and USE in('Y', 'D'));
15661 +
15662 +    %if &level = INTERVAL %then %do;
15663 +        %let numvars = %eval( &EM_NUM_INTERVAL_INPUT + &EM_NUM_INTERVAL_REJECTED);
15664 +        %if (%upcase(&EM_PROPERTY_TARGETROLE) eq INPUT) %then
15665 +             %let numvars = %eval(&numvars + &EM_NUM_INTERVAL_TARGET);
15666 +    %end;
15667 +    %else %do;
15668 +        %if &level = NOMINAL %then %do;
15669 +            %let numvars = %eval(&EM_NUM_BINARY_INPUT + &EM_NUM_NOMINAL_INPUT +  &EM_NUM_BINARY_REJECTED + &EM_NUM_NOMINAL_REJECTED);
15670 +             %if (%upcase(&EM_PROPERTY_TARGETROLE) eq INPUT) %then %do;
15671 +                 %let numvars = %eval(&numvars + &EM_NUM_BINARY_TARGET + &EM_NUM_NOMINAL_TARGET);
15672 +                 %let where = (ROLE = 'REJECTED' and LEVEL in('NOMINAL', 'BINARY') and USE='Y') or (ROLE in('INPUT', 'TARGET') and LEVEL in('NOMINAL', 'BINARY') and USE in('Y', 'D'));
15673 +             %end;
15674 +             %else
15675 +                 %let where = (ROLE = 'REJECTED' and LEVEL in('NOMINAL', 'BINARY') and USE='Y') or (ROLE ='INPUT' and LEVEL in("NOMINAL", "BINARY") and USE in('Y', 'D'));
15676 +
15677 +        %end;
15678 +        %else %do;
15679 +            %let numvars = %eval(&EM_NUM_ORDINAL_INPUT + &EM_NUM_ORDINAL_REJECTED);
15680 +            %if (%upcase(&EM_PROPERTY_TARGETROLE) eq INPUT) %then
15681 +                %let numvars = %eval(&numvars + &EM_NUM_ORDINAL_TARGET);
15682 +        %end;
15683 +    %end;
15684 +
15685 +    %if &numvars>0 %then %do;
15686 +         %let numloop = %sysfunc(ceil(&numvars/10000));
15687 +         %let loopcount = 0;
15688 +
15689 +         %do %while((&numloop - &loopcount) > 0);
15690 +             %let first = %eval((&loopcount*10000) + 1);
15691 +             %let last  = %eval(&first + 10000);
15692 +             %let loopcount = %eval(&loopcount +1);
15693 +             %let centry = &EM_LIB..&EM_NODEID._MACS.&LEVEL._&loopcount..SOURCE;
15694 +             filename X catalog "&centry";
15695 +             data _null_;
15696 +                length _STRING_ $80;
15697 +                retain _STRING_ ;
15698 +                file X;
15699 +                set &EM_DATA_VARIABLESET(firstobs=&first obs=&last) end=eof;
15700 +
15701 +                where &where;
15702 +
15703 +                if _N_=1 then
15704 +                   put '%macro _PROFVAR;';
15705 +
15706 +                if (length(_STRING_) + length(trim(NAME))+ 1  < 80) then do;
15707 +                   _STRING_ = trim(_STRING_)!!' '!!trim(NAME);
15708 +                   if eof then do;
15709 +                      put _STRING_;
15710 +                      put '%mend _PROFVAR;';
15711 +                   end;
15712 +                end;
15713 +                else do;
15714 +                   put _STRING_;
15715 +                  _string_ = TRIM(NAME);
15716 +                   if eof then do;
15717 +                      put _string_;
15718 +                      put '%mend _PROFVAR;';
15719 +                   end;
15720 +                end;
15721 +             run;
15722 +             filename X;
15723 +         %end;
15724 +    %end;
15725 +
15726 +%mend makeVarMacros;
15727 +
15728 +
NOTE: %INCLUDE (level 1) ending.
NOTE: Fileref TEMP has been deassigned.
NOTE: %INCLUDE (level 1) file TEMP is file SASHELP.EMEXPL.PROFILE_TRAIN.SOURCE.
15729 +%macro _looparbor(level=, target=, rules=);
15730 +    %local where;
15731 +
15732 +    %if (&level eq or &target eq ) %then %goto doenda;
15733 +    %if &rules eq %then &rules = _TEMPRULE;
15734 +
15735 +    %let lnumvars = 0;
15736 +    %let where   = '';
15737 +
15738 +    %if &level = INTERVAL %then %do;
15739 +        %let lnumvars = %eval(&EM_NUM_INTERVAL_INPUT + &EM_NUM_INTERVAL_REJECTED);
15740 +        %if (%upcase(&EM_PROPERTY_TARGETROLE) eq INPUT) %then
15741 +             %let lnumvars = %eval(&lnumvars + &EM_NUM_INTERVAL_TARGET);
15742 +    %end;
15743 +    %else %do;
15744 +        %if &level = NOMINAL %then %do;
15745 +            %let lnumvars = %eval(&EM_NUM_BINARY_INPUT + &EM_NUM_NOMINAL_INPUT + &EM_NUM_BINARY_REJECTED + &EM_NUM_NOMINAL_REJECTED);
15746 +             %if  (%upcase(&EM_PROPERTY_TARGETROLE) eq INPUT) %then
15747 +                 %let lnumvars = %eval(&lnumvars + &EM_NUM_BINARY_TARGET + &EM_NUM_NOMINAL_TARGET);
15748 +        %end;
15749 +        %else %do;
15750 +            %let lnumvars = %eval(&EM_NUM_ORDINAL_INPUT + &EM_NUM_ORDINAL_REJECTED);
15751 +            %if  (%upcase(&EM_PROPERTY_TARGETROLE) eq INPUT) %then
15752 +                %let lnumvars = %eval(&lnumvars + &EM_NUM_ORDINAL_TARGET);
15753 +        %end;
15754 +    %end;
15755 +
15756 +    %if &lnumvars>0 %then %do;
15757 +         %let numloop = %sysfunc(ceil(&lnumvars/10000));
15758 +         %let loopcount = 0;
15759 +
15760 +         %do %while((&numloop - &loopcount) > 0);
15761 +             %let loopcount = %eval(&loopcount +1);
15762 +             %let centry = &EM_LIB..&EM_NODEID._MACS.&LEVEL._&loopcount..SOURCE;
15763 +             filename X catalog "&centry";
15764 +             %inc X;
15765 +
15766 +             proc arbor data=&EM_NODEID._TMP
15767 +
15768 +             %if &EM_PROPERTY_MAXDEPTH = 1 %then %do;
15769 +                 Criterion=GINI Leafsize=5 Mincatsize = 5
15770 +                 Maxbranch=5 Maxdepth=1
15771 +                 NORULELIMIT MAXRULES=&EM_PROPERTY_MAXNUMINPUT
15772 +             %end;
15773 +             %else %do;
15774 +                 Criterion=PROBCHISQ alpha=0.2 Leafsize=5 Mincatsize = 5
15775 +                 Maxbranch=5 Maxdepth=&EM_PROPERTY_MAXDEPTH
15776 +                 MAXRULES=5 Padjust= CHAIDBEFORE DEPTH
15777 +             %end;
15778 +
15779 +              MAXSURRS=0 Missing=USEINSEARCH Exhaustive=5000;
15780 +
15781 +                input %_PROFVAR
15782 +
15783 +                    / level = &level;
15784 +                target _SEG / level=binary;
15785 +
15786 +                Performance Disk NodeSize=10000;
15787 +                Assess NoValidata measure=MISC;
15788 +                SUBTREE BEST;
15789 +
15790 +                %if &EM_PROPERTY_MAXDEPTH > 1 %then %do;
15791 +                    save IMPORTANCE=_LOOPTEMPRULE;
15792 +                %end;
15793 +                %else %do;
15794 +                    save RULES=_LOOPTEMPRULE;
15795 +                %end;
15796 +             run;
15797 +             quit;
15798 +
15799 +             %if %sysfunc(exist(_LOOPTEMPRULE)) %then %do;
15800 +                 proc append base=&RULES data=_LOOPTEMPRULE force;
15801 +                 run;
15802 +                 proc datasets lib=work nolist mt=(DATA VIEW);
15803 +                    delete _LOOPTEMPRULE;
15804 +                 run;
15805 +                 quit;
15806 +             %end;
15807 +
15808 +
15809 +             filename X;
15810 +         %end;
15811 +     %end;
15812 +
15813 +   %doenda:
15814 +
15815 +%mend _looparbor;
15816 +
15817 +%macro _arbor(target=, rules=, fit=);
15818 +   %local _numnomvars _numordvars _numintvars;
15819 +
15820 +   %if &target eq  %then %goto doendc;
15821 +   %if &rules eq %then &rules = _TEMPRULE;
15822 +   %if &fit   eq %then &fit   = _FIT;
15823 +
15824 +   %let _numintvars = %eval(&EM_NUM_INTERVAL_INPUT + &EM_NUM_INTERVAL_REJECTED);
15825 +   %if  (%upcase(&EM_PROPERTY_TARGETROLE) eq INPUT) %then
15826 +       %let _numintvars = %eval(&_numintvars + &EM_NUM_INTERVAL_TARGET);
15827 +
15828 +
15829 +   %let _numnomvars =  %eval(&EM_NUM_BINARY_INPUT + &EM_NUM_NOMINAL_INPUT + &EM_NUM_BINARY_REJECTED + &EM_NUM_NOMINAL_REJECTED);
15830 +   %if  (%upcase(&EM_PROPERTY_TARGETROLE) eq INPUT) %then
15831 +       %let _numnomvars = %eval(&_numnomvars + &EM_NUM_BINARY_TARGET + &EM_NUM_NOMINAL_TARGET);
15832 +
15833 +   %let _numordvars = %eval(&EM_NUM_ORDINAL_INPUT + &EM_NUM_ORDINAL_REJECTED);
15834 +   %if  (%upcase(&EM_PROPERTY_TARGETROLE) eq INPUT) %then
15835 +       %let _numordvars = %eval(&_numordvars + &EM_NUM_ORDINAL_TARGET);
15836 +
15837 +   proc arbor data=&EM_NODEID._TMP
15838 +
15839 +   %if &EM_PROPERTY_MAXDEPTH = 1 %then %do;
15840 +      Criterion=GINI Leafsize=5 Mincatsize = 5
15841 +      Maxbranch=5 Maxdepth=1
15842 +      NORULELIMIT MAXRULES=&EM_PROPERTY_MAXNUMINPUT
15843 +   %end;
15844 +   %else %do;
15845 +      Criterion=PROBCHISQ alpha=0.2 Leafsize=5 Mincatsize = 5
15846 +      Maxbranch=2 Maxdepth=&EM_PROPERTY_MAXDEPTH
15847 +      MAXRULES=5 Padjust= CHAIDBEFORE DEPTH
15848 +   %end;
15849 +
15850 +      MAXSURRS=0 Missing=USEINSEARCH Exhaustive=5000;
15851 +
15852 +      %if &_numintvars %then %do;
15853 +          input %EM_INTERVAL_INPUT %EM_INTERVAL_REJECTED
15854 +
15855 +          %if  (%upcase(&EM_PROPERTY_TARGETROLE) eq INPUT) %then %do;
15856 +              %EM_INTERVAL_TARGET
15857 +          %end;
15858 +
15859 +              / level = interval;
15860 +      %end;
15861 +
15862 +
15863 +      %if &_numnomvars %then %do;
15864 +          input %EM_BINARY_INPUT %EM_NOMINAL_INPUT %EM_BINARY_REJECTED %EM_NOMINAL_REJECTED
15865 +
15866 +          %if  (%upcase(&EM_PROPERTY_TARGETROLE) eq INPUT) %then %do;
15867 +              %EM_BINARY_TARGET %EM_NOMINAL_TARGET
15868 +          %end;
15869 +
15870 +              / level = nominal;
15871 +      %end;
15872 +
15873 +      %if &_numordvars %then %do;
15874 +         input %EM_ORDINAL_INPUT %EM_ORDINAL_REJECTED
15875 +
15876 +         %if  (%upcase(&EM_PROPERTY_TARGETROLE) eq INPUT) %then %do;
15877 +              %EM_ORDINAL_TARGET
15878 +         %end;
15879 +
15880 +             / level = ordinal;
15881 +      %end;
15882 +
15883 +      target _SEG / level=binary;
15884 +
15885 +      Performance Disk NodeSize=10000;
15886 +      Assess
15887 +
15888 +       %if %sysfunc(exist(&EM_NODEID._VALIDTMP, VIEW))>0 %then %do;
15889 +          Validata=&EM_NODEID._VALIDTMP
15890 +      %end;
15891 +      %else %do;
15892 +          NoValidata
15893 +      %end;
15894 +
15895 +      measure=MISC;
15896 +      SUBTREE BEST;
15897 +
15898 +      %if &EM_PROPERTY_MAXDEPTH > 1 %then %do;
15899 +          SCORE data=&EM_NODEID._TMP  out=_NULL_ outfit=_FIT
15900 +                role=TRAIN;
15901 +          %if %sysfunc(exist(&EM_NODEID._VALIDTMP, VIEW))>0 %then %do;
15902 +          SCORE data=&EM_NODEID._VALIDTMP  out=_NULL_ outfit=_FIT2
15903 +                role=VALID;
15904 +          %end;
15905 +
15906 +          save IMPORTANCE=_RULE;
15907 +      %end;
15908 +      %else %do;
15909 +          save RULES=_RULE;
15910 +      %end;
15911 +
15912 +      ;
15913 +   run;
15914 +   quit;
15915 +
15916 +   %if %sysfunc(exist(_RULE)) %then %do;
15917 +       proc append base=&RULES data=_RULE force;
15918 +       run;
15919 +       proc datasets lib=work nolist mt=(DATA VIEW);
15920 +          delete _RULE;
15921 +       run;
15922 +       quit;
15923 +   %end;
15924 +
15925 +   %doendc:
15926 +
15927 +%mend _arbor;
15928 +
15929 +%macro tree_profile(SEGMENT=, _sizeDs=, _varsDs=, _fitDs=, _reportDs=);
15930 +   %put &EM_CODEBAR;
15931 +   %put * Filtering input variables ;
15932 +   %put * SEGMENT= &segment;
15933 +   %put &EM_CODEBAR;
15934 +
15935 +  %if _sizeDs eq %then %let _sizeDs = WORK._SEGMENTSIZE;
15936 +  %if _varsDs eq %then %let _varsDs = WORK._SELECTEDVARS;
15937 +  %if _fitDs  eq %then %let _fitDs  = WORK._FITSTAT;
15938 +
15939 +  %let _SEGMENT = &SEGMENT;
15940 +
15941 +  proc freq data=&EM_IMPORT_DATA noprint ;
15942 +    table &_segment / missing out=&_segment(keep=&_segment count percent) ;
15943 +
15944 +    %if %EM_FREQ ne %then %do;
15945 +        weight %EM_FREQ;
15946 +        where %EM_FREQ>=0;
15947 +    %end;
15948 +
15949 +  run ;
15950 +  proc sort data=&_segment;
15951 +     by descending count ;
15952 +  run ;
15953 +
15954 +  %let dsid       = %sysfunc(open(&_segment));
15955 +  %let segnum     = %sysfunc(varnum(&dsid, &_segment));
15956 +  %let _segtype   = %sysfunc(vartype(&dsid, &segnum));
15957 +  %let _segformat = %sysfunc(varfmt(&dsid, &segnum));
15958 +
15959 +  %let dsid=%sysfunc(close(&dsid));
15960 +
15961 +  %let SEGMENTS=;
15962 +  %let COUNTS=;
15963 +  %let OTHERWHERE=;
15964 +  %let numLevels=;
15965 +  data _segs;
15966 +     length SegmentVariable $32 SegmentValue $200;
15967 +     retain SegmentVariable "&_Segment";
15968 +     label SegmentVariable = "%sysfunc(sasmsg(sashelp.dmine, rpt_segmentvariable_vlabel,  NOQUOTE))"
15969 +           SegmentValue    = "%sysfunc(sasmsg(sashelp.dmine, rpt_segmentvalue_vlabel,  NOQUOTE))";
15970 +     drop &_segment cum othercount otherpct numLevels;
15971 +     retain cum othercount otherpct numLevels 0;
15972 +     format Count 8.;
15973 +     set &_segment end=eof;
15974 +
15975 +     %if &_segformat ne %then %do;
15976 +         SegmentValue= left(put(&_segment, &_segformat));
15977 +     %end;
15978 +     %else %do;
15979 +        %if &_segtype = N %then %do;
15980 +            SegmentValue= left(put(&_segment, best12.));
15981 +        %end;
15982 +        %else %do;
15983 +            SegmentValue = &_segment;
15984 +        %end;
15985 +     %end;
15986 +
15987 +     %if &EM_PROPERTY_PROFILEALL eq Y %then %do;
15988 +        call symput('SEGMENTS'!!strip(put(_N_,BEST.)), strip(tranwrd(SegmentValue, '"','""'))) ;
15989 +        call symput('COUNTS' !!strip(put(_N_,BEST.)),  strip(put(count, best.))) ;
15990 +        numLevels + 1;
15991 +        output;
15992 +     %end;
15993 +     %else %do;
15994 +         if (cum < &EM_PROPERTY_OTHERPERCENTCUTOFF) or (trim(symget('OTHERWHERE')) eq ' ' and eof) then do;
15995 +            call symput('SEGMENTS'!!strip(put(_N_,BEST.)), strip(tranwrd(SegmentValue, '"','""'))) ;
15996 +            call symput('COUNTS' !!strip(put(_N_,BEST.)),  strip(put(count, best.))) ;
15997 +            numLevels + 1;
15998 +            output;
15999 +         end;
16000 +         else do;
16001 +            %if &_segtype = C or &_segformat ne %then %do;
16002 +                call symput('OTHERWHERE'  ,symget('OTHERWHERE'  ) !! ' ' !!
16003 +                                     quote(strip(tranwrd(SegmentValue, '"','""'))));
16004 +            %end;
16005 +            %else %do;
16006 +                call symput('OTHERWHERE'  ,symget('OTHERWHERE'  ) !! ' ' !! strip(SegmentValue));
16007 +            %end;
16008 +            othercount = othercount + count;
16009 +            otherpct   = otherpct + percent;
16010 +            if eof then do;
16011 +               SegmentValue = '_OTHER_';
16012 +               count   = othercount;
16013 +               percent = otherpct;
16014 +               numLevels + 1;
16015 +               call symput('SEGMENTS'!! strip(put(numLevels,BEST.)), '_OTHER_') ;
16016 +               call symput('COUNTS'  !! strip(put(numLevels,BEST.)),  strip(put(count, best.))) ;
16017 +               output;
16018 +            end;
16019 +         end;
16020 +         cum = cum + percent;
16021 +     %end;
16022 +     if eof then
16023 +        call symput('numLevels', strip(put(numLevels,BEST.))) ;
16024 +  run ;
16025 +
16026 +  title9 " " ;
16027 +  title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_frequency_title,  NOQUOTE, &_Segment))";
16028 +  proc print data=_segs noobs label ;
16029 +  run ;
16030 +  title9;
16031 +  title10;
16032 +
16033 +  proc append base=&_sizeDs data=_segs force;
16034 +  run;
16035 +
16036 +  %let numvars= %eval(&EM_NUM_INPUT + &EM_NUM_REJECTED);
16037 +  %if  (%upcase(&EM_PROPERTY_TARGETROLE) eq INPUT) %then
16038 +      %let numvars= %eval(&EM_NUM_INPUT + &EM_NUM_REJECTED + &EM_NUM_TARGET);
16039 +
16040 +  /* Loop over segments */
16041 +  %do i=1 %to &numLevels;
16042 +     %if ^&numvars %then %do;
16043 +         %if %sysfunc(exist(&_reportDs)) %then %do;
16044 +             data _TEMPRULE(keep=SegmentVariable SegmentValue Variable Rank Worth);
16045 +               label SegmentVariable = "%sysfunc(sasmsg(sashelp.dmine, rpt_segmentvariable_vlabel,  NOQUOTE))"
16046 +                     SegmentValue    = "%sysfunc(sasmsg(sashelp.dmine, rpt_segmentvalue_vlabel,  NOQUOTE))"
16047 +                     Variable        = "%sysfunc(sasmsg(sashelp.dmine, rpt_variable_vlabel,  NOQUOTE))"
16048 +                     Rank            = "%sysfunc(sasmsg(sashelp.dmine, rpt_rank_vlabel,  NOQUOTE))"
16049 +                     Worth           = "%sysfunc(sasmsg(sashelp.dmine, rpt_worth_vlabel,  NOQUOTE))";
16050 +                length SegmentVariable $32 SegmentValue $200;
16051 +                retain SegmentVariable "&_segment" SegmentValue "&&segments&i";
16052 +                set &_reportDs;
16053 +                Rank = _N_;
16054 +             run;
16055 +             proc append base=&_varsDs data=_TEMPRULE force;
16056 +             run;
16057 +         %end;
16058 +         %goto doskip;
16059 +     %end;
16060 +
16061 +     %if &_segformat ne %then %do;
16062 +         %if %nrbquote(&&segments&i) = _OTHER_ %then
16063 +             %let where= strip(put(&_segment, &_segformat)) in(&OTHERWHERE);
16064 +         %else
16065 +             %let where= strip(put(&_segment, &_segformat)) = "&&segments&i";
16066 +     %end;
16067 +     %else %do;
16068 +         %if %nrbquote(&&segments&i) = _OTHER_ %then
16069 +                 %let where= &_segment in(&OTHERWHERE);
16070 +         %else %do;
16071 +             %if &_segtype eq N %then
16072 +                 %let where= &_segment = &&segments&i;
16073 +             %else
16074 +                 %let where= &_segment = "&&segments&i";
16075 +         %end;
16076 +     %end;
16077 +
16078 +     data &EM_NODEID._TMP / view=&EM_NODEID._TMP ;
16079 +        set &EM_IMPORT_DATA(keep=%EM_INTERVAL_INPUT %EM_INTERVAL_REJECTED %EM_INTERVAL_TARGET
16080 +               %EM_BINARY_INPUT %EM_BINARY_REJECTED %EM_BINARY_TARGET
16081 +               %EM_ORDINAL_INPUT  %EM_NOMINAL_INPUT %EM_ORDINAL_REJECTED %EM_NOMINAL_REJECTED
16082 +               %EM_ORDINAL_TARGET %EM_NOMINAL_TARGET &_segment %EM_FREQ);
16083 +        if &where then
16084 +           _seg= 1 ;
16085 +        else
16086 +           _seg= 0 ;
16087 +     run ;
16088 +
16089 +      %if (&EM_IMPORT_VALIDATE ne ) and (%sysfunc(exist(&EM_IMPORT_VALIDATE)) or %sysfunc(exist(&EM_IMPORT_VALIDATE, VIEW))) %then %do;
16090 +          data &EM_NODEID._VALIDTMP / view=&EM_NODEID._VALIDTMP ;
16091 +             set &EM_IMPORT_VALIDATE(keep=%EM_INTERVAL_INPUT %EM_INTERVAL_REJECTED %EM_INTERVAL_TARGET
16092 +               %EM_BINARY_INPUT %EM_BINARY_REJECTED %EM_BINARY_TARGET
16093 +               %EM_ORDINAL_INPUT  %EM_NOMINAL_INPUT %EM_ORDINAL_REJECTED %EM_NOMINAL_REJECTED
16094 +               %EM_ORDINAL_TARGET %EM_NOMINAL_TARGET &_segment %EM_FREQ);
16095 +
16096 +             if &where then
16097 +                _seg= 1 ;
16098 +              else
16099 +                 _seg= 0 ;
16100 +          run ;
16101 +      %end;
16102 +
16103 +     %if  (%eval(&EM_NUM_INTERVAL_INPUT + &EM_NUM_INTERVAL_REJECTED + &EM_NUM_INTERVAL_TARGET +
16104 +               &EM_NUM_BINARY_INPUT + &EM_NUM_BINARY_REJECTED + &EM_NUM_BINARY_TARGET +
16105 +               &EM_NUM_ORDINAL_INPUT  + &EM_NUM_NOMINAL_INPUT + &EM_NUM_ORDINAL_REJECTED  + &EM_NUM_NOMINAL_REJECTED +
16106 +               &EM_NUM_ORDINAL_TARGET +  &EM_NUM_NOMINAL_TARGET) < 10000) %then %do;
16107 +         %_arbor(target=_SEG, rules=_TEMPRULE, FIT=_FIT);
16108 +     %end;
16109 +     %else %do;
16110 +        %_looparbor(level=INTERVAL, target=_SEG, rules=_TEMPRULE);
16111 +        %_looparbor(level=NOMINAL,  target=_SEG, rules=_TEMPRULE);
16112 +        %_looparbor(level=ORDINAL,  target=_SEG, rules=_TEMPRULE);
16113 +     %end;
16114 +
16115 +     /* Keeping the important variables */
16116 +     %if &EM_PROPERTY_MAXDEPTH = 1 %then %do;
16117 +         data _TEMPRULE(rename=(Name=Variable numeric_value=Worth));
16118 +            length Name $32;
16119 +            label Name = "%sysfunc(sasmsg(sashelp.dmine, rpt_variable_vlabel,  NOQUOTE))";
16120 +            retain Name;
16121 +
16122 +            set _temprule;
16123 +
16124 +            where stat in('VARIABLE','WORTH');
16125 +
16126 +            if stat = 'VARIABLE' then
16127 +               Name = character_value;
16128 +            else
16129 +               output;
16130 +         run;
16131 +
16132 +         proc sort data=_TEMPRULE;
16133 +            by descending Worth;
16134 +         run;
16135 +
16136 +         %if %sysfunc(exist(&_reportDs)) %then %do;
16137 +             data _TEMPRULE;
16138 +                set _TEMPRULE(obs=&EM_PROPERTY_MAXNUMINPUT) &_reportDs;
16139 +             run;
16140 +             proc sort data= _TEMPRULE nodupkey;
16141 +                by variable;
16142 +             run;
16143 +             proc sort data=_TEMPRULE;
16144 +                by descending Worth;
16145 +             run;
16146 +         %end;
16147 +         data _TEMPRULE(keep=SegmentVariable SegmentValue Variable Rank Worth);
16148 +              label SegmentVariable = "%sysfunc(sasmsg(sashelp.dmine, rpt_segmentvariable_vlabel,  NOQUOTE))"
16149 +                    SegmentValue    = "%sysfunc(sasmsg(sashelp.dmine, rpt_segmentvalue_vlabel,  NOQUOTE))"
16150 +                    Variable        = "%sysfunc(sasmsg(sashelp.dmine, rpt_variable_vlabel,  NOQUOTE))"
16151 +                    Rank            = "%sysfunc(sasmsg(sashelp.dmine, rpt_rank_vlabel,  NOQUOTE))"
16152 +                    Worth           = "%sysfunc(sasmsg(sashelp.dmine, rpt_worth_vlabel,  NOQUOTE))";
16153 +            length SegmentVariable $32 SegmentValue $200;
16154 +            retain SegmentVariable "&_segment" SegmentValue "&&segments&i";
16155 +            %if ^%sysfunc(exist(&_reportDs)) %then %do;
16156 +               set _TEMPRULE(obs=&EM_PROPERTY_MAXNUMINPUT);
16157 +            %end;
16158 +            %else %do;
16159 +                set _TEMPRULE;
16160 +            %end;
16161 +            Rank = _N_;
16162 +            if _N_=1 and worth ne . and (worth < &EM_PROPERTY_MINWORTH) then do;
16163 +               put "&EM_CODEBAR";
16164 +               put "* No input variable meet the minimum worth criterion of &EM_PROPERTY_MINWORTH.";
16165 +               put "* You may identify profile variables by lowering this threshold, ";
16166 +               put "* or by increasing the maximum depth of the decision tree used.";
16167 +               put "&EM_CODEBAR";
16168 +            end;
16169 +         run;
16170 +     %end;
16171 +     %else %do;
16172 +         %if %sysfunc(exist(&_reportDs)) %then %do;
16173 +             data _TEMPRULE;
16174 +                set _TEMPRULE(rename=(NAME=Variable) where=(IMPORTANCE >0)) &_reportDs;
16175 +             run;
16176 +             proc sort data= _TEMPRULE nodupkey;
16177 +                by variable;
16178 +             run;
16179 +             proc sort data=_TEMPRULE;
16180 +                by descending Importance;
16181 +             run;
16182 +         %end;
16183 +         data _TEMPRULE(keep=SegmentVariable SegmentValue Variable Rank Importance);
16184 +              label SegmentVariable = "%sysfunc(sasmsg(sashelp.dmine, rpt_segmentvariable_vlabel,  NOQUOTE))"
16185 +                  SegmentValue    = "%sysfunc(sasmsg(sashelp.dmine, rpt_segmentvalue_vlabel,  NOQUOTE))"
16186 +                  Variable        = "%sysfunc(sasmsg(sashelp.dmine, rpt_variable_vlabel,  NOQUOTE))"
16187 +                  Importance      = "%sysfunc(sasmsg(sashelp.dmine, rpt_importance_vlabel,  NOQUOTE))"
16188 +                  Rank            = "%sysfunc(sasmsg(sashelp.dmine, rpt_rank_vlabel,  NOQUOTE))";
16189 +            length SegmentVariable $32 SegmentValue $200;
16190 +            retain SegmentVariable "&_segment" SegmentValue "&&segments&i";
16191 +            %if ^%sysfunc(exist(&_reportDs)) %then %do;
16192 +               set _TEMPRULE(rename=(NAME=Variable) where=(IMPORTANCE >0));
16193 +            %end;
16194 +            %else %do;
16195 +                set _TEMPRULE;
16196 +            %end;
16197 +            Rank = _N_;
16198 +         run;
16199 +     %end;
16200 +
16201 +     title9 "%sysfunc(sasmsg(sashelp.dmine, rpt_worth_title,  NOQUOTE, &_Segment, &&segments&i, &&counts&i))";
16202 +     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_worth2_title,  NOQUOTE))";
16203 +
16204 +     %if &EM_PROPERTY_PRINTWORTH eq Y %then %do;
16205 +         %if &EM_PROPERTY_MAXDEPTH = 1 %then %do;
16206 +             proc print data=_TEMPRULE noobs label ;
16207 +                var Variable Worth Rank;
16208 +                where worth ne .;
16209 +             run ;
16210 +             data _TEMPRULE;
16211 +                set _TEMPRULE;
16212 +                where worth eq . or (worth >= &EM_PROPERTY_MINWORTH);
16213 +             run;
16214 +         %end;
16215 +         %else %do;
16216 +             proc print data=_TEMPRULE noobs label ;
16217 +                var Variable Importance Rank;
16218 +                where importance ne .;
16219 +             run ;
16220 +         %end;
16221 +
16222 +     %end ;
16223 +
16224 +     title9;
16225 +     title10;
16226 +
16227 +     proc append base=&_varsDs data=_TEMPRULE force;
16228 +     run;
16229 +
16230 +     %if %sysfunc(exist(_FIT)) %then %do;
16231 +         data _FIT;
16232 +            length SegmentVariable $32 SegmentValue $200;
16233 +            retain SegmentVariable "&_Segment" SegmentValue "&&segments&i";
16234 +
16235 +            %if %sysfunc(exist(_FIT2)) %then %do;
16236 +                merge _FIT(keep=_MISC_) _FIT2(keep=_VMISC_);
16237 +            %end;
16238 +            %else %do;
16239 +                set _FIT(keep=_MISC_);
16240 +            %end;
16241 +
16242 +         run;
16243 +         proc append base=&_fitDs data=_FIT force;
16244 +         run;
16245 +     %end;
16246 +
16247 +     %doskip:
16248 +
16249 +     proc datasets lib=work nolist mt=(DATA VIEW);
16250 +        delete _SEGS &EM_NODEID._TMP &EM_NODEID._VALIDTMP _STAT
16251 +
16252 +        %if %sysfunc(exist(_TEMPRULE)) %then %do;
16253 +            _TEMPRULE
16254 +        %end;
16255 +        %if %sysfunc(exist(_FIT))>0 %then %do;
16256 +            _FIT
16257 +        %end;
16258 +        %if %sysfunc(exist(_FIT2))>0 %then %do;
16259 +            _FIT2
16260 +        %end;
16261 +     ;
16262 +     run;
16263 +     quit;
16264 +  %end ;
16265 +%mend tree_profile;
16266 +
16267 +/* This macro loops over segment variables and determines important variables */
16268 +%macro em_profile(_segmentvar= , _sizeDS=WORK._SEGMENTSIZE,
16269 +                  _varsDs=WORK._SELECTEDVARS, _fitDs=WORK._FITSTAT, _reportDs=);
16270 +
16271 +    %if _sizeDs eq %then %let _sizeDs = WORK._SEGMENTSIZE;
16272 +    %if _varsDs eq %then %let _varsDs = WORK._SELECTEDVARS;
16273 +    %if _fitDs  eq %then %let _fitDs  = WORK._FITSTAT;
16274 +
16275 +    %if _segmentvar eq %then %do;
16276 +        %put &EM_CODEBAR;
16277 +        %put * No segment variable defined ;
16278 +        %put &EM_CODEBAR;
16279 +        %goto doendep;
16280 +    %end;
16281 +
16282 +    %let sndx = 0;
16283 +
16284 +    %let svar = &_segmentvar;
16285 +    %if &svar ne %then %do;
16286 +        %makeVarMacros(LEVEL=INTERVAL);
16287 +        %makeVarMacros(LEVEL=NOMINAL);
16288 +        %makeVarMacros(LEVEL=ORDINAL);
16289 +    %end;
16290 +
16291 +    %do %while(&svar ne );
16292 +        %let sndx= %eval(&sndx+1);
16293 +        %let svar = %scan(&_segmentvar, &sndx,' ');
16294 +        %if &svar ne %then
16295 +            %tree_profile(segment=&svar, _sizeDS=&_sizeDs, _varsDs=&_varsDs, _fitDs=&_fitDs, _reportDs=&_reportDs);
16296 +    %end ;
16297 +
16298 +    proc datasets lib=&EM_LIB nolist;
16299 +       delete &EM_NODEID._MACS(mt=catalog);
16300 +    run;
16301 +
16302 +    %doendep:
16303 +%mend em_profile;
16304 +
16305 +%macro segmentSummary(SEGMENT=, _VARSDS=, FormatFref=);
16306 +   %put &EM_CODEBAR;
16307 +   %put * Summarizing variables ;
16308 +   %put * SEGMENT= &segment;
16309 +   %put &EM_CODEBAR;
16310 +
16311 +  %if (&_varsDs eq ) or ^%sysfunc(exist(&_VARSDS)) or ^%sysfunc(exist(&segment)) %then %goto doends;
16312 +
16313 +  %let _SEGMENT = &SEGMENT;
16314 +
16315 +  %let dsid       = %sysfunc(open(&_segment));
16316 +  %let segnum     = %sysfunc(varnum(&dsid, &_segment));
16317 +  %let _segtype   = %sysfunc(vartype(&dsid, &segnum));
16318 +  %let _segformat = %sysfunc(varfmt(&dsid, &segnum));
16319 +
16320 +  %let dsid=%sysfunc(close(&dsid));
16321 +
16322 +  %let SEGMENTS=;
16323 +  %let COUNTS=;
16324 +  %let OTHERWHERE=;
16325 +  %let numLevels=;
16326 +  data _null_;
16327 +     retain cum othercount otherpct  numLevels 0;
16328 +     format Count 8.;
16329 +     set &_segment end=eof;
16330 +
16331 +     %if &_segformat ne %then %do;
16332 +         SegmentValue= strip(put(&_segment, &_segformat));
16333 +     %end;
16334 +     %else %do;
16335 +        %if &_segtype = N %then %do;
16336 +            SegmentValue= strip(put(&_segment, best12.));
16337 +        %end;
16338 +        %else %do;
16339 +            SegmentValue = &_segment;
16340 +        %end;
16341 +     %end;
16342 +
16343 +     %if &EM_PROPERTY_PROFILEALL eq Y %then %do;
16344 +         call symput('SEGMENTS'!!strip(put(_N_,BEST.)), strip(tranwrd(SegmentValue, '"','""'))) ;
16345 +         call symput('COUNTS' !!strip(put(_N_,BEST.)),  strip(put(count, best.))) ;
16346 +         numLevels + 1;
16347 +         output;
16348 +     %end;
16349 +     %else %do;
16350 +         if (cum < &EM_PROPERTY_OTHERPERCENTCUTOFF) or (trim(symget('OTHERWHERE')) eq ' ' and eof) then do;
16351 +            call symput('SEGMENTS'!!strip(put(_N_,BEST.)), strip(tranwrd(SegmentValue, '"','""'))) ;
16352 +            call symput('COUNTS' !!strip(put(_N_,BEST.)),  strip(put(count, best.))) ;
16353 +            numLevels + 1;
16354 +            output;
16355 +         end;
16356 +         else do;
16357 +            %if &_segtype = C or &_segformat ne %then %do;
16358 +                call symput('OTHERWHERE'  ,symget('OTHERWHERE'  ) !! ' ' !!
16359 +                                     quote(strip(tranwrd(SegmentValue, '"','""'))));
16360 +            %end;
16361 +            %else %do;
16362 +                call symput('OTHERWHERE'  ,symget('OTHERWHERE'  ) !! ' ' !! strip(SegmentValue));
16363 +            %end;
16364 +            othercount = othercount + count;
16365 +            otherpct   = otherpct + percent;
16366 +            if eof then do;
16367 +               SegmentValue = '_OTHER_';
16368 +               count   = othercount;
16369 +               percent = otherpct;
16370 +               numLevels + 1;
16371 +               call symput('SEGMENTS'!! strip(put(numLevels,BEST.)), '_OTHER_') ;
16372 +               call symput('COUNTS'  !! strip(put(numLevels,BEST.)),  strip(put(count, best.))) ;
16373 +               output;
16374 +            end;
16375 +         end;
16376 +         cum = cum + percent;
16377 +     %end;
16378 +     if eof then
16379 +        call symput('numLevels', strip(put(numLevels,BEST.))) ;
16380 +  run ;
16381 +
16382 +  /* Loop over segments */
16383 +  %do S = 1 %to &numLevels;
16384 +     %if &_segformat ne %then %do;
16385 +         %if %nrbquote(&&segments&s) = _OTHER_ %then
16386 +             %let where= strip(put(&_segment, &_segformat)) in(&OTHERWHERE);
16387 +         %else
16388 +             %let where= strip(put(&_segment, &_segformat)) = "&&segments&s";
16389 +     %end;
16390 +     %else %do;
16391 +         %if %nrbquote(&&segments&s) = _OTHER_ %then
16392 +                 %let where= &_segment in(&OTHERWHERE);
16393 +         %else %do;
16394 +             %if &_segtype eq N %then
16395 +                 %let where= &_segment = &&segments&s;
16396 +             %else
16397 +                 %let where= &_segment = "&&segments&s";
16398 +         %end;
16399 +     %end;
16400 +
16401 +     %let SEGVARS=;
16402 +     %let SEGCLASS=;
16403 +     data _tempStat;
16404 +        set &_varsDs;
16405 +        where  SegmentVariable="&_segment" and SegmentValue="&&segments&s";
16406 +        if Type eq 'I' then
16407 +           call symput('SEGVARS',symget('SEGVARS' ) !! ' ' !! trim(left(Variable))) ;
16408 +        else
16409 +           call symput('SEGCLASS',symget('SEGCLASS' ) !! ' ' !! trim(left(Variable))) ;
16410 +     run ;
16411 +
16412 +     %let _nobs = 0;
16413 +     %let dsid = %sysfunc(open(_tempStat));
16414 +     %if &dsid %then %do;
16415 +         %let _nobs = %sysfunc(attrn(&dsid, NLOBS));
16416 +         %let dsid = %sysfunc(close(&dsid));
16417 +     %end;
16418 +     %if &_nobs<1 %then %goto doskips;
16419 +
16420 +     proc sort data=_tempStat;
16421 +        by Variable;
16422 +     run;
16423 +
16424 +     data &EM_NODEID._TMP / view=&EM_NODEID._TMP ;
16425 +        set &EM_IMPORT_DATA;
16426 +
16427 +        where &where;
16428 +
16429 +        %if (&FormatFref ne ) and (&segvars ne ) %then %do;
16430 +            %inc &FormatFref;
16431 +        %end;
16432 +     run;
16433 +
16434 +     /* Profile Segment */
16435 +     %if &segclass ne %then %do;
16436 +         %class_profile(DATA=&EM_NODEID._TMP, OUTPUT=_CLASS, VARS=&SEGCLASS, STAT=_STAT, FREQ=%EM_FREQ);
16437 +         data _CLASS;
16438 +            length SegmentVariable $32 SegmentValue $200;
16439 +            retain SegmentVariable "&_Segment" SegmentValue "&&segments&s";
16440 +            label Variable        = "%sysfunc(sasmsg(sashelp.dmine, rpt_variable_vlabel,  NOQUOTE))"
16441 +                   value    = "%sysfunc(sasmsg(sashelp.dmine, rpt_value_vlabel,  NOQUOTE))"
16442 +                   count    = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel,  NOQUOTE))"
16443 +                   percent  = "%sysfunc(sasmsg(sashelp.dmine, rpt_percent_vlabel,  NOQUOTE))";
16444 +            set _CLASS;
16445 +         run;
16446 +         proc append base=&EM_USER_CLASSDIST data=_CLASS force;
16447 +         run;
16448 +         data _tempStat;
16449 +            merge _tempStat _STAT;
16450 +            by VARIABLE;
16451 +         run;
16452 +     %end;
16453 +     %if &segvars ne %then %do;
16454 +         %var_profile(DATA=&EM_NODEID._TMP, OUTPUT=_INTERVAL, VARS=&SEGVARS,
16455 +                           STAT=_STAT, BIN=N, FREQ=%EM_FREQ, NUMBARS= &EM_PROPERTY_NUMHISTBARS);
16456 +         data _INTERVAL;
16457 +             length SegmentVariable $32 SegmentValue $200;
16458 +             retain SegmentVariable "&_Segment" SegmentValue "&&segments&s";
16459 +             label Variable        = "%sysfunc(sasmsg(sashelp.dmine, rpt_variable_vlabel,  NOQUOTE))"
16460 +                   value    = "%sysfunc(sasmsg(sashelp.dmine, rpt_value_vlabel,  NOQUOTE))"
16461 +                   count    = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel,  NOQUOTE))"
16462 +                   percent  = "%sysfunc(sasmsg(sashelp.dmine, rpt_percent_vlabel,  NOQUOTE))";
16463 +             set _INTERVAL;
16464 +         run;
16465 +
16466 +         proc append base=&EM_USER_INTDIST data=_INTERVAL force;
16467 +         run;
16468 +
16469 +         proc sort data=_STAT(KEEP=VARIABLE NMISS MIN MAX MEAN STD SKEWNESS KURTOSIS);
16470 +            by VARIABLE;
16471 +         run;
16472 +         data _tempStat;
16473 +            merge _tempStat _STAT;
16474 +            by VARIABLE;
16475 +         run;
16476 +
16477 +     %end;
16478 +
16479 +     proc sort data=_tempStat;
16480 +        by Rank;
16481 +     run;
16482 +     proc append base=&EM_USER_STATS data=_tempStat force;
16483 +     run;
16484 +
16485 +     %doskips:
16486 +
16487 +     proc datasets lib=work nolist mt=(DATA VIEW);
16488 +        delete _segment &EM_NODEID._TMP _interval _class
16489 +
16490 +        %if %sysfunc(exist(_tempStat))>0 %then %do;
16491 +            _tempStat
16492 +        %end;
16493 +     ;
16494 +     run;
16495 +     quit;
16496 +
16497 +
16498 +  %end ;
16499 +%mend segmentSummary;
16500 +
16501 +%macro train;
16502 +
16503 +   /* Retrieve data set name */
16504 +   %EM_GETNAME(KEY=SIZE,       TYPE=DATA);
16505 +   %EM_GETNAME(KEY=FIT,        TYPE=DATA);
16506 +   %EM_GETNAME(KEY=STATS,      TYPE=DATA);
16507 +   %EM_GETNAME(KEY=WORTH,      TYPE=DATA);
16508 +   %EM_GETNAME(KEY=IMPORTANCE, TYPE=DATA);
16509 +   %EM_GETNAME(KEY=CLASSDIST,  TYPE=DATA);
16510 +   %EM_GETNAME(KEY=INTDIST,    TYPE=DATA);
16511 +   %EM_GETNAME(KEY=SELVARS,    TYPE=DATA);
16512 +
16513 +   /* Delete previous data sets */
16514 +   proc datasets lib=&EM_LIB nolist;
16515 +      delete &EM_NODEID._SIZE  &EM_NODEID._STATS &EM_NODEID._FIT &EM_NODEID._WORTH
16516 +             &EM_NODEID._IMPORTANCE &EM_NODEID._SELVARS
16517 +             &EM_NODEID._CLASSDIST  &EM_NODEID._INTDIST &EM_NODEID._MACS(mt=catalog);
16518 +   run;
16519 +
16520 +   %if (%sysfunc(exist(&EM_IMPORT_DATA))<1 and %sysfunc(exist(&EM_IMPORT_DATA, VIEW))<1)
16521 +       or (&EM_IMPORT_DATA eq ) %then %do;
16522 +       %let  EMEXCEPTIONSTRING = exception.server.emtool.PROFNEEDTRAINDATASET;
16523 +       %goto doendpt;
16524 +   %end;
16525 +
16526 +    proc sort data=&EM_DATA_VARIABLESET;
16527 +       by Name;
16528 +    run;
16529 +
16530 +    %let _segmentvar = %EM_SEGMENT %EM_TREATMENT;
16531 +
16532 +    %if  (%upcase(&EM_PROPERTY_TARGETROLE) eq SEGMENT) %then
16533 +        %let _segmentvar= &_segmentvar %EM_BINARY_TARGET %EM_NOMINAL_TARGET %EM_ORDINAL_TARGET;
16534 +
16535 +    /* Add report variables */
16536 +    %let REPORT_VARS = ;
16537 +    %if  (%upcase(&EM_PROPERTY_TARGETROLE) eq REPORT) %then %do;
16538 +        %let REPORT_VARS = %EM_TARGET;
16539 +    %end;
16540 +    %if &EM_PROPERTY_USEREPORTVARS eq Y %then %do;
16541 +        %let REPORT_VARS = &REPORT_VARS %EM_REPORT_VARS;
16542 +    %end;
16543 +
16544 +    %if &REPORT_VARS ne %then %do;
16545 +        data _tempreport;
16546 +           length Variable $32;
16547 +
16548 +        %let rndx= 0 ;
16549 +        %let rvar  = &REPORT_VARS;
16550 +        %do %while( &rndx < &EM_PROPERTY_MAXNUMREPORT and &rvar ne  ) ;
16551 +            %let rndx= %eval(&rndx+1);
16552 +            %let rvar = %scan(&REPORT_VARS, &rndx, ' ') ;
16553 +            %if &rvar ne %then %do;
16554 +                Variable="&rvar"; output;
16555 +            %end ;
16556 +        %end;
16557 +
16558 +        run;
16559 +    %end;
16560 +
16561 +    %em_profile(_segmentvar=&_segmentvar, _sizeDs=&EM_USER_SIZE,
16562 +                _varsDs=&EM_USER_SELVARS, _fitDs=&EM_USER_FIT, _reportDs=_tempReport);
16563 +
16564 +    %if ^%sysfunc(exist(&EM_USER_SELVARS)) and (&REPORT_VARS eq ) %then %goto doendpt;
16565 +
16566 +    %if ^%sysfunc(exist(&EM_USER_SELVARS)) %then %do;
16567 +        data &EM_USER_SELVARS;
16568 +           set _tempreport;
16569 +        run;
16570 +    %end;
16571 +
16572 +    proc sort data=&EM_USER_SELVARS;
16573 +       by Variable;
16574 +    run;
16575 +    data &EM_USER_SELVARS;
16576 +       length Type $1;
16577 +       label Type = "%sysfunc(sasmsg(sashelp.dmine, meta_type_vlabel,  NOQUOTE))";
16578 +       merge &EM_USER_SELVARS(in=a) &EM_DATA_VARIABLESET(keep=NAME LEVEL LABEL rename=(NAME=Variable));
16579 +       by Variable;
16580 +       if LABEL eq '' then LABEL=VARIABLE;
16581 +       if a then do;
16582 +          if LEVEL = 'INTERVAL' then Type = 'I';
16583 +          else Type = 'C';
16584 +           output;
16585 +       end;
16586 +       drop LEVEL;
16587 +    run;
16588 +
16589 +    proc sort data=&EM_USER_SELVARS out=_SummaryVars nodupkey;
16590 +       by Variable;
16591 +    run;
16592 +    %if &EM_PROPERTY_MAXDEPTH > 1 %then %let selStat = Importance;
16593 +    %else
16594 +        %let selStat = Worth;
16595 +
16596 +   data &EM_USER_STATS(keep=Type SegmentVariable SegmentValue Variable Label Rank &selStat);
16597 +       length Type $1;
16598 +       label Type = "%sysfunc(sasmsg(sashelp.dmine, meta_type_vlabel,  NOQUOTE))";
16599 +       set _SummaryVars;
16600 +       SegmentVariable= "_OVERALL_"; SegmentValue= "&EM_IMPORT_DATA"  ;
16601 +       rank = .; &selStat=.;
16602 +       if Label eq '' then Label=Variable;
16603 +   run;
16604 +
16605 +    /* Profile Entire Data */
16606 +   %put &EM_CODEBAR;
16607 +   %put * Profile Entire Data ;
16608 +   %put &EM_CODEBAR;
16609 +
16610 +    %let segvars=;
16611 +    %let segclass=;
16612 +    data _null_;
16613 +       set  &EM_USER_STATS;
16614 +       if Type = 'I' then
16615 +          call symput('SEGVARS',symget('SEGVARS' ) !! ' ' !! trim(left(Variable))) ;
16616 +       else
16617 +          call symput('SEGCLASS',symget('SEGCLASS' ) !! ' ' !! trim(left(Variable))) ;
16618 +    run ;
16619 +
16620 +    %if &segclass ne %then %do;
16621 +        %class_profile(DATA=&EM_IMPORT_DATA, OUTPUT=_CLASS, VARS=&SEGCLASS, STAT=_STAT, FREQ=%EM_FREQ);
16622 +        data _CLASS;
16623 +           length SegmentVariable $32 SegmentValue $200;
16624 +           retain SegmentVariable "_OVERALL_" SegmentValue "&EM_IMPORT_DATA";
16625 +           label  variable = "%sysfunc(sasmsg(sashelp.dmine, rpt_variable_vlabel,  NOQUOTE))"
16626 +                  value    = "%sysfunc(sasmsg(sashelp.dmine, rpt_value_vlabel,  NOQUOTE))"
16627 +                  count    = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel,  NOQUOTE))"
16628 +                  percent  = "%sysfunc(sasmsg(sashelp.dmine, rpt_percent_vlabel,  NOQUOTE))";
16629 +           set _CLASS;
16630 +        run;
16631 +        proc append base=&EM_USER_CLASSDIST data=_CLASS force;
16632 +        run;
16633 +
16634 +        proc sort data=_STAT;
16635 +           by VARIABLE;
16636 +        run;
16637 +        data &EM_USER_STATS;
16638 +            merge  &EM_USER_STATS _STAT;
16639 +            by VARIABLE;
16640 +        run;
16641 +    %end;
16642 +    %if &segvars ne %then %do;
16643 +        /* Computing Min and Max for Interval Variables */
16644 +        %var_profile(DATA=&EM_IMPORT_DATA, OUTPUT=_INTERVAL, VARS=&SEGVARS,
16645 +                          STAT=_STAT, BINDATA=DATA_STAT, FREQ=%EM_FREQ, BIN=Y, NUMBARS= &EM_PROPERTY_NUMHISTBARS);
16646 +        data _INTERVAL;
16647 +           length SegmentVariable $32 SegmentValue $200;
16648 +           retain SegmentVariable "_OVERALL_" SegmentValue "&EM_IMPORT_DATA";
16649 +           label  variable = "%sysfunc(sasmsg(sashelp.dmine, rpt_variable_vlabel,  NOQUOTE))"
16650 +                  value    = "%sysfunc(sasmsg(sashelp.dmine, rpt_value_vlabel,  NOQUOTE))"
16651 +                  count    = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel,  NOQUOTE))"
16652 +                  percent  = "%sysfunc(sasmsg(sashelp.dmine, rpt_percent_vlabel,  NOQUOTE))";
16653 +           set _INTERVAL;
16654 +        run;
16655 +
16656 +        proc append base=&EM_USER_INTDIST data=_INTERVAL force;
16657 +        run;
16658 +
16659 +        proc sort data=_STAT(KEEP=VARIABLE NMISS MIN MAX MEAN STD SKEWNESS KURTOSIS) OUT=_STAT;
16660 +           by VARIABLE;
16661 +        run;
16662 +        data &EM_USER_STATS;
16663 +            merge  &EM_USER_STATS _STAT;
16664 +            by VARIABLE;
16665 +        run;
16666 +    %end;
16667 +
16668 +    filename X catalog "&EM_LIB..&EM_NODEID._INTERVAL.FORMAT.source";
16669 +
16670 +    %if %sysfunc(exist(&EM_LIB..&EM_NODEID._INTERVAL, 'CATALOG')) %then %do;
16671 +        proc datasets lib=&EM_LIB nolist;
16672 +           delete &EM_NODEID._INTERVAL(mt=catalog);
16673 +        run;
16674 +    %end;
16675 +
16676 +    %if %sysfunc(exist(DATA_STAT)) %then %do;
16677 +        data _null_;
16678 +           file X;
16679 +
16680 +           %let dsid    =%sysfunc(open(DATA_STAT));
16681 +           %let namenum = %sysfunc(varnum(&dsid, VARIABLE));
16682 +           %let fmtnum  = %sysfunc(varnum(&dsid, FORMAT));
16683 +           %let obs = %sysfunc(fetch(&dsid));
16684 +
16685 +           put 'format' ;
16686 +
16687 +           %let _count = 0;
16688 +           %let _VARS=;
16689 +           %do %while(&obs=0);
16690 +
16691 +               %let _count = %eval(&_count +1);
16692 +               %let _name = %sysfunc(getvarc(&dsid, &namenum));
16693 +               %let _VARS = &_VARS &_name;
16694 +               %let _fmtname = %sysfunc(getvarc(&dsid, &fmtnum));
16695 +               %do;
16696 +                  put "&_name &_fmtname..";
16697 +               %end;
16698 +               %let obs = %sysfunc(fetch(&dsid));
16699 +           %end;
16700 +           %let dsid=%sysfunc(close(&dsid));
16701 +           put ';';
16702 +        run;
16703 +    %end;
16704 +
16705 +    /* Profile Segments */
16706 +    %if _segmentvar eq %then %goto doendpt;
16707 +    %let sndx = 0;
16708 +
16709 +    %let svar = &_segmentvar;
16710 +    %do %while(&svar ne );
16711 +        %let sndx= %eval(&sndx+1);
16712 +        %let svar = %scan(&_segmentvar, &sndx,' ');
16713 +        %if &svar ne %then
16714 +            %segmentSummary(segment=&svar, _varsDs=&EM_USER_SELVARS, FormatFref=X);
16715 +    %end ;
16716 +
16717 +    filename X;
16718 +
16719 +    %doendpt:
16720 +
16721 +
16722 +    /* Set reports for the node */
16723 +    %let _keys= SIZE STATS CLASSDIST INTDIST;
16724 +
16725 +    %if %sysfunc(exist( &EM_USER_CLASSDIST)) or  %sysfunc(exist(&EM_USER_INTDIST)) %then %do;
16726 +        %if %sysfunc(exist(&EM_USER_INTDIST)) %then %do;
16727 +            data &EM_USER_INTDIST;
16728 +               set &EM_USER_INTDIST;
16729 +               label SegmentVariable = "%sysfunc(sasmsg(sashelp.dmine, rpt_segmentvariable_vlabel,  NOQUOTE))"
16730 +                     SegmentValue    = "%sysfunc(sasmsg(sashelp.dmine, rpt_segmentvalue_vlabel,  NOQUOTE))"
16731 +                     Color           = "%sysfunc(sasmsg(sashelp.dmine, rpt_color_vlabel,  NOQUOTE))";
16732 +               if SegmentVariable = '_OVERALL_' then Color = 1;
16733 +               else Color = 0;
16734 +            run;
16735 +        %end;
16736 +        %if %sysfunc(exist(&EM_USER_CLASSDIST)) %then %do;
16737 +            data &EM_USER_CLASSDIST;
16738 +               set &EM_USER_CLASSDIST;
16739 +               label SegmentVariable = "%sysfunc(sasmsg(sashelp.dmine, rpt_segmentvariable_vlabel,  NOQUOTE))"
16740 +                     SegmentValue    = "%sysfunc(sasmsg(sashelp.dmine, rpt_segmentvalue_vlabel,  NOQUOTE))"
16741 +                     Groupindex      = "%sysfunc(sasmsg(sashelp.dmine, rpt_groupIndex_vlabel,  NOQUOTE))";
16742 +               if SegmentVariable = '_OVERALL_' then GroupIndex = 0;
16743 +               else GroupIndex = 1;
16744 +            run;
16745 +        %end;
16746 +
16747 +        %let svar = &_segmentvar;
16748 +        %let sndx = 0;
16749 +        %do %while(&svar ne );
16750 +            %let sndx= %eval(&sndx+1);
16751 +            %let svar = %scan(&_segmentvar, &sndx,' ');
16752 +            %if &svar ne %then %do;
16753 +                %let autodisplay = N;
16754 +                %if &sndx = 1 %then
16755 +                    %let autodisplay = Y;
16756 +                %EM_REPORT(KEY=&_keys, VIEWTYPE=PROFILEVIEW, DESCRIPTION=Profileview, SEGMENTVALUE=&svar,
16757 +                      STATS=STATS, SIZE=SIZE, CLASSDIST=CLASSDIST, INTDIST=INTDIST, AUTODISPLAY=&autodisplay, BLOCK=Plot,
16758 +                      LOCALIZE=Y, COLOR=COLOR);
16759 +            %end;
16760 +        %end ;
16761 +    %end;
16762 +
16763 +    %if %sysfunc(exist( &EM_USER_STATS)) %then %do;
16764 +        %if &EM_PROPERTY_MAXDEPTH = 1 %then %do;
16765 +            data &EM_USER_WORTH;
16766 +               set &EM_USER_STATS;
16767 +               label SegmentVariable = "%sysfunc(sasmsg(sashelp.dmine, rpt_segmentvariable_vlabel,  NOQUOTE))"
16768 +                     SegmentValue    = "%sysfunc(sasmsg(sashelp.dmine, rpt_segmentvalue_vlabel,  NOQUOTE))"
16769 +                     Variable        = "%sysfunc(sasmsg(sashelp.dmine, rpt_variable_vlabel,  NOQUOTE))"
16770 +                     Rank   = "%sysfunc(sasmsg(sashelp.dmine, rpt_rank_vlabel,  NOQUOTE))"
16771 +                     Worth  = "%sysfunc(sasmsg(sashelp.dmine, rpt_worth_vlabel,  NOQUOTE))";
16772 +               where WORTH ne .;
16773 +            run;
16774 +            %EM_REPORT(KEY=WORTH,     VIEWTYPE=BAR,  BY=SEGMENTVALUE, X=VARIABLE, FREQ=WORTH,
16775 +                  AUTODISPLAY=Y, REPORTID=SEGMENTVARIABLE, IDVALUE=WORTH, DESCRIPTION=profworth, BLOCK=Plot,
16776 +                  LOCALIZE=Y, NCOLS=1);
16777 +        %end;
16778 +        %else %do;
16779 +            data &EM_USER_IMPORTANCE;
16780 +               set &EM_USER_STATS;
16781 +               label SegmentVariable = "%sysfunc(sasmsg(sashelp.dmine, rpt_segmentvariable_vlabel,  NOQUOTE))"
16782 +                  SegmentValue    = "%sysfunc(sasmsg(sashelp.dmine, rpt_segmentvalue_vlabel,  NOQUOTE))"
16783 +                  Variable        = "%sysfunc(sasmsg(sashelp.dmine, rpt_variable_vlabel,  NOQUOTE))"
16784 +                  Importance      = "%sysfunc(sasmsg(sashelp.dmine, rpt_importance_vlabel,  NOQUOTE))"
16785 +                  Rank            = "%sysfunc(sasmsg(sashelp.dmine, rpt_rank_vlabel,  NOQUOTE))";
16786 +               where IMPORTANCE ne .;
16787 +            run;
16788 +            %EM_REPORT(KEY=IMPORTANCE, VIEWTYPE=BAR,  BY=SEGMENTVALUE, X=VARIABLE, FREQ=IMPORTANCE,
16789 +                  AUTODISPLAY=Y, REPORTID=SEGMENTVARIABLE, IDVALUE=IMPORTANCE, DESCRIPTION=profimportance, BLOCK=Plot,
16790 +                  LOCALIZE=Y, NCOLS=1);
16791 +       %end;
16792 +    %end;
16793 +
16794 +    %if %sysfunc(exist( &EM_USER_SIZE)) %then %do;
16795 +        %if %sysfunc(exist( &EM_USER_FIT)) %then %do;
16796 +            data &EM_USER_SIZE;
16797 +               merge &EM_USER_SIZE &EM_USER_FIT;
16798 +               label percent  = "%sysfunc(sasmsg(sashelp.dmine, rpt_percent_vlabel,  NOQUOTE))"
16799 +                     count    = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel,  NOQUOTE))";
16800 +               format PERCENT 5.2;
16801 +               format COUNT 12.;
16802 +            run;
16803 +        %end;
16804 +        %else %do;
16805 +            data &EM_USER_SIZE;
16806 +               set &EM_USER_SIZE;
16807 +               label percent  = "%sysfunc(sasmsg(sashelp.dmine, rpt_percent_vlabel,  NOQUOTE))"
16808 +                     count    = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel,  NOQUOTE))";
16809 +               format PERCENT 5.2;
16810 +               format COUNT 12.;
16811 +            run;
16812 +        %end;
16813 +
16814 +        %EM_REPORT(KEY=SIZE, VIEWTYPE=PIE, DESCRIPTION=segmentmanysize, X=SEGMENTVALUE, Y=COUNT, TIPTEXT=PERCENT,
16815 +                   REPORTID=SEGMENTVARIABLE, IDVALUE=SIZE, BLOCK=Plot, AUTODISPLAY=Y, LOCALIZE=Y);
16816 +
16817 +    %end;
16818 +
16819 +    %EM_REPORT(KEY=SIZE,      VIEWTYPE=DATA, DESCRIPTION=size,                BLOCK=Stats);
16820 +    %EM_REPORT(KEY=STATS,     VIEWTYPE=DATA, DESCRIPTION=profilevars,         BLOCK=Stats);
16821 +    %EM_REPORT(KEY=CLASSDIST, VIEWTYPE=DATA, DESCRIPTION=clusbarplot,         BLOCK=Stats);
16822 +    %EM_REPORT(KEY=INTDIST,   VIEWTYPE=DATA, DESCRIPTION=clushistplot,        BLOCK=Stats);
16823 +
16824 +    proc datasets lib=&EM_LIB nolist;
16825 +       delete &EM_NODEID._SELVARS _SUMMARYVARS DATA_STAT &EM_NODEID._MACS(mt=catalog) &EM_NODEID._INTERVAL(mt=catalog);
16826 +    run;
16827 +
16828 +%mend train;
16829 +
16830 +
16831 +
NOTE: %INCLUDE (level 1) ending.
NOTE: Fileref TEMP has been deassigned.
 
NOTE: The file EMWS4.PROF2_SIZE (memtype=DATA) was not found, but appears on a DELETE statement.
NOTE: The file EMWS4.PROF2_STATS (memtype=DATA) was not found, but appears on a DELETE statement.
NOTE: The file EMWS4.PROF2_FIT (memtype=DATA) was not found, but appears on a DELETE statement.
NOTE: The file EMWS4.PROF2_WORTH (memtype=DATA) was not found, but appears on a DELETE statement.
NOTE: The file EMWS4.PROF2_IMPORTANCE (memtype=DATA) was not found, but appears on a DELETE statement.
NOTE: The file EMWS4.PROF2_SELVARS (memtype=DATA) was not found, but appears on a DELETE statement.
NOTE: The file EMWS4.PROF2_CLASSDIST (memtype=DATA) was not found, but appears on a DELETE statement.
NOTE: The file EMWS4.PROF2_INTDIST (memtype=DATA) was not found, but appears on a DELETE statement.
NOTE: The file EMWS4.PROF2_MACS (memtype=CATALOG) was not found, but appears on a DELETE statement.
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
 
 
 
NOTE: There were 30 observations read from the data set EMWS4.PROF2_VARIABLESET.
NOTE: The data set EMWS4.PROF2_VARIABLESET has 30 observations and 21 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: The file X is:
      Catalog Name=EMWS4.PROF2_MACS.INTERVAL_1.SOURCE,
      Catalog Page Size=4096,
      Number of Catalog Pages=4,
      Created=Wed, May  9, 2018 03:16:19 PM,
      Last Modified=Wed, May  9, 2018 03:16:19 PM,
      Filename=D:\Nida\Data mining\datamining\BOGO\Workspaces\EMWS4\prof2_macs.sas7bcat,
      Release Created=9.0401M4,
      Host Created=X64_10HOME,
      Owner Name=DESKTOP-MVTLU7L\Mohamed,
      File Size=             9KB,
      File Size (bytes)=9216
 
NOTE: 3 records were written to the file X.
      The minimum record length was 15.
      The maximum record length was 16.
NOTE: There were 1 observations read from the data set EMWS4.PROF2_VARIABLESET.
      WHERE ((ROLE='REJECTED') and (LEVEL='INTERVAL') and (USE='Y')) or ((ROLE='INPUT') and (LEVEL='INTERVAL') and USE in ('D', 'Y'));
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
NOTE: Fileref X has been deassigned.
 
NOTE: The file X is:
      Catalog Name=EMWS4.PROF2_MACS.NOMINAL_1.SOURCE,
      Catalog Page Size=4096,
      Number of Catalog Pages=5,
      Created=Wed, May  9, 2018 03:16:19 PM,
      Last Modified=Wed, May  9, 2018 03:16:19 PM,
      Filename=D:\Nida\Data mining\datamining\BOGO\Workspaces\EMWS4\prof2_macs.sas7bcat,
      Release Created=9.0401M4,
      Host Created=X64_10HOME,
      Owner Name=DESKTOP-MVTLU7L\Mohamed,
      File Size=            17KB,
      File Size (bytes)=17408
 
NOTE: 3 records were written to the file X.
      The minimum record length was 15.
      The maximum record length was 68.
NOTE: There were 4 observations read from the data set EMWS4.PROF2_VARIABLESET.
      WHERE ((ROLE='REJECTED') and LEVEL in ('BINARY', 'NOMINAL') and (USE='Y')) or ((ROLE='INPUT') and LEVEL in ('BINARY', 'NOMINAL') and USE in ('D', 'Y'));
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
NOTE: Fileref X has been deassigned.
*------------------------------------------------------------*
* Filtering input variables
* SEGMENT= _SEGMENT_
*------------------------------------------------------------*
 
NOTE: There were 23000 observations read from the data set SUPERMKT.SUPERMARKETCAMPAIGN.
NOTE: There were 23000 observations read from the data set EMWS4.IDS_DATA.
NOTE: There were 23000 observations read from the data set EMWS4.REPL_TRAIN.
NOTE: View EMWS4.CLUS2_TRAIN.VIEW used (Total process time):
      real time           0.32 seconds
      cpu time            0.32 seconds
 
NOTE: There were 20035 observations read from the data set EMWS4.FILTER_TRAIN.
NOTE: There were 20035 observations read from the data set EMWS4.CLUS2_TRAIN.
NOTE: The data set WORK._SEGMENT_ has 4 observations and 3 variables.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.35 seconds
      cpu time            0.36 seconds
 
 
 
NOTE: There were 4 observations read from the data set WORK._SEGMENT_.
NOTE: The data set WORK._SEGMENT_ has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 4 observations read from the data set WORK._SEGMENT_.
NOTE: The data set WORK._SEGS has 4 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: There were 4 observations read from the data set WORK._SEGS.
NOTE: The PROCEDURE PRINT printed page 2.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: Appending WORK._SEGS to EMWS4.PROF2_SIZE.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 4 observations read from the data set WORK._SEGS.
NOTE: The data set EMWS4.PROF2_SIZE has 4 observations and 4 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: DATA STEP view saved on file WORK.PROF2_TMP.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS4.CLUS2_TRAIN.VIEW used (Total process time):
      real time           0.21 seconds
      cpu time            0.21 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.21 seconds
      cpu time            0.21 seconds
 
 
NOTE: 1389388 kilobytes of physical memory.
NOTE: Will use 20035 out of 20035 training cases.
NOTE: Using memory pool with 93150208 bytes.
NOTE: Passed training data 2 times.
NOTE: Training used 1608944 bytes of work memory.
NOTE: The subtree sequence contains 2 subtrees. The largest has 3 nodes and 2 leaves.
NOTE: Using subtree with 3 nodes and 2 leaves.
NOTE: Using subtree with 3 nodes and 2 leaves.
NOTE: The data set WORK._RULE has 32 observations and 6 variables.
 
 
NOTE: There were 23000 observations read from the data set SUPERMKT.SUPERMARKETCAMPAIGN.
NOTE: There were 23000 observations read from the data set EMWS4.IDS_DATA.
NOTE: There were 23000 observations read from the data set EMWS4.REPL_TRAIN.
NOTE: There were 20035 observations read from the data set EMWS4.FILTER_TRAIN.
NOTE: View WORK.PROF2_TMP.VIEW used (Total process time):
      real time           0.68 seconds
      cpu time            0.67 seconds
 
NOTE: There were 20035 observations read from the data set EMWS4.CLUS2_TRAIN.
NOTE: There were 20035 observations read from the data set WORK.PROF2_TMP.
NOTE: PROCEDURE ARBOR used (Total process time):
      real time           0.70 seconds
      cpu time            0.68 seconds
 
 
 
NOTE: Appending WORK._RULE to WORK._TEMPRULE.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 32 observations read from the data set WORK._RULE.
NOTE: The data set WORK._TEMPRULE has 32 observations and 6 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: Deleting WORK._RULE (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 10 observations read from the data set WORK._TEMPRULE.
      WHERE stat in ('VARIABLE', 'WORTH');
NOTE: The data set WORK._TEMPRULE has 5 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 5 observations read from the data set WORK._TEMPRULE.
NOTE: The data set WORK._TEMPRULE has 5 observations and 7 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 5 observations read from the data set WORK._TEMPRULE.
NOTE: The data set WORK._TEMPRULE has 5 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
 
NOTE: There were 5 observations read from the data set WORK._TEMPRULE.
      WHERE worth not = .;
NOTE: The PROCEDURE PRINT printed page 3.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 4 observations read from the data set WORK._TEMPRULE.
      WHERE (worth=.) or (worth>=0.01);
NOTE: The data set WORK._TEMPRULE has 4 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: Appending WORK._TEMPRULE to EMWS4.PROF2_SELVARS.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 4 observations read from the data set WORK._TEMPRULE.
NOTE: The data set EMWS4.PROF2_SELVARS has 4 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: The file WORK.PROF2_VALIDTMP (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: The file WORK._STAT (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: Deleting WORK._SEGS (memtype=DATA).
NOTE: Deleting WORK.PROF2_TMP (memtype=VIEW).
NOTE: Deleting WORK._TEMPRULE (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
 
NOTE: DATA STEP view saved on file WORK.PROF2_TMP.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS4.CLUS2_TRAIN.VIEW used (Total process time):
      real time           0.25 seconds
      cpu time            0.23 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.26 seconds
      cpu time            0.25 seconds
 
 
NOTE: 1389388 kilobytes of physical memory.
NOTE: Will use 20035 out of 20035 training cases.
NOTE: Using memory pool with 93150208 bytes.
NOTE: Passed training data 2 times.
NOTE: Training used 1608944 bytes of work memory.
NOTE: The subtree sequence contains 2 subtrees. The largest has 3 nodes and 2 leaves.
NOTE: Using subtree with 1 nodes and 1 leaves.
NOTE: Using subtree with 1 nodes and 1 leaves.
NOTE: The data set WORK._RULE has 31 observations and 6 variables.
 
 
NOTE: There were 23000 observations read from the data set SUPERMKT.SUPERMARKETCAMPAIGN.
NOTE: There were 23000 observations read from the data set EMWS4.IDS_DATA.
NOTE: There were 23000 observations read from the data set EMWS4.REPL_TRAIN.
NOTE: There were 20035 observations read from the data set EMWS4.FILTER_TRAIN.
NOTE: View WORK.PROF2_TMP.VIEW used (Total process time):
      real time           0.71 seconds
      cpu time            0.71 seconds
 
NOTE: There were 20035 observations read from the data set EMWS4.CLUS2_TRAIN.
NOTE: There were 20035 observations read from the data set WORK.PROF2_TMP.
NOTE: PROCEDURE ARBOR used (Total process time):
      real time           0.75 seconds
      cpu time            0.75 seconds
 
 
 
NOTE: Appending WORK._RULE to WORK._TEMPRULE.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 31 observations read from the data set WORK._RULE.
NOTE: The data set WORK._TEMPRULE has 31 observations and 6 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: Deleting WORK._RULE (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: There were 10 observations read from the data set WORK._TEMPRULE.
      WHERE stat in ('VARIABLE', 'WORTH');
NOTE: The data set WORK._TEMPRULE has 5 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: There were 5 observations read from the data set WORK._TEMPRULE.
NOTE: The data set WORK._TEMPRULE has 5 observations and 7 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: There were 5 observations read from the data set WORK._TEMPRULE.
NOTE: The data set WORK._TEMPRULE has 5 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
 
NOTE: There were 5 observations read from the data set WORK._TEMPRULE.
      WHERE worth not = .;
NOTE: The PROCEDURE PRINT printed page 4.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: There were 4 observations read from the data set WORK._TEMPRULE.
      WHERE (worth=.) or (worth>=0.01);
NOTE: The data set WORK._TEMPRULE has 4 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: Appending WORK._TEMPRULE to EMWS4.PROF2_SELVARS.
NOTE: There were 4 observations read from the data set WORK._TEMPRULE.
NOTE: 4 observations added.
NOTE: The data set EMWS4.PROF2_SELVARS has 8 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: The file WORK._SEGS (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: The file WORK.PROF2_VALIDTMP (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: The file WORK._STAT (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: Deleting WORK.PROF2_TMP (memtype=VIEW).
NOTE: Deleting WORK._TEMPRULE (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: DATA STEP view saved on file WORK.PROF2_TMP.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS4.CLUS2_TRAIN.VIEW used (Total process time):
      real time           0.21 seconds
      cpu time            0.21 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.23 seconds
      cpu time            0.23 seconds
 
 
NOTE: 1389388 kilobytes of physical memory.
NOTE: Will use 20035 out of 20035 training cases.
NOTE: Using memory pool with 93150208 bytes.
NOTE: Passed training data 2 times.
NOTE: Training used 1608944 bytes of work memory.
NOTE: The subtree sequence contains 2 subtrees. The largest has 3 nodes and 2 leaves.
NOTE: Using subtree with 3 nodes and 2 leaves.
NOTE: Using subtree with 3 nodes and 2 leaves.
NOTE: The data set WORK._RULE has 32 observations and 6 variables.
 
 
NOTE: There were 23000 observations read from the data set SUPERMKT.SUPERMARKETCAMPAIGN.
NOTE: There were 23000 observations read from the data set EMWS4.IDS_DATA.
NOTE: There were 23000 observations read from the data set EMWS4.REPL_TRAIN.
NOTE: There were 20035 observations read from the data set EMWS4.FILTER_TRAIN.
NOTE: View WORK.PROF2_TMP.VIEW used (Total process time):
      real time           0.78 seconds
      cpu time            0.78 seconds
 
NOTE: There were 20035 observations read from the data set EMWS4.CLUS2_TRAIN.
NOTE: There were 20035 observations read from the data set WORK.PROF2_TMP.
NOTE: PROCEDURE ARBOR used (Total process time):
      real time           0.81 seconds
      cpu time            0.81 seconds
 
 
 
NOTE: Appending WORK._RULE to WORK._TEMPRULE.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 32 observations read from the data set WORK._RULE.
NOTE: The data set WORK._TEMPRULE has 32 observations and 6 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: Deleting WORK._RULE (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: There were 10 observations read from the data set WORK._TEMPRULE.
      WHERE stat in ('VARIABLE', 'WORTH');
NOTE: The data set WORK._TEMPRULE has 5 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: There were 5 observations read from the data set WORK._TEMPRULE.
NOTE: The data set WORK._TEMPRULE has 5 observations and 7 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: There were 5 observations read from the data set WORK._TEMPRULE.
NOTE: The data set WORK._TEMPRULE has 5 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
 
NOTE: There were 5 observations read from the data set WORK._TEMPRULE.
      WHERE worth not = .;
NOTE: The PROCEDURE PRINT printed page 5.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 4 observations read from the data set WORK._TEMPRULE.
      WHERE (worth=.) or (worth>=0.01);
NOTE: The data set WORK._TEMPRULE has 4 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: Appending WORK._TEMPRULE to EMWS4.PROF2_SELVARS.
NOTE: There were 4 observations read from the data set WORK._TEMPRULE.
NOTE: 4 observations added.
NOTE: The data set EMWS4.PROF2_SELVARS has 12 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: The file WORK._SEGS (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: The file WORK.PROF2_VALIDTMP (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: The file WORK._STAT (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: Deleting WORK.PROF2_TMP (memtype=VIEW).
NOTE: Deleting WORK._TEMPRULE (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: DATA STEP view saved on file WORK.PROF2_TMP.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS4.CLUS2_TRAIN.VIEW used (Total process time):
      real time           0.25 seconds
      cpu time            0.25 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.28 seconds
      cpu time            0.28 seconds
 
 
NOTE: 1389388 kilobytes of physical memory.
NOTE: Will use 20035 out of 20035 training cases.
NOTE: Using memory pool with 93150208 bytes.
NOTE: Passed training data 2 times.
NOTE: Training used 1608944 bytes of work memory.
NOTE: The subtree sequence contains 2 subtrees. The largest has 3 nodes and 2 leaves.
NOTE: Using subtree with 1 nodes and 1 leaves.
NOTE: Using subtree with 1 nodes and 1 leaves.
NOTE: The data set WORK._RULE has 31 observations and 6 variables.
 
 
NOTE: There were 23000 observations read from the data set SUPERMKT.SUPERMARKETCAMPAIGN.
NOTE: There were 23000 observations read from the data set EMWS4.IDS_DATA.
NOTE: There were 23000 observations read from the data set EMWS4.REPL_TRAIN.
NOTE: There were 20035 observations read from the data set EMWS4.FILTER_TRAIN.
NOTE: View WORK.PROF2_TMP.VIEW used (Total process time):
      real time           0.70 seconds
      cpu time            0.70 seconds
 
NOTE: There were 20035 observations read from the data set EMWS4.CLUS2_TRAIN.
NOTE: There were 20035 observations read from the data set WORK.PROF2_TMP.
NOTE: PROCEDURE ARBOR used (Total process time):
      real time           0.70 seconds
      cpu time            0.70 seconds
 
 
 
NOTE: Appending WORK._RULE to WORK._TEMPRULE.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 31 observations read from the data set WORK._RULE.
NOTE: The data set WORK._TEMPRULE has 31 observations and 6 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: Deleting WORK._RULE (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 10 observations read from the data set WORK._TEMPRULE.
      WHERE stat in ('VARIABLE', 'WORTH');
NOTE: The data set WORK._TEMPRULE has 5 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: There were 5 observations read from the data set WORK._TEMPRULE.
NOTE: The data set WORK._TEMPRULE has 5 observations and 7 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: There were 5 observations read from the data set WORK._TEMPRULE.
NOTE: The data set WORK._TEMPRULE has 5 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
 
NOTE: There were 5 observations read from the data set WORK._TEMPRULE.
      WHERE worth not = .;
NOTE: The PROCEDURE PRINT printed page 6.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 4 observations read from the data set WORK._TEMPRULE.
      WHERE (worth=.) or (worth>=0.01);
NOTE: The data set WORK._TEMPRULE has 4 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: Appending WORK._TEMPRULE to EMWS4.PROF2_SELVARS.
NOTE: There were 4 observations read from the data set WORK._TEMPRULE.
NOTE: 4 observations added.
NOTE: The data set EMWS4.PROF2_SELVARS has 16 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: The file WORK._SEGS (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: The file WORK.PROF2_VALIDTMP (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: The file WORK._STAT (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: Deleting WORK.PROF2_TMP (memtype=VIEW).
NOTE: Deleting WORK._TEMPRULE (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
 
NOTE: Deleting EMWS4.PROF2_MACS (memtype=CATALOG).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
 
 
 
NOTE: There were 16 observations read from the data set EMWS4.PROF2_SELVARS.
NOTE: The data set EMWS4.PROF2_SELVARS has 16 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
 
WARNING: Multiple lengths were specified for the BY variable Variable by input data sets. This might cause unexpected results.
NOTE: There were 16 observations read from the data set EMWS4.PROF2_SELVARS.
NOTE: There were 30 observations read from the data set EMWS4.PROF2_VARIABLESET.
NOTE: The data set EMWS4.PROF2_SELVARS has 16 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: There were 16 observations read from the data set EMWS4.PROF2_SELVARS.
NOTE: 12 observations with duplicate key values were deleted.
NOTE: The data set WORK._SUMMARYVARS has 4 observations and 7 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: There were 4 observations read from the data set WORK._SUMMARYVARS.
NOTE: The data set EMWS4.PROF2_STATS has 4 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
*------------------------------------------------------------*
* Profile Entire Data
*------------------------------------------------------------*
 
NOTE: There were 4 observations read from the data set EMWS4.PROF2_STATS.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: The file _MAC is:
      Catalog Name=WORK.MACROS.VARIABLES.SOURCE,
      Catalog Page Size=4096,
      Number of Catalog Pages=4,
      Created=Wed, May  9, 2018 03:16:25 PM,
      Last Modified=Wed, May  9, 2018 03:16:25 PM,
      Filename=C:\Users\Mohamed\AppData\Local\Temp\SAS Temporary Files\_TD5172_DESKTOP-MVTLU7L_\macros.sas7bcat,
      Release Created=9.0401M4,
      Host Created=X64_10HOME,
      Owner Name=DESKTOP-MVTLU7L\Mohamed,
      File Size=             5KB,
      File Size (bytes)=5120
 
NOTE: 2 records were written to the file _MAC.
      The minimum record length was 12.
      The maximum record length was 13.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
 
 
NOTE: %INCLUDE (level 1) file _MAC is file WORK.MACROS.VARIABLES.SOURCE.
16832 +%macro _vars;
16833 +%mend _vars;
NOTE: %INCLUDE (level 1) ending.
NOTE: Fileref _MAC has been deassigned.
 
NOTE: Records processed = 20035   Memory used = 511K.
NOTE: There were 23000 observations read from the data set SUPERMKT.SUPERMARKETCAMPAIGN.
NOTE: There were 23000 observations read from the data set EMWS4.IDS_DATA.
NOTE: There were 23000 observations read from the data set EMWS4.REPL_TRAIN.
NOTE: View EMWS4.CLUS2_TRAIN.VIEW used (Total process time):
      real time           0.42 seconds
      cpu time            0.42 seconds
 
NOTE: There were 20035 observations read from the data set EMWS4.FILTER_TRAIN.
NOTE: There were 20035 observations read from the data set EMWS4.CLUS2_TRAIN.
NOTE: The data set WORK._TEMPCLASS has 8 observations and 9 variables.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.43 seconds
      cpu time            0.43 seconds
 
 
 
NOTE: There were 8 observations read from the data set WORK._TEMPCLASS.
NOTE: The data set WORK._TEMPCLASS has 8 observations and 9 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: There were 8 observations read from the data set WORK._TEMPCLASS.
NOTE: The data set WORK._CLASS has 8 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: There were 8 observations read from the data set WORK._CLASS.
NOTE: The data set WORK._STAT has 5 observations and 4 variables.
NOTE: PROCEDURE MEANS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: There were 4 observations read from the data set WORK._STAT.
      WHERE _TYPE_=1;
NOTE: The data set WORK._STAT has 4 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
NOTE: Deleting WORK._TEMPCLASS (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: There were 8 observations read from the data set WORK._CLASS.
NOTE: The data set WORK._CLASS has 8 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
 
NOTE: Appending WORK._CLASS to EMWS4.PROF2_CLASSDIST.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 8 observations read from the data set WORK._CLASS.
NOTE: The data set EMWS4.PROF2_CLASSDIST has 8 observations and 6 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: There were 4 observations read from the data set WORK._STAT.
NOTE: The data set WORK._STAT has 4 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 4 observations read from the data set EMWS4.PROF2_STATS.
NOTE: There were 4 observations read from the data set WORK._STAT.
NOTE: The data set EMWS4.PROF2_STATS has 4 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
*------------------------------------------------------------*
* Summarizing variables
* SEGMENT= _SEGMENT_
*------------------------------------------------------------*
 
NOTE: There were 4 observations read from the data set WORK._SEGMENT_.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: There were 4 observations read from the data set EMWS4.PROF2_SELVARS.
      WHERE (SegmentVariable='_SEGMENT_') and (SegmentValue='1');
NOTE: The data set WORK._TEMPSTAT has 4 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: There were 4 observations read from the data set WORK._TEMPSTAT.
NOTE: The data set WORK._TEMPSTAT has 4 observations and 7 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
 
NOTE: DATA STEP view saved on file WORK.PROF2_TMP.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS4.CLUS2_TRAIN.VIEW used (Total process time):
      real time           0.23 seconds
      cpu time            0.21 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.23 seconds
      cpu time            0.21 seconds
 
 
 
NOTE: The file _MAC is:
      Catalog Name=WORK.MACROS.VARIABLES.SOURCE,
      Catalog Page Size=4096,
      Number of Catalog Pages=5,
      Created=Wed, May  9, 2018 03:16:25 PM,
      Last Modified=Wed, May  9, 2018 03:16:25 PM,
      Filename=C:\Users\Mohamed\AppData\Local\Temp\SAS Temporary Files\_TD5172_DESKTOP-MVTLU7L_\macros.sas7bcat,
      Release Created=9.0401M4,
      Host Created=X64_10HOME,
      Owner Name=DESKTOP-MVTLU7L\Mohamed,
      File Size=            17KB,
      File Size (bytes)=17408
 
NOTE: 2 records were written to the file _MAC.
      The minimum record length was 12.
      The maximum record length was 13.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
NOTE: %INCLUDE (level 1) file _MAC is file WORK.MACROS.VARIABLES.SOURCE.
16834 +%macro _vars;
16835 +%mend _vars;
NOTE: %INCLUDE (level 1) ending.
NOTE: Fileref _MAC has been deassigned.
 
NOTE: Records processed = 6224   Memory used = 511K.
NOTE: There were 23000 observations read from the data set SUPERMKT.SUPERMARKETCAMPAIGN.
NOTE: There were 23000 observations read from the data set EMWS4.IDS_DATA.
NOTE: There were 23000 observations read from the data set EMWS4.REPL_TRAIN.
NOTE: There were 20035 observations read from the data set EMWS4.FILTER_TRAIN.
NOTE: View WORK.PROF2_TMP.VIEW used (Total process time):
      real time           0.40 seconds
      cpu time            0.40 seconds
 
NOTE: There were 6224 observations read from the data set EMWS4.CLUS2_TRAIN.
      WHERE _SEGMENT_=1;
NOTE: There were 6224 observations read from the data set WORK.PROF2_TMP.
NOTE: The data set WORK._TEMPCLASS has 7 observations and 9 variables.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.42 seconds
      cpu time            0.40 seconds
 
 
 
NOTE: There were 7 observations read from the data set WORK._TEMPCLASS.
NOTE: The data set WORK._TEMPCLASS has 7 observations and 9 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: There were 7 observations read from the data set WORK._TEMPCLASS.
NOTE: The data set WORK._CLASS has 7 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: There were 7 observations read from the data set WORK._CLASS.
NOTE: The data set WORK._STAT has 5 observations and 4 variables.
NOTE: PROCEDURE MEANS used (Total process time):
      real time           0.01 seconds
      cpu time            0.03 seconds
 
 
 
NOTE: There were 4 observations read from the data set WORK._STAT.
      WHERE _TYPE_=1;
NOTE: The data set WORK._STAT has 4 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
NOTE: Deleting WORK._TEMPCLASS (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: There were 7 observations read from the data set WORK._CLASS.
NOTE: The data set WORK._CLASS has 7 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: Appending WORK._CLASS to EMWS4.PROF2_CLASSDIST.
NOTE: There were 7 observations read from the data set WORK._CLASS.
NOTE: 7 observations added.
NOTE: The data set EMWS4.PROF2_CLASSDIST has 15 observations and 6 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: There were 4 observations read from the data set WORK._TEMPSTAT.
NOTE: There were 4 observations read from the data set WORK._STAT.
NOTE: The data set WORK._TEMPSTAT has 4 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
 
NOTE: There were 4 observations read from the data set WORK._TEMPSTAT.
NOTE: The data set WORK._TEMPSTAT has 4 observations and 8 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: Appending WORK._TEMPSTAT to EMWS4.PROF2_STATS.
NOTE: There were 4 observations read from the data set WORK._TEMPSTAT.
NOTE: 4 observations added.
NOTE: The data set EMWS4.PROF2_STATS has 8 observations and 8 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: The file WORK._SEGMENT (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: The file WORK._INTERVAL (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: Deleting WORK.PROF2_TMP (memtype=VIEW).
NOTE: Deleting WORK._CLASS (memtype=DATA).
NOTE: Deleting WORK._TEMPSTAT (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: There were 4 observations read from the data set EMWS4.PROF2_SELVARS.
      WHERE (SegmentVariable='_SEGMENT_') and (SegmentValue='4');
NOTE: The data set WORK._TEMPSTAT has 4 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: There were 4 observations read from the data set WORK._TEMPSTAT.
NOTE: The data set WORK._TEMPSTAT has 4 observations and 7 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: DATA STEP view saved on file WORK.PROF2_TMP.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS4.CLUS2_TRAIN.VIEW used (Total process time):
      real time           0.25 seconds
      cpu time            0.25 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.26 seconds
      cpu time            0.28 seconds
 
 
 
NOTE: The file _MAC is:
      Catalog Name=WORK.MACROS.VARIABLES.SOURCE,
      Catalog Page Size=4096,
      Number of Catalog Pages=5,
      Created=Wed, May  9, 2018 03:16:25 PM,
      Last Modified=Wed, May  9, 2018 03:16:26 PM,
      Filename=C:\Users\Mohamed\AppData\Local\Temp\SAS Temporary Files\_TD5172_DESKTOP-MVTLU7L_\macros.sas7bcat,
      Release Created=9.0401M4,
      Host Created=X64_10HOME,
      Owner Name=DESKTOP-MVTLU7L\Mohamed,
      File Size=            21KB,
      File Size (bytes)=21504
 
NOTE: 2 records were written to the file _MAC.
      The minimum record length was 12.
      The maximum record length was 13.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
NOTE: %INCLUDE (level 1) file _MAC is file WORK.MACROS.VARIABLES.SOURCE.
16836 +%macro _vars;
16837 +%mend _vars;
NOTE: %INCLUDE (level 1) ending.
NOTE: Fileref _MAC has been deassigned.
 
NOTE: Records processed = 5933   Memory used = 511K.
NOTE: There were 23000 observations read from the data set SUPERMKT.SUPERMARKETCAMPAIGN.
NOTE: There were 23000 observations read from the data set EMWS4.IDS_DATA.
NOTE: There were 23000 observations read from the data set EMWS4.REPL_TRAIN.
NOTE: There were 20035 observations read from the data set EMWS4.FILTER_TRAIN.
NOTE: View WORK.PROF2_TMP.VIEW used (Total process time):
      real time           0.40 seconds
      cpu time            0.40 seconds
 
NOTE: There were 5933 observations read from the data set EMWS4.CLUS2_TRAIN.
      WHERE _SEGMENT_=4;
NOTE: There were 5933 observations read from the data set WORK.PROF2_TMP.
NOTE: The data set WORK._TEMPCLASS has 7 observations and 9 variables.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.42 seconds
      cpu time            0.40 seconds
 
 
 
NOTE: There were 7 observations read from the data set WORK._TEMPCLASS.
NOTE: The data set WORK._TEMPCLASS has 7 observations and 9 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: There were 7 observations read from the data set WORK._TEMPCLASS.
NOTE: The data set WORK._CLASS has 7 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: There were 7 observations read from the data set WORK._CLASS.
NOTE: The data set WORK._STAT has 5 observations and 4 variables.
NOTE: PROCEDURE MEANS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
 
NOTE: There were 4 observations read from the data set WORK._STAT.
      WHERE _TYPE_=1;
NOTE: The data set WORK._STAT has 4 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
NOTE: Deleting WORK._TEMPCLASS (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: There were 7 observations read from the data set WORK._CLASS.
NOTE: The data set WORK._CLASS has 7 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: Appending WORK._CLASS to EMWS4.PROF2_CLASSDIST.
NOTE: There were 7 observations read from the data set WORK._CLASS.
NOTE: 7 observations added.
NOTE: The data set EMWS4.PROF2_CLASSDIST has 22 observations and 6 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: There were 4 observations read from the data set WORK._TEMPSTAT.
NOTE: There were 4 observations read from the data set WORK._STAT.
NOTE: The data set WORK._TEMPSTAT has 4 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: There were 4 observations read from the data set WORK._TEMPSTAT.
NOTE: The data set WORK._TEMPSTAT has 4 observations and 8 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: Appending WORK._TEMPSTAT to EMWS4.PROF2_STATS.
NOTE: There were 4 observations read from the data set WORK._TEMPSTAT.
NOTE: 4 observations added.
NOTE: The data set EMWS4.PROF2_STATS has 12 observations and 8 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: The file WORK._SEGMENT (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: The file WORK._INTERVAL (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: Deleting WORK.PROF2_TMP (memtype=VIEW).
NOTE: Deleting WORK._CLASS (memtype=DATA).
NOTE: Deleting WORK._TEMPSTAT (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
 
NOTE: There were 4 observations read from the data set EMWS4.PROF2_SELVARS.
      WHERE (SegmentVariable='_SEGMENT_') and (SegmentValue='3');
NOTE: The data set WORK._TEMPSTAT has 4 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: There were 4 observations read from the data set WORK._TEMPSTAT.
NOTE: The data set WORK._TEMPSTAT has 4 observations and 7 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: DATA STEP view saved on file WORK.PROF2_TMP.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS4.CLUS2_TRAIN.VIEW used (Total process time):
      real time           0.23 seconds
      cpu time            0.21 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.25 seconds
      cpu time            0.23 seconds
 
 
 
NOTE: The file _MAC is:
      Catalog Name=WORK.MACROS.VARIABLES.SOURCE,
      Catalog Page Size=4096,
      Number of Catalog Pages=5,
      Created=Wed, May  9, 2018 03:16:25 PM,
      Last Modified=Wed, May  9, 2018 03:16:27 PM,
      Filename=C:\Users\Mohamed\AppData\Local\Temp\SAS Temporary Files\_TD5172_DESKTOP-MVTLU7L_\macros.sas7bcat,
      Release Created=9.0401M4,
      Host Created=X64_10HOME,
      Owner Name=DESKTOP-MVTLU7L\Mohamed,
      File Size=            21KB,
      File Size (bytes)=21504
 
NOTE: 2 records were written to the file _MAC.
      The minimum record length was 12.
      The maximum record length was 13.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
NOTE: %INCLUDE (level 1) file _MAC is file WORK.MACROS.VARIABLES.SOURCE.
16838 +%macro _vars;
16839 +%mend _vars;
NOTE: %INCLUDE (level 1) ending.
NOTE: Fileref _MAC has been deassigned.
 
NOTE: Records processed = 4168   Memory used = 511K.
NOTE: There were 23000 observations read from the data set SUPERMKT.SUPERMARKETCAMPAIGN.
NOTE: There were 23000 observations read from the data set EMWS4.IDS_DATA.
NOTE: There were 23000 observations read from the data set EMWS4.REPL_TRAIN.
NOTE: There were 20035 observations read from the data set EMWS4.FILTER_TRAIN.
NOTE: View WORK.PROF2_TMP.VIEW used (Total process time):
      real time           0.37 seconds
      cpu time            0.37 seconds
 
NOTE: There were 4168 observations read from the data set EMWS4.CLUS2_TRAIN.
      WHERE _SEGMENT_=3;
NOTE: There were 4168 observations read from the data set WORK.PROF2_TMP.
NOTE: The data set WORK._TEMPCLASS has 7 observations and 9 variables.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.39 seconds
      cpu time            0.39 seconds
 
 
 
NOTE: There were 7 observations read from the data set WORK._TEMPCLASS.
NOTE: The data set WORK._TEMPCLASS has 7 observations and 9 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 7 observations read from the data set WORK._TEMPCLASS.
NOTE: The data set WORK._CLASS has 7 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: There were 7 observations read from the data set WORK._CLASS.
NOTE: The data set WORK._STAT has 5 observations and 4 variables.
NOTE: PROCEDURE MEANS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
 
NOTE: There were 4 observations read from the data set WORK._STAT.
      WHERE _TYPE_=1;
NOTE: The data set WORK._STAT has 4 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
NOTE: Deleting WORK._TEMPCLASS (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: There were 7 observations read from the data set WORK._CLASS.
NOTE: The data set WORK._CLASS has 7 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
 
NOTE: Appending WORK._CLASS to EMWS4.PROF2_CLASSDIST.
NOTE: There were 7 observations read from the data set WORK._CLASS.
NOTE: 7 observations added.
NOTE: The data set EMWS4.PROF2_CLASSDIST has 29 observations and 6 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 4 observations read from the data set WORK._TEMPSTAT.
NOTE: There were 4 observations read from the data set WORK._STAT.
NOTE: The data set WORK._TEMPSTAT has 4 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: There were 4 observations read from the data set WORK._TEMPSTAT.
NOTE: The data set WORK._TEMPSTAT has 4 observations and 8 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
 
NOTE: Appending WORK._TEMPSTAT to EMWS4.PROF2_STATS.
NOTE: There were 4 observations read from the data set WORK._TEMPSTAT.
NOTE: 4 observations added.
NOTE: The data set EMWS4.PROF2_STATS has 16 observations and 8 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: The file WORK._SEGMENT (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: The file WORK._INTERVAL (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: Deleting WORK.PROF2_TMP (memtype=VIEW).
NOTE: Deleting WORK._CLASS (memtype=DATA).
NOTE: Deleting WORK._TEMPSTAT (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
 
NOTE: There were 4 observations read from the data set EMWS4.PROF2_SELVARS.
      WHERE (SegmentVariable='_SEGMENT_') and (SegmentValue='2');
NOTE: The data set WORK._TEMPSTAT has 4 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: There were 4 observations read from the data set WORK._TEMPSTAT.
NOTE: The data set WORK._TEMPSTAT has 4 observations and 7 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
 
NOTE: DATA STEP view saved on file WORK.PROF2_TMP.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS4.CLUS2_TRAIN.VIEW used (Total process time):
      real time           0.26 seconds
      cpu time            0.28 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.28 seconds
      cpu time            0.29 seconds
 
 
 
NOTE: The file _MAC is:
      Catalog Name=WORK.MACROS.VARIABLES.SOURCE,
      Catalog Page Size=4096,
      Number of Catalog Pages=5,
      Created=Wed, May  9, 2018 03:16:25 PM,
      Last Modified=Wed, May  9, 2018 03:16:27 PM,
      Filename=C:\Users\Mohamed\AppData\Local\Temp\SAS Temporary Files\_TD5172_DESKTOP-MVTLU7L_\macros.sas7bcat,
      Release Created=9.0401M4,
      Host Created=X64_10HOME,
      Owner Name=DESKTOP-MVTLU7L\Mohamed,
      File Size=            21KB,
      File Size (bytes)=21504
 
NOTE: 2 records were written to the file _MAC.
      The minimum record length was 12.
      The maximum record length was 13.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
NOTE: %INCLUDE (level 1) file _MAC is file WORK.MACROS.VARIABLES.SOURCE.
16840 +%macro _vars;
16841 +%mend _vars;
NOTE: %INCLUDE (level 1) ending.
NOTE: Fileref _MAC has been deassigned.
 
NOTE: Records processed = 3710   Memory used = 511K.
NOTE: There were 23000 observations read from the data set SUPERMKT.SUPERMARKETCAMPAIGN.
NOTE: There were 23000 observations read from the data set EMWS4.IDS_DATA.
NOTE: There were 23000 observations read from the data set EMWS4.REPL_TRAIN.
NOTE: There were 20035 observations read from the data set EMWS4.FILTER_TRAIN.
NOTE: View WORK.PROF2_TMP.VIEW used (Total process time):
      real time           0.35 seconds
      cpu time            0.35 seconds
 
NOTE: There were 3710 observations read from the data set EMWS4.CLUS2_TRAIN.
      WHERE _SEGMENT_=2;
NOTE: There were 3710 observations read from the data set WORK.PROF2_TMP.
NOTE: The data set WORK._TEMPCLASS has 7 observations and 9 variables.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.39 seconds
      cpu time            0.37 seconds
 
 
 
NOTE: There were 7 observations read from the data set WORK._TEMPCLASS.
NOTE: The data set WORK._TEMPCLASS has 7 observations and 9 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 7 observations read from the data set WORK._TEMPCLASS.
NOTE: The data set WORK._CLASS has 7 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: There were 7 observations read from the data set WORK._CLASS.
NOTE: The data set WORK._STAT has 5 observations and 4 variables.
NOTE: PROCEDURE MEANS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: There were 4 observations read from the data set WORK._STAT.
      WHERE _TYPE_=1;
NOTE: The data set WORK._STAT has 4 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
NOTE: Deleting WORK._TEMPCLASS (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 7 observations read from the data set WORK._CLASS.
NOTE: The data set WORK._CLASS has 7 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
 
NOTE: Appending WORK._CLASS to EMWS4.PROF2_CLASSDIST.
NOTE: There were 7 observations read from the data set WORK._CLASS.
NOTE: 7 observations added.
NOTE: The data set EMWS4.PROF2_CLASSDIST has 36 observations and 6 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: There were 4 observations read from the data set WORK._TEMPSTAT.
NOTE: There were 4 observations read from the data set WORK._STAT.
NOTE: The data set WORK._TEMPSTAT has 4 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: There were 4 observations read from the data set WORK._TEMPSTAT.
NOTE: The data set WORK._TEMPSTAT has 4 observations and 8 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: Appending WORK._TEMPSTAT to EMWS4.PROF2_STATS.
NOTE: There were 4 observations read from the data set WORK._TEMPSTAT.
NOTE: 4 observations added.
NOTE: The data set EMWS4.PROF2_STATS has 20 observations and 8 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: The file WORK._SEGMENT (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: The file WORK._INTERVAL (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: Deleting WORK.PROF2_TMP (memtype=VIEW).
NOTE: Deleting WORK._CLASS (memtype=DATA).
NOTE: Deleting WORK._TEMPSTAT (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
NOTE: Fileref X has been deassigned.
 
NOTE: There were 36 observations read from the data set EMWS4.PROF2_CLASSDIST.
NOTE: The data set EMWS4.PROF2_CLASSDIST has 36 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: The data set WORK.EM_USER_REPORT has 132 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.06 seconds
      cpu time            0.04 seconds
 
 
 
NOTE: There were 16 observations read from the data set EMWS4.PROF2_STATS.
      WHERE WORTH not = .;
NOTE: The data set EMWS4.PROF2_WORTH has 16 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: There were 132 observations read from the data set WORK.EM_USER_REPORT.
NOTE: The data set WORK.EM_USER_REPORT has 264 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.10 seconds
      cpu time            0.11 seconds
 
 
 
NOTE: There were 4 observations read from the data set EMWS4.PROF2_SIZE.
NOTE: The data set EMWS4.PROF2_SIZE has 4 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: There were 264 observations read from the data set WORK.EM_USER_REPORT.
NOTE: The data set WORK.EM_USER_REPORT has 397 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.14 seconds
      cpu time            0.09 seconds
 
 
 
NOTE: There were 397 observations read from the data set WORK.EM_USER_REPORT.
NOTE: The data set WORK.EM_USER_REPORT has 529 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.10 seconds
      cpu time            0.09 seconds
 
 
 
NOTE: There were 529 observations read from the data set WORK.EM_USER_REPORT.
NOTE: The data set WORK.EM_USER_REPORT has 661 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.07 seconds
      cpu time            0.06 seconds
 
 
 
NOTE: There were 661 observations read from the data set WORK.EM_USER_REPORT.
NOTE: The data set WORK.EM_USER_REPORT has 793 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
 
 
 
NOTE: There were 793 observations read from the data set WORK.EM_USER_REPORT.
NOTE: The data set WORK.EM_USER_REPORT has 925 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
 
 
 
NOTE: The file EMWS4._SUMMARYVARS (memtype=DATA) was not found, but appears on a DELETE statement.
NOTE: The file EMWS4.DATA_STAT (memtype=DATA) was not found, but appears on a DELETE statement.
NOTE: The file EMWS4.PROF2_MACS (memtype=CATALOG) was not found, but appears on a DELETE statement.
NOTE: The file EMWS4.PROF2_INTERVAL (memtype=CATALOG) was not found, but appears on a DELETE statement.
NOTE: Deleting EMWS4.PROF2_SELVARS (memtype=DATA).
16842  *------------------------------------------------------------*;
16843  * End TRAIN: Prof2;
16844  *------------------------------------------------------------*;
16845  *------------------------------------------------------------*;
16846  * Close any missing semi colons;
16847  *------------------------------------------------------------*;
16848  ;
16849  ;
16850  ;
16851  ;
16852  quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.07 seconds
      cpu time            0.07 seconds
 
 
16853  *------------------------------------------------------------*;
16854  * Close any unbalanced quotes;
16855  *------------------------------------------------------------*;
16856  /*; *"; *'; */
16857  ;
16858  run;
16859  quit;
16860  /* Reset EM Options */
16861  options formchar="|----|+|---+=|-/\<>*";
16862  options nocenter ls=256 ps=10000;
16863  goptions reset=all device=GIF NODISPLAY;
 
16864  proc sort data=WORK.EM_USER_REPORT;
16865  by ID VIEW;
16866  run;
 
NOTE: There were 925 observations read from the data set WORK.EM_USER_REPORT.
NOTE: The data set WORK.EM_USER_REPORT has 925 observations and 4 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
16867  proc freq data=EMWS4.Prof2_WORTH noprint order=data;
16868  table SEGMENTVARIABLE/ out=WORK.REPORTVALUE;
16869  run;
 
NOTE: There were 16 observations read from the data set EMWS4.PROF2_WORTH.
NOTE: The data set WORK.REPORTVALUE has 1 observations and 3 variables.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
16870  proc freq data=EMWS4.Prof2_SIZE noprint order=data;
16871  table SEGMENTVARIABLE/ out=WORK.REPORTVALUE;
16872  run;
 
NOTE: There were 4 observations read from the data set EMWS4.PROF2_SIZE.
NOTE: The data set WORK.REPORTVALUE has 1 observations and 3 variables.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
*------------------------------------------------------------*
* Score Log
Date:                May 09, 2018
Time:                15:16:30
*------------------------------------------------------------*
16974  %let EMEXCEPTIONSTRING=;
16975  *------------------------------------------------------------*;
16976  * SCORE: Prof2;
16977  *------------------------------------------------------------*;
16978  %let EM_ACTION = SCORE;
16979  %let syscc = 0;
16980  %macro main;
16981     %if %sysfunc(indexw(&EM_DEBUG, _ALL_)) or %sysfunc(indexw(&EM_DEBUG, SOURCE)) %then %do;
16982         options MPRINT;
16983     %end;
16984
16985     filename temp catalog 'sashelp.emexpl.profile_macros.source';
16986     %include temp;
16987     filename temp;
16988
16989     /* Initialize property macro variables */
16990     %SetProperties;
16991
16992     %if %upcase(&EM_ACTION) = CREATE %then %do;
16993
16994         filename temp catalog 'sashelp.emexpl.profile_create.source';
16995         %include temp;
16996         filename temp;
16997         %create;
16998     %end;
16999     %else
17000     %if %upcase(&EM_ACTION) = TRAIN %then %do;
17001
17002         filename temp catalog 'sashelp.emexpl.profile_train.source';
17003         %include temp;
17004         filename temp;
17005         %train;
17006     %end;
17007  %mend main;
17008
17009  %main;
NOTE: %INCLUDE (level 1) file TEMP is file SASHELP.EMEXPL.PROFILE_MACROS.SOURCE.
17010 +%macro SetProperties;
17011 +   %em_checkmacro(name=EM_PROPERTY_PROFILEALL,         global=Y, value=N);
17012 +   %em_checkmacro(name=EM_PROPERTY_USEREPORTVARS,      global=Y, value=Y);
17013 +   %em_checkmacro(name=EM_PROPERTY_OTHERPERCENTCUTOFF, global=Y, value=95);
17014 +   %em_checkmacro(name=EM_PROPERTY_TARGETROLE,         global=Y, value=NONE);
17015 +   %em_checkmacro(name=EM_PROPERTY_NUMHISTBARS,        global=Y, value=8);
17016 +   %em_checkmacro(name=EM_PROPERTY_MINWORTH,           global=Y, value=0.01);
17017 +   %em_checkmacro(name=EM_PROPERTY_MAXDEPTH,           global=Y, value=1);
17018 +   %em_checkmacro(name=EM_PROPERTY_MAXNUMREPORT,       global=Y, value=10);
17019 +   %em_checkmacro(name=EM_PROPERTY_MAXNUMINPUT,        global=Y, value=10);
17020 +   %em_checkmacro(name=EM_PROPERTY_PRINTWORTH,         global=Y, value=Y);
17021 +%mend SetProperties;
17022 +
17023 +
17024 +%macro makeVarMacros(level= );
17025 +
17026 +    %let numvars = 0;
17027 +    %let where   = '';
17028 +
17029 +    %if (%upcase(&EM_PROPERTY_TARGETROLE) eq INPUT) %then
17030 +        %let where = (ROLE = 'REJECTED' and LEVEL="&level" and USE='Y') or (ROLE in('INPUT', 'TARGET') and LEVEL="&level"  and USE in('Y', 'D'));
17031 +    %else
17032 +        %let where = (ROLE = 'REJECTED' and LEVEL="&level" and USE='Y') or (ROLE ='INPUT' and LEVEL="&level" and USE in('Y', 'D'));
17033 +
17034 +    %if &level = INTERVAL %then %do;
17035 +        %let numvars = %eval( &EM_NUM_INTERVAL_INPUT + &EM_NUM_INTERVAL_REJECTED);
17036 +        %if (%upcase(&EM_PROPERTY_TARGETROLE) eq INPUT) %then
17037 +             %let numvars = %eval(&numvars + &EM_NUM_INTERVAL_TARGET);
17038 +    %end;
17039 +    %else %do;
17040 +        %if &level = NOMINAL %then %do;
17041 +            %let numvars = %eval(&EM_NUM_BINARY_INPUT + &EM_NUM_NOMINAL_INPUT +  &EM_NUM_BINARY_REJECTED + &EM_NUM_NOMINAL_REJECTED);
17042 +             %if (%upcase(&EM_PROPERTY_TARGETROLE) eq INPUT) %then %do;
17043 +                 %let numvars = %eval(&numvars + &EM_NUM_BINARY_TARGET + &EM_NUM_NOMINAL_TARGET);
17044 +                 %let where = (ROLE = 'REJECTED' and LEVEL in('NOMINAL', 'BINARY') and USE='Y') or (ROLE in('INPUT', 'TARGET') and LEVEL in('NOMINAL', 'BINARY') and USE in('Y', 'D'));
17045 +             %end;
17046 +             %else
17047 +                 %let where = (ROLE = 'REJECTED' and LEVEL in('NOMINAL', 'BINARY') and USE='Y') or (ROLE ='INPUT' and LEVEL in("NOMINAL", "BINARY") and USE in('Y', 'D'));
17048 +
17049 +        %end;
17050 +        %else %do;
17051 +            %let numvars = %eval(&EM_NUM_ORDINAL_INPUT + &EM_NUM_ORDINAL_REJECTED);
17052 +            %if (%upcase(&EM_PROPERTY_TARGETROLE) eq INPUT) %then
17053 +                %let numvars = %eval(&numvars + &EM_NUM_ORDINAL_TARGET);
17054 +        %end;
17055 +    %end;
17056 +
17057 +    %if &numvars>0 %then %do;
17058 +         %let numloop = %sysfunc(ceil(&numvars/10000));
17059 +         %let loopcount = 0;
17060 +
17061 +         %do %while((&numloop - &loopcount) > 0);
17062 +             %let first = %eval((&loopcount*10000) + 1);
17063 +             %let last  = %eval(&first + 10000);
17064 +             %let loopcount = %eval(&loopcount +1);
17065 +             %let centry = &EM_LIB..&EM_NODEID._MACS.&LEVEL._&loopcount..SOURCE;
17066 +             filename X catalog "&centry";
17067 +             data _null_;
17068 +                length _STRING_ $80;
17069 +                retain _STRING_ ;
17070 +                file X;
17071 +                set &EM_DATA_VARIABLESET(firstobs=&first obs=&last) end=eof;
17072 +
17073 +                where &where;
17074 +
17075 +                if _N_=1 then
17076 +                   put '%macro _PROFVAR;';
17077 +
17078 +                if (length(_STRING_) + length(trim(NAME))+ 1  < 80) then do;
17079 +                   _STRING_ = trim(_STRING_)!!' '!!trim(NAME);
17080 +                   if eof then do;
17081 +                      put _STRING_;
17082 +                      put '%mend _PROFVAR;';
17083 +                   end;
17084 +                end;
17085 +                else do;
17086 +                   put _STRING_;
17087 +                  _string_ = TRIM(NAME);
17088 +                   if eof then do;
17089 +                      put _string_;
17090 +                      put '%mend _PROFVAR;';
17091 +                   end;
17092 +                end;
17093 +             run;
17094 +             filename X;
17095 +         %end;
17096 +    %end;
17097 +
17098 +%mend makeVarMacros;
17099 +
17100 +
NOTE: %INCLUDE (level 1) ending.
NOTE: Fileref TEMP has been deassigned.
17101  *------------------------------------------------------------*;
17102  * End SCORE: Prof2;
17103  *------------------------------------------------------------*;
 
17104  *------------------------------------------------------------*;
17105  * Prof2: Scoring DATA data;
17106  *------------------------------------------------------------*;
17107  data EMWS4.Prof2_TRAIN
17108  / view=EMWS4.Prof2_TRAIN
17109  ;
17110  set EMWS4.Clus2_TRAIN
17111  ;
17112  run;
 
NOTE: DATA STEP view saved on file EMWS4.PROF2_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS4.CLUS2_TRAIN.VIEW used (Total process time):
      real time           0.21 seconds
      cpu time            0.21 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.23 seconds
      cpu time            0.25 seconds
 
 
17113  quit;
 
17115  *------------------------------------------------------------*;
17116  * Prof2: Computing metadata for TRAIN data;
17117  *------------------------------------------------------------*;
 
NOTE: View EMWS4.PROF2_TRAIN.VIEW used (Total process time):
      real time           0.23 seconds
      cpu time            0.25 seconds
 
NOTE: View EMWS4.PROF2_TRAIN.VIEW used (Total process time):
      real time           0.23 seconds
      cpu time            0.21 seconds
 
*------------------------------------------------------------*
* Report Log
Date:                May 09, 2018
Time:                15:16:32
*------------------------------------------------------------*
17478  %let EMEXCEPTIONSTRING=;
17479  *------------------------------------------------------------*;
17480  * REPORT: Prof2;
17481  *------------------------------------------------------------*;
17482  %let EM_ACTION = REPORT;
17483  %let syscc = 0;
17484  %macro main;
17485     %if %sysfunc(indexw(&EM_DEBUG, _ALL_)) or %sysfunc(indexw(&EM_DEBUG, SOURCE)) %then %do;
17486         options MPRINT;
17487     %end;
17488
17489     filename temp catalog 'sashelp.emexpl.profile_macros.source';
17490     %include temp;
17491     filename temp;
17492
17493     /* Initialize property macro variables */
17494     %SetProperties;
17495
17496     %if %upcase(&EM_ACTION) = CREATE %then %do;
17497
17498         filename temp catalog 'sashelp.emexpl.profile_create.source';
17499         %include temp;
17500         filename temp;
17501         %create;
17502     %end;
17503     %else
17504     %if %upcase(&EM_ACTION) = TRAIN %then %do;
17505
17506         filename temp catalog 'sashelp.emexpl.profile_train.source';
17507         %include temp;
17508         filename temp;
17509         %train;
17510     %end;
17511  %mend main;
17512
17513  %main;
NOTE: %INCLUDE (level 1) file TEMP is file SASHELP.EMEXPL.PROFILE_MACROS.SOURCE.
17514 +%macro SetProperties;
17515 +   %em_checkmacro(name=EM_PROPERTY_PROFILEALL,         global=Y, value=N);
17516 +   %em_checkmacro(name=EM_PROPERTY_USEREPORTVARS,      global=Y, value=Y);
17517 +   %em_checkmacro(name=EM_PROPERTY_OTHERPERCENTCUTOFF, global=Y, value=95);
17518 +   %em_checkmacro(name=EM_PROPERTY_TARGETROLE,         global=Y, value=NONE);
17519 +   %em_checkmacro(name=EM_PROPERTY_NUMHISTBARS,        global=Y, value=8);
17520 +   %em_checkmacro(name=EM_PROPERTY_MINWORTH,           global=Y, value=0.01);
17521 +   %em_checkmacro(name=EM_PROPERTY_MAXDEPTH,           global=Y, value=1);
17522 +   %em_checkmacro(name=EM_PROPERTY_MAXNUMREPORT,       global=Y, value=10);
17523 +   %em_checkmacro(name=EM_PROPERTY_MAXNUMINPUT,        global=Y, value=10);
17524 +   %em_checkmacro(name=EM_PROPERTY_PRINTWORTH,         global=Y, value=Y);
17525 +%mend SetProperties;
17526 +
17527 +
17528 +%macro makeVarMacros(level= );
17529 +
17530 +    %let numvars = 0;
17531 +    %let where   = '';
17532 +
17533 +    %if (%upcase(&EM_PROPERTY_TARGETROLE) eq INPUT) %then
17534 +        %let where = (ROLE = 'REJECTED' and LEVEL="&level" and USE='Y') or (ROLE in('INPUT', 'TARGET') and LEVEL="&level"  and USE in('Y', 'D'));
17535 +    %else
17536 +        %let where = (ROLE = 'REJECTED' and LEVEL="&level" and USE='Y') or (ROLE ='INPUT' and LEVEL="&level" and USE in('Y', 'D'));
17537 +
17538 +    %if &level = INTERVAL %then %do;
17539 +        %let numvars = %eval( &EM_NUM_INTERVAL_INPUT + &EM_NUM_INTERVAL_REJECTED);
17540 +        %if (%upcase(&EM_PROPERTY_TARGETROLE) eq INPUT) %then
17541 +             %let numvars = %eval(&numvars + &EM_NUM_INTERVAL_TARGET);
17542 +    %end;
17543 +    %else %do;
17544 +        %if &level = NOMINAL %then %do;
17545 +            %let numvars = %eval(&EM_NUM_BINARY_INPUT + &EM_NUM_NOMINAL_INPUT +  &EM_NUM_BINARY_REJECTED + &EM_NUM_NOMINAL_REJECTED);
17546 +             %if (%upcase(&EM_PROPERTY_TARGETROLE) eq INPUT) %then %do;
17547 +                 %let numvars = %eval(&numvars + &EM_NUM_BINARY_TARGET + &EM_NUM_NOMINAL_TARGET);
17548 +                 %let where = (ROLE = 'REJECTED' and LEVEL in('NOMINAL', 'BINARY') and USE='Y') or (ROLE in('INPUT', 'TARGET') and LEVEL in('NOMINAL', 'BINARY') and USE in('Y', 'D'));
17549 +             %end;
17550 +             %else
17551 +                 %let where = (ROLE = 'REJECTED' and LEVEL in('NOMINAL', 'BINARY') and USE='Y') or (ROLE ='INPUT' and LEVEL in("NOMINAL", "BINARY") and USE in('Y', 'D'));
17552 +
17553 +        %end;
17554 +        %else %do;
17555 +            %let numvars = %eval(&EM_NUM_ORDINAL_INPUT + &EM_NUM_ORDINAL_REJECTED);
17556 +            %if (%upcase(&EM_PROPERTY_TARGETROLE) eq INPUT) %then
17557 +                %let numvars = %eval(&numvars + &EM_NUM_ORDINAL_TARGET);
17558 +        %end;
17559 +    %end;
17560 +
17561 +    %if &numvars>0 %then %do;
17562 +         %let numloop = %sysfunc(ceil(&numvars/10000));
17563 +         %let loopcount = 0;
17564 +
17565 +         %do %while((&numloop - &loopcount) > 0);
17566 +             %let first = %eval((&loopcount*10000) + 1);
17567 +             %let last  = %eval(&first + 10000);
17568 +             %let loopcount = %eval(&loopcount +1);
17569 +             %let centry = &EM_LIB..&EM_NODEID._MACS.&LEVEL._&loopcount..SOURCE;
17570 +             filename X catalog "&centry";
17571 +             data _null_;
17572 +                length _STRING_ $80;
17573 +                retain _STRING_ ;
17574 +                file X;
17575 +                set &EM_DATA_VARIABLESET(firstobs=&first obs=&last) end=eof;
17576 +
17577 +                where &where;
17578 +
17579 +                if _N_=1 then
17580 +                   put '%macro _PROFVAR;';
17581 +
17582 +                if (length(_STRING_) + length(trim(NAME))+ 1  < 80) then do;
17583 +                   _STRING_ = trim(_STRING_)!!' '!!trim(NAME);
17584 +                   if eof then do;
17585 +                      put _STRING_;
17586 +                      put '%mend _PROFVAR;';
17587 +                   end;
17588 +                end;
17589 +                else do;
17590 +                   put _STRING_;
17591 +                  _string_ = TRIM(NAME);
17592 +                   if eof then do;
17593 +                      put _string_;
17594 +                      put '%mend _PROFVAR;';
17595 +                   end;
17596 +                end;
17597 +             run;
17598 +             filename X;
17599 +         %end;
17600 +    %end;
17601 +
17602 +%mend makeVarMacros;
17603 +
17604 +
NOTE: %INCLUDE (level 1) ending.
NOTE: Fileref TEMP has been deassigned.
17605  *------------------------------------------------------------*;
17606  * End REPORT: Prof2;
17607  *------------------------------------------------------------*;
 
17608  /* Reset EM Options */
17609  options formchar="|----|+|---+=|-/\<>*";
17610  options nocenter ls=256 ps=10000;
17611  goptions reset=all device=GIF NODISPLAY;
 
