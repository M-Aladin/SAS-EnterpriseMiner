*------------------------------------------------------------*
* Score Log
Date:                May 09, 2018
Time:                16:07:52
*------------------------------------------------------------*
NOTE: View EMWS4.REG5_TRAIN.VIEW used (Total process time):
      real time           0.12 seconds
      cpu time            0.12 seconds
      
NOTE: View EMWS4.REG5_TRAIN.VIEW used (Total process time):
      real time           0.23 seconds
      cpu time            0.23 seconds
      
12885  /* Generate assessment metadata, which will be used to generate assessment data step */
12886  /* code, such as retrieving names of temporary variables and summary variables,      */
12887  /* labels, etc.  It is used in almost all the assessment computations such as lift,  */
12888  /* roc, index, scoreDist and could be thought as a global variable in assessment     */
12889  /* computation.                                                                      */
12890  data work.ASSESS_09HUU8Q_assessMeta_W6WA4W;
12891  length VARIABLE $32 FORMAT $44 TYPE $32 PARENT $32 LEVEL $32 PROPERTY $32 MEASUREMENT
12891! $10 LAST_LEVEL $32 GEN_VAR_IN_TEMP_DATA $32 RESULT_MEAN $32 RESULT_MEAN_LABEL $100
12891! RESULT_MIN $32 RESULT_MIN_LABEL $100 MIN_ADJUSTED $32 RESULT_MAX $32 RESULT_MAX_LABEL
12892     $100 MAX_ADJUSTED $32 RESULT_COUNT $32 RESULT_COUNT_LABEL $100 TEMPORARY_VARIABLE $32
12892! ;
12893  VARIABLE = "TargetBuy";
12894  PARENT = "";
12895  FORMAT = "";
12896  TYPE = "";
12897  LEVEL = '';
12898  PROPERTY = "TARGET";
12899  MEASUREMENT = "BINARY";
12900  LAST_LEVEL = '';
12901  GEN_VAR_IN_TEMP_DATA = "TargetBuy";
12902  RESULT_MEAN = "";
12903  RESULT_MEAN_LABEL = "";
12904  RESULT_MIN = "";
12905  RESULT_MIN_LABEL = "";
12906  MIN_ADJUSTED = "";
12907  RESULT_MAX = "";
12908  RESULT_MAX_LABEL = "";
12909  MAX_ADJUSTED = "";
12910  RESULT_COUNT = "";
12911  RESULT_COUNT_LABEL = "";
12912  TEMPORARY_VARIABLE = "TargetBuy_JwMUJFwJVnYUm8B";
12913  output;
12914  VARIABLE = "F_TargetBuy_1";
12915  FORMAT = "";
12916  TYPE = "";
12917  PARENT = "F_TargetBuy";
12918  LEVEL = "1";
12919  PROPERTY = "TARGET_LEVEL";
12920  MEASUREMENT = "INTERVAL";
12921  LAST_LEVEL = "0";
12922  GEN_VAR_IN_TEMP_DATA = "F_TargetBuy_1_oo2Nh9hZhKlHFuC";
12923  RESULT_MEAN = "F_TargetBu_mean_jZ_H_X0rHijzgFc";
12924  /* adjust for tied cases */
12925  RESULT_MEAN_LABEL = "";
12926  RESULT_MIN = "";
12927  RESULT_MIN_LABEL = "";
12928  RESULT_MAX = "";
12929  RESULT_MAX_LABEL = "";
12930  RESULT_COUNT = "NumberOfEvents";
12931  RESULT_COUNT_LABEL = "%sysfunc(sasmsg(sashelp.dmine, assmt_NumEvent_vlabel, NOQUOTE))";
12932  TEMPORARY_VARIABLE = "F_TargetBuy_1_SH1vc_eQ678BNf3";
12933  output;
12934  VARIABLE = "F_TargetBuy_0";
12935  FORMAT = "";
12936  TYPE = "";
12937  PARENT = "F_TargetBuy";
12938  LEVEL = "0";
12939  PROPERTY = "TARGET_LEVEL";
12940  MEASUREMENT = "INTERVAL";
12941  LAST_LEVEL = "0";
12942  GEN_VAR_IN_TEMP_DATA = "F_TargetBuy_0_aBIu2HxntChu8X9";
12943  RESULT_MEAN = "F_TargetBu_mean_z13hiHOANbEab24";
12944  /* adjust for tied cases */
12945  RESULT_MEAN_LABEL = "";
12946  RESULT_MIN = "";
12947  RESULT_MIN_LABEL = "";
12948  RESULT_MAX = "";
12949  RESULT_MAX_LABEL = "";
12950  RESULT_COUNT = "NumberOfEvents";
12951  RESULT_COUNT_LABEL = "%sysfunc(sasmsg(sashelp.dmine, assmt_NumEvent_vlabel, NOQUOTE))";
12952  TEMPORARY_VARIABLE = "F_TargetBuy_0_NYjhfBhiEqTMKN5";
12953  output;
12954  VARIABLE = "P_TargetBuy1";
12955  FORMAT = "";
12956  TYPE = "";
12957  PARENT = "";
12958  LEVEL = "1";
12959  PROPERTY = "POSTERIOR_LEVEL";
12960  MEASUREMENT = "INTERVAL";
12961  LAST_LEVEL = "";
12962  GEN_VAR_IN_TEMP_DATA = "P_TargetBuy1";
12963  RESULT_MEAN = "_meanP_";
12964  RESULT_MEAN_LABEL = "%sysfunc(sasmsg(sashelp.dmine, assmt_probMean_vlabel, NOQUOTE))";
12965  RESULT_MIN = "_minP_";
12966  RESULT_MIN_LABEL = "%sysfunc(sasmsg(sashelp.dmine, assmt_probMin_vlabel, NOQUOTE))";
12967  MIN_ADJUSTED = "P_Target_minAdjusted_ANbIj4K81";
12968  RESULT_MAX = "_maxP_";
12969  RESULT_MAX_LABEL = "%sysfunc(sasmsg(sashelp.dmine, assmt_probMax_vlabel, NOQUOTE))";
12970  MAX_ADJUSTED = "P_Target_maxAdjusted_rsQDhunIj";
12971  RESULT_COUNT = "";
12972  RESULT_COUNT_LABEL = "";
12973  TEMPORARY_VARIABLE = "P_TargetBuy1_GQ8NprYP2mXixSP";
12974  output;
12975  VARIABLE = "P_TargetBuy0";
12976  FORMAT = "";
12977  TYPE = "";
12978  PARENT = "";
12979  LEVEL = "0";
12980  PROPERTY = "POSTERIOR_LEVEL";
12981  MEASUREMENT = "INTERVAL";
12982  LAST_LEVEL = "";
12983  GEN_VAR_IN_TEMP_DATA = "P_TargetBuy0";
12984  RESULT_MEAN = "_meanP_";
12985  RESULT_MEAN_LABEL = "%sysfunc(sasmsg(sashelp.dmine, assmt_probMean_vlabel, NOQUOTE))";
12986  RESULT_MIN = "_minP_";
12987  RESULT_MIN_LABEL = "%sysfunc(sasmsg(sashelp.dmine, assmt_probMin_vlabel, NOQUOTE))";
12988  MIN_ADJUSTED = "P_Target_minAdjusted_e7wQRWo8f";
12989  RESULT_MAX = "_maxP_";
12990  RESULT_MAX_LABEL = "%sysfunc(sasmsg(sashelp.dmine, assmt_probMax_vlabel, NOQUOTE))";
12991  MAX_ADJUSTED = "P_Target_maxAdjusted_QC1YGFMwc";
12992  RESULT_COUNT = "";
12993  RESULT_COUNT_LABEL = "";
12994  TEMPORARY_VARIABLE = "P_TargetBuy0_ru6Rvrf03MrK7Qe";
12995  output;
12996  run;

NOTE: The data set WORK.ASSESS_09HUU8Q_ASSESSMETA_W6WA4W has 5 observations and 20 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

12997  /* Generate temporary dataset and obtain summary statistics such as total number of   */
12998  /* obserations, frequency of target.  However, summary statistics for class reporting */
12999  /* variabels are not computed here since if there exist class reporting variables,    */
13000  /* then PROC DMDB will be called. And there is no need to compute interval reporting  */
13001  /* summary statisitcs, if any.                                                        */
13002  data work.ASSESS_09HUU8Q_normSD_7i6F27(drop=
13003  _numberOfObservation_
13004  _levelFrequency_1
13005  _levelFrequency_2
13006  )
13007  work.ASSESS_09HUU8Q_meansAndTi_wDr0Az (keep=
13008  _numberOfObservation_
13009  _levelFrequency_1
13010  _levelFrequency_2
13011  );
13012  set EMWS4.Reg5_TRAIN(
13013  where=(
13014  (TargetBuy ^= .)
13015  )
13016  ) end=_lastObservation_;
13017  keep frequency_yI7c56;
13018  frequency_yI7c56 = 1;
13019  keep I_TargetBuy F_TargetBuy;
13020  keep F_TargetBuy_1_oo2Nh9hZhKlHFuC;
13021  if (F_TargetBuy = '1') then do;
13022  F_TargetBuy_1_oo2Nh9hZhKlHFuC = 1;
13023  end;
13024  else do;
13025  F_TargetBuy_1_oo2Nh9hZhKlHFuC = 0;
13026  end;
13027  keep F_TargetBuy_0_aBIu2HxntChu8X9;
13028  if (F_TargetBuy = '0') then do;
13029  F_TargetBuy_0_aBIu2HxntChu8X9 = 1;
13030  end;
13031  else do;
13032  F_TargetBuy_0_aBIu2HxntChu8X9 = 0;
13033  end;
13034  keep P_TargetBuy1;
13035  keep P_TargetBuy0;
13036  output work.ASSESS_09HUU8Q_normSD_7i6F27;
13037  keep _numberOfObservation_;
13038  retain _numberOfObservation_ 0;
13039  _numberOfObservation_ + frequency_yI7c56;
13040  keep _levelFrequency_1;
13041  retain _levelFrequency_1 0;
13042  if (F_TargetBuy = '1') then do;
13043  _levelFrequency_1 + frequency_yI7c56;
13044  end;
13045  keep _levelFrequency_2;
13046  retain _levelFrequency_2 0;
13047  if (F_TargetBuy = '0') then do;
13048  _levelFrequency_2 + frequency_yI7c56;
13049  end;
13050  if _lastObservation_ then do;
13051  output work.ASSESS_09HUU8Q_meansAndTi_wDr0Az;
13052  end;
13053  run;

NOTE: There were 3111 observations read from the data set EMWS4.PART5_TRAIN.
NOTE: View EMWS4.REG5_TRAIN.VIEW used (Total process time):
      real time           0.14 seconds
      cpu time            0.14 seconds
      
NOTE: There were 3111 observations read from the data set EMWS4.IMPT3_TRAIN.
NOTE: There were 3111 observations read from the data set EMWS4.REG5_TRAIN.
      WHERE TargetBuy not = .;
NOTE: The data set WORK.ASSESS_09HUU8Q_NORMSD_7I6F27 has 3111 observations and 7 variables.
NOTE: The data set WORK.ASSESS_09HUU8Q_MEANSANDTI_WDR0AZ has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.17 seconds
      cpu time            0.17 seconds
      

13054  data WORK._EMRANK;
13055  set EMWS4.MdlComp2_EMRANK;
13056  where MODEL = "Reg5" and TARGET = "TargetBuy" and dataRole="TRAIN";
13057  run;

NOTE: There were 20 observations read from the data set EMWS4.MDLCOMP2_EMRANK.
      WHERE (MODEL='Reg5') and (TARGET='TargetBuy') and (dataRole='TRAIN');
NOTE: The data set WORK._EMRANK has 20 observations and 38 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

13058  data work._augment;
13059  do BIN= 1 to 20;
13060  DECILE = BIN*5;
13061  output;
13062  end;
13063  run;

NOTE: The data set WORK._AUGMENT has 20 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

13064  data WORK._EMRANK;
13065  merge WORK._AUGMENT WORK._EMRANK;
13066  by BIN;
13067  run;

NOTE: There were 20 observations read from the data set WORK._AUGMENT.
NOTE: There were 20 observations read from the data set WORK._EMRANK.
NOTE: The data set WORK._EMRANK has 20 observations and 38 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
      

13068  data WORK._EMRANK;
13069  set WORK._EMRANK end=_lastObservation_;
13070  retain _previousMinP_ _previousMaxP_;
13071  retain _group_ 1;
13072  keep event;
13073  keep bin _cutoff_ _group_;
13074  if (bin > 1) then do;
13075  bin = bin - 1;
13076  _cutoff_ = (_maxP_ + _previousMinP_) / 2;
13077  if (abs(_previousMaxP_ - _previousMinP_) < 1E-6) then do;
13078  /* tied */
13079  _cutoff_ = max((_minP_ + _maxP_)/2, min(_cutoff_, _previousMinP_/*-1E-6*/
13080  ));
13081  end;
13082  else if (abs(_maxP_ - _minP_) < 1E-6) then do;
13083  /* next tied */
13084  _cutoff_ = min((_previousMinP_ + _previousMaxP_)/2, max(_cutoff_, _maxP_/*+ 1E-6*/
13085  ));
13086  end;
13087  output;
13088  *if ( abs((_maxP_ +_minP_)/2 - (_previousMaxP_ + _previousMinP_)/2) > 1E-6) then do;
13089  * _group_ + 1;
13090  *end;
13091  if (_maxP_ le _previousMinP_ - 1E-6) then do;
13092  _group_ + 1;
13093  end;
13094  else if (abs(_maxP_ - _previousMinP_) < 1E-6) then do;
13095  if (abs(_maxP_ - _minP_) > 1E-6) then do;
13096  _group_ + 1;
13097  end;
13098  end;
13099  bin + 1;
13100  /* correct the previous change */
13101  end;
13102  if (_lastObservation_) then do;
13103  _cutoff_ = .;
13104  output;
13105  end;
13106  _previousMinP_ = _minP_;
13107  _previousMaxP_ = _maxP_;
13108  run;

NOTE: There were 20 observations read from the data set WORK._EMRANK.
NOTE: The data set WORK._EMRANK has 20 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

13109  data WORK._EMRANK;
13110  set WORK._EMRANK;
13111  by _group_;
13112  retain _start_;
13113  if (first._group_) then do;
13114  _start_ = _n_;
13115  end;
13116  if (last._group_) then do;
13117  _end_ = _n_;
13118  output;
13119  end;
13120  run;

NOTE: There were 20 observations read from the data set WORK._EMRANK.
NOTE: The data set WORK._EMRANK has 20 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

NOTE: This SAS session is using a registry in WORK.  All changes will be lost at the end of 
      this session.
13121  filename emflow "D:\Nida\Data
13121! mining\datamining\BOGO\Workspaces\EMWS4\MdlComp2\EMFLOWSCORE.sas";
13122  *------------------------------------------------------------*;
13123  * MdlComp2: Scoring REG5_TRAIN data;
13124  *------------------------------------------------------------*;
13125  data EMWS4.MdlComp2_TRAIN
13126  / view=EMWS4.MdlComp2_TRAIN
13127  ;
13128  set EMWS4.Reg5_TRAIN
13129  ;
13130  %inc emflow;
13210  run;

NOTE: DATA STEP view saved on file EMWS4.MDLCOMP2_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS4.REG5_TRAIN.VIEW used (Total process time):
      real time           0.14 seconds
      cpu time            0.14 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.15 seconds
      cpu time            0.15 seconds
      

13211  quit;
13212  filename emflow;
NOTE: Fileref EMFLOW has been deassigned.

13213  filename emflow "D:\Nida\Data
13213! mining\datamining\BOGO\Workspaces\EMWS4\MdlComp2\EMFLOWSCORE.sas";
13214  *------------------------------------------------------------*;
13215  * MdlComp2: Scoring REG5_VALIDATE data;
13216  *------------------------------------------------------------*;
13217  data EMWS4.MdlComp2_VALIDATE
13218  / view=EMWS4.MdlComp2_VALIDATE
13219  ;
13220  set EMWS4.Reg5_VALIDATE
13221  ;
13222  %inc emflow;
13302  run;

NOTE: DATA STEP view saved on file EMWS4.MDLCOMP2_VALIDATE.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS4.REG5_VALIDATE.VIEW used (Total process time):
      real time           0.09 seconds
      cpu time            0.09 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.11 seconds
      cpu time            0.12 seconds
      

13303  quit;
13304  filename emflow;
NOTE: Fileref EMFLOW has been deassigned.

13305  *------------------------------------------------------------*;
13306  * MdlComp2: Computing metadata for TRAIN data;
13307  *------------------------------------------------------------*;

NOTE: View EMWS4.MDLCOMP2_TRAIN.VIEW used (Total process time):
      real time           0.14 seconds
      cpu time            0.14 seconds
      
NOTE: View EMWS4.MDLCOMP2_TRAIN.VIEW used (Total process time):
      real time           0.17 seconds
      cpu time            0.17 seconds
      
NOTE: View EMWS4.MDLCOMP2_VALIDATE.VIEW used (Total process time):
      real time           0.17 seconds
      cpu time            0.17 seconds
      
