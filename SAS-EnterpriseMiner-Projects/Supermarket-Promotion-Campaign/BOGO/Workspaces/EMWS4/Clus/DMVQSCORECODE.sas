*****************************************;
*** Begin Scoring Code from PROC DMVQ ***;
*****************************************;


*** Begin Class Look-up, Standardization, Replacement ;
drop _dm_bad; _dm_bad = 0;

*** Standardize AffluenceGrade ;
drop T_AffluenceGrade ;
if missing( AffluenceGrade ) then T_AffluenceGrade = .;
else T_AffluenceGrade = (AffluenceGrade - 8.6988769653107) * 0.29378719520695;

*** Standardize CleanserProducts ;
drop T_CleanserProducts ;
if missing( CleanserProducts ) then T_CleanserProducts = .;
else T_CleanserProducts = (CleanserProducts
         - 1.97644122785126) * 0.74289127294021;

*** Standardize DayCareProducts ;
drop T_DayCareProducts ;
if missing( DayCareProducts ) then T_DayCareProducts = .;
else T_DayCareProducts = (DayCareProducts
         - 1.49114050411779) * 0.89771908387093;

*** Standardize LotionProducts ;
drop T_LotionProducts ;
if missing( LotionProducts ) then T_LotionProducts = .;
else T_LotionProducts = (LotionProducts
         - 2.21657100074869) * 0.63890260916425;

*** Standardize NightRepairProducts ;
drop T_NightRepairProducts ;
if missing( NightRepairProducts ) then T_NightRepairProducts = .;
else T_NightRepairProducts = (NightRepairProducts
         - 0.98727227352133) * 1.22065025771133;

*** Standardize REP_Age ;
drop T_REP_Age ;
if missing( REP_Age ) then T_REP_Age = .;
else T_REP_Age = (REP_Age - 53.8264037933616) * 0.07583451902131;

*** Standardize REP_LoyaltyTime ;
drop T_REP_LoyaltyTime ;
if missing( REP_LoyaltyTime ) then T_REP_LoyaltyTime = .;
else T_REP_LoyaltyTime = (REP_LoyaltyTime
         - 6.54170202146244) * 0.21651397329468;

*** Standardize TimeSinceLastPurchase ;
drop T_TimeSinceLastPurchase ;
if missing( TimeSinceLastPurchase ) then T_TimeSinceLastPurchase = .;
else T_TimeSinceLastPurchase = (TimeSinceLastPurchase
         - 3.57499376091839) * 0.27270496289674;

*** Standardize TotalSpend ;
drop T_TotalSpend ;
if missing( TotalSpend ) then T_TotalSpend = .;
else T_TotalSpend = (TotalSpend - 4374.26942850012) * 0.00016465821184;

*** Generate dummy variables for CampaignViewedEmail ;
drop CampaignViewedEmail0 CampaignViewedEmail1 ;
if missing( CampaignViewedEmail ) then do;
   CampaignViewedEmail0 = .;
   CampaignViewedEmail1 = .;
end;
else do;
   length _dm12 $ 12; drop _dm12 ;
   _dm12 = put( CampaignViewedEmail , BEST12. );
   %DMNORMIP( _dm12 )
   if _dm12 = '0'  then do;
      CampaignViewedEmail0 = 0.67983848734155;
      CampaignViewedEmail1 = -0.67983848734155;
   end;
   else if _dm12 = '1'  then do;
      CampaignViewedEmail0 = -0.73543209598014;
      CampaignViewedEmail1 = 0.73543209598014;
   end;
   else do;
      CampaignViewedEmail0 = .;
      CampaignViewedEmail1 = .;
      _DM_BAD = 1;
   end;
end;

*** Generate dummy variables for FacebookLike ;
drop FacebookLike0 FacebookLike1 ;
if missing( FacebookLike ) then do;
   FacebookLike0 = .;
   FacebookLike1 = .;
end;
else do;
   length _dm12 $ 12; drop _dm12 ;
   _dm12 = put( FacebookLike , BEST12. );
   %DMNORMIP( _dm12 )
   if _dm12 = '0'  then do;
      FacebookLike0 = 0.56920531067484;
      FacebookLike1 = -0.56920531067484;
   end;
   else if _dm12 = '1'  then do;
      FacebookLike0 = -0.87837382100458;
      FacebookLike1 = 0.87837382100458;
   end;
   else do;
      FacebookLike0 = .;
      FacebookLike1 = .;
      _DM_BAD = 1;
   end;
end;

*** Generate dummy variables for LoyaltyClass ;
drop LoyaltyClassDiamond LoyaltyClassGold LoyaltyClassPlatinum 
        LoyaltyClassSilver ;
if missing( LoyaltyClass ) then do;
   LoyaltyClassDiamond = .;
   LoyaltyClassGold = .;
   LoyaltyClassPlatinum = .;
   LoyaltyClassSilver = .;
end;
else do;
   length _dm8 $ 8; drop _dm8 ;
   _dm8 = put( LoyaltyClass , $CHAR8. );
   %DMNORMIP( _dm8 )
   if _dm8 = 'GOLD'  then do;
      LoyaltyClassDiamond = -0.09576598846315;
      LoyaltyClassGold = 0.62811155380715;
      LoyaltyClassPlatinum = -0.31752397019633;
      LoyaltyClassSilver = -0.31903352436325;
   end;
   else if _dm8 = 'SILVER'  then do;
      LoyaltyClassDiamond = -0.09576598846315;
      LoyaltyClassGold = -0.39799860442232;
      LoyaltyClassPlatinum = -0.31752397019633;
      LoyaltyClassSilver = 0.78357759528791;
   end;
   else if _dm8 = 'PLATINUM'  then do;
      LoyaltyClassDiamond = -0.09576598846315;
      LoyaltyClassGold = -0.39799860442232;
      LoyaltyClassPlatinum = 0.78730283475043;
      LoyaltyClassSilver = -0.31903352436325;
   end;
   else if _dm8 = 'DIAMOND'  then do;
      LoyaltyClassDiamond = 2.61039984913813;
      LoyaltyClassGold = -0.39799860442232;
      LoyaltyClassPlatinum = -0.31752397019633;
      LoyaltyClassSilver = -0.31903352436325;
   end;
   else do;
      LoyaltyClassDiamond = .;
      LoyaltyClassGold = .;
      LoyaltyClassPlatinum = .;
      LoyaltyClassSilver = .;
      _DM_BAD = 1;
   end;
end;

*** Generate dummy variables for MobileApplications ;
drop MobileApplications0 MobileApplications1 ;
if missing( MobileApplications ) then do;
   MobileApplications0 = .;
   MobileApplications1 = .;
end;
else do;
   length _dm12 $ 12; drop _dm12 ;
   _dm12 = put( MobileApplications , BEST12. );
   %DMNORMIP( _dm12 )
   if _dm12 = '0'  then do;
      MobileApplications0 = 0.69508561075759;
      MobileApplications1 = -0.69508561075759;
   end;
   else if _dm12 = '1'  then do;
      MobileApplications0 = -0.71929994800011;
      MobileApplications1 = 0.71929994800011;
   end;
   else do;
      MobileApplications0 = .;
      MobileApplications1 = .;
      _DM_BAD = 1;
   end;
end;

*** Generate dummy variables for PreviousCampaign ;
drop PreviousCampaign0 PreviousCampaign1 ;
if missing( PreviousCampaign ) then do;
   PreviousCampaign0 = .;
   PreviousCampaign1 = .;
end;
else do;
   length _dm12 $ 12; drop _dm12 ;
   _dm12 = put( PreviousCampaign , BEST12. );
   %DMNORMIP( _dm12 )
   if _dm12 = '0'  then do;
      PreviousCampaign0 = 0.66569999864597;
      PreviousCampaign1 = -0.66569999864597;
   end;
   else if _dm12 = '1'  then do;
      PreviousCampaign0 = -0.75105159184394;
      PreviousCampaign1 = 0.75105159184394;
   end;
   else do;
      PreviousCampaign0 = .;
      PreviousCampaign1 = .;
      _DM_BAD = 1;
   end;
end;

*** Generate dummy variables for REP_AdvertisementZone ;
drop REP_AdvertisementZBorder REP_AdvertisementZCentral_Z1 
        REP_AdvertisementZE_Central REP_AdvertisementZN_Central 
        REP_AdvertisementZN_East REP_AdvertisementZN_West 
        REP_AdvertisementZNE_Z1 REP_AdvertisementZNE_Z2 
        REP_AdvertisementZNE_Z3 REP_AdvertisementZS_Central 
        REP_AdvertisementZS_East REP_AdvertisementZS_West REP_AdvertisementZU 
        REP_AdvertisementZW_Central ;
if missing( REP_AdvertisementZone ) then do;
   REP_AdvertisementZBorder = .;
   REP_AdvertisementZCentral_Z1 = .;
   REP_AdvertisementZE_Central = .;
   REP_AdvertisementZN_Central = .;
   REP_AdvertisementZN_East = .;
   REP_AdvertisementZN_West = .;
   REP_AdvertisementZNE_Z1 = .;
   REP_AdvertisementZNE_Z2 = .;
   REP_AdvertisementZNE_Z3 = .;
   REP_AdvertisementZS_Central = .;
   REP_AdvertisementZS_East = .;
   REP_AdvertisementZS_West = .;
   REP_AdvertisementZU = .;
   REP_AdvertisementZW_Central = .;
end;
else do;
   length _dm10 $ 10; drop _dm10 ;
   _dm10 = put( REP_AdvertisementZone , $CHAR10. );
   %DMNORMIP( _dm10 )
   if _dm10 = 'E CENTRAL'  then do;
      REP_AdvertisementZBorder = -0.02523155540332;
      REP_AdvertisementZCentral_Z1 = -0.07553394592731;
      REP_AdvertisementZE_Central = 0.43116448427317;
      REP_AdvertisementZN_Central = -0.02873720309638;
      REP_AdvertisementZN_East = -0.05130124009742;
      REP_AdvertisementZN_West = -0.08632923037105;
      REP_AdvertisementZNE_Z1 = -0.05292291895022;
      REP_AdvertisementZNE_Z2 = -0.03283921030656;
      REP_AdvertisementZNE_Z3 = -0.07010956560674;
      REP_AdvertisementZS_Central = -0.10870245920649;
      REP_AdvertisementZS_East = -0.09384022195848;
      REP_AdvertisementZS_West = -0.0484302133404;
      REP_AdvertisementZU = -0.03905952239168;
      REP_AdvertisementZW_Central = -0.07706419797192;
   end;
   else if _dm10 = 'S CENTRAL'  then do;
      REP_AdvertisementZBorder = -0.02523155540332;
      REP_AdvertisementZCentral_Z1 = -0.07553394592731;
      REP_AdvertisementZE_Central = -0.1656560520273;
      REP_AdvertisementZN_Central = -0.02873720309638;
      REP_AdvertisementZN_East = -0.05130124009742;
      REP_AdvertisementZN_West = -0.08632923037105;
      REP_AdvertisementZNE_Z1 = -0.05292291895022;
      REP_AdvertisementZNE_Z2 = -0.03283921030656;
      REP_AdvertisementZNE_Z3 = -0.07010956560674;
      REP_AdvertisementZS_Central = 0.65706890865642;
      REP_AdvertisementZS_East = -0.09384022195848;
      REP_AdvertisementZS_West = -0.0484302133404;
      REP_AdvertisementZU = -0.03905952239168;
      REP_AdvertisementZW_Central = -0.07706419797192;
   end;
   else if _dm10 = 'S EAST'  then do;
      REP_AdvertisementZBorder = -0.02523155540332;
      REP_AdvertisementZCentral_Z1 = -0.07553394592731;
      REP_AdvertisementZE_Central = -0.1656560520273;
      REP_AdvertisementZN_Central = -0.02873720309638;
      REP_AdvertisementZN_East = -0.05130124009742;
      REP_AdvertisementZN_West = -0.08632923037105;
      REP_AdvertisementZNE_Z1 = -0.05292291895022;
      REP_AdvertisementZNE_Z2 = -0.03283921030656;
      REP_AdvertisementZNE_Z3 = -0.07010956560674;
      REP_AdvertisementZS_Central = -0.10870245920649;
      REP_AdvertisementZS_East = 0.7611342423154;
      REP_AdvertisementZS_West = -0.0484302133404;
      REP_AdvertisementZU = -0.03905952239168;
      REP_AdvertisementZW_Central = -0.07706419797192;
   end;
   else if _dm10 = 'N WEST'  then do;
      REP_AdvertisementZBorder = -0.02523155540332;
      REP_AdvertisementZCentral_Z1 = -0.07553394592731;
      REP_AdvertisementZE_Central = -0.1656560520273;
      REP_AdvertisementZN_Central = -0.02873720309638;
      REP_AdvertisementZN_East = -0.05130124009742;
      REP_AdvertisementZN_West = 0.82735599439599;
      REP_AdvertisementZNE_Z1 = -0.05292291895022;
      REP_AdvertisementZNE_Z2 = -0.03283921030656;
      REP_AdvertisementZNE_Z3 = -0.07010956560674;
      REP_AdvertisementZS_Central = -0.10870245920649;
      REP_AdvertisementZS_East = -0.09384022195848;
      REP_AdvertisementZS_West = -0.0484302133404;
      REP_AdvertisementZU = -0.03905952239168;
      REP_AdvertisementZW_Central = -0.07706419797192;
   end;
   else if _dm10 = 'W CENTRAL'  then do;
      REP_AdvertisementZBorder = -0.02523155540332;
      REP_AdvertisementZCentral_Z1 = -0.07553394592731;
      REP_AdvertisementZE_Central = -0.1656560520273;
      REP_AdvertisementZN_Central = -0.02873720309638;
      REP_AdvertisementZN_East = -0.05130124009742;
      REP_AdvertisementZN_West = -0.08632923037105;
      REP_AdvertisementZNE_Z1 = -0.05292291895022;
      REP_AdvertisementZNE_Z2 = -0.03283921030656;
      REP_AdvertisementZNE_Z3 = -0.07010956560674;
      REP_AdvertisementZS_Central = -0.10870245920649;
      REP_AdvertisementZS_East = -0.09384022195848;
      REP_AdvertisementZS_West = -0.0484302133404;
      REP_AdvertisementZU = -0.03905952239168;
      REP_AdvertisementZW_Central = 0.92682475285219;
   end;
   else if _dm10 = 'CENTRAL Z1'  then do;
      REP_AdvertisementZBorder = -0.02523155540332;
      REP_AdvertisementZCentral_Z1 = 0.94560141618724;
      REP_AdvertisementZE_Central = -0.1656560520273;
      REP_AdvertisementZN_Central = -0.02873720309638;
      REP_AdvertisementZN_East = -0.05130124009742;
      REP_AdvertisementZN_West = -0.08632923037105;
      REP_AdvertisementZNE_Z1 = -0.05292291895022;
      REP_AdvertisementZNE_Z2 = -0.03283921030656;
      REP_AdvertisementZNE_Z3 = -0.07010956560674;
      REP_AdvertisementZS_Central = -0.10870245920649;
      REP_AdvertisementZS_East = -0.09384022195848;
      REP_AdvertisementZS_West = -0.0484302133404;
      REP_AdvertisementZU = -0.03905952239168;
      REP_AdvertisementZW_Central = -0.07706419797192;
   end;
   else if _dm10 = 'NE Z3'  then do;
      REP_AdvertisementZBorder = -0.02523155540332;
      REP_AdvertisementZCentral_Z1 = -0.07553394592731;
      REP_AdvertisementZE_Central = -0.1656560520273;
      REP_AdvertisementZN_Central = -0.02873720309638;
      REP_AdvertisementZN_East = -0.05130124009742;
      REP_AdvertisementZN_West = -0.08632923037105;
      REP_AdvertisementZNE_Z1 = -0.05292291895022;
      REP_AdvertisementZNE_Z2 = -0.03283921030656;
      REP_AdvertisementZNE_Z3 = 1.01876264131657;
      REP_AdvertisementZS_Central = -0.10870245920649;
      REP_AdvertisementZS_East = -0.09384022195848;
      REP_AdvertisementZS_West = -0.0484302133404;
      REP_AdvertisementZU = -0.03905952239168;
      REP_AdvertisementZW_Central = -0.07706419797192;
   end;
   else if _dm10 = 'NE Z1'  then do;
      REP_AdvertisementZBorder = -0.02523155540332;
      REP_AdvertisementZCentral_Z1 = -0.07553394592731;
      REP_AdvertisementZE_Central = -0.1656560520273;
      REP_AdvertisementZN_Central = -0.02873720309638;
      REP_AdvertisementZN_East = -0.05130124009742;
      REP_AdvertisementZN_West = -0.08632923037105;
      REP_AdvertisementZNE_Z1 = 1.34960443709186;
      REP_AdvertisementZNE_Z2 = -0.03283921030656;
      REP_AdvertisementZNE_Z3 = -0.07010956560674;
      REP_AdvertisementZS_Central = -0.10870245920649;
      REP_AdvertisementZS_East = -0.09384022195848;
      REP_AdvertisementZS_West = -0.0484302133404;
      REP_AdvertisementZU = -0.03905952239168;
      REP_AdvertisementZW_Central = -0.07706419797192;
   end;
   else if _dm10 = 'N EAST'  then do;
      REP_AdvertisementZBorder = -0.02523155540332;
      REP_AdvertisementZCentral_Z1 = -0.07553394592731;
      REP_AdvertisementZE_Central = -0.1656560520273;
      REP_AdvertisementZN_Central = -0.02873720309638;
      REP_AdvertisementZN_East = 1.39226666067785;
      REP_AdvertisementZN_West = -0.08632923037105;
      REP_AdvertisementZNE_Z1 = -0.05292291895022;
      REP_AdvertisementZNE_Z2 = -0.03283921030656;
      REP_AdvertisementZNE_Z3 = -0.07010956560674;
      REP_AdvertisementZS_Central = -0.10870245920649;
      REP_AdvertisementZS_East = -0.09384022195848;
      REP_AdvertisementZS_West = -0.0484302133404;
      REP_AdvertisementZU = -0.03905952239168;
      REP_AdvertisementZW_Central = -0.07706419797192;
   end;
   else if _dm10 = 'S WEST'  then do;
      REP_AdvertisementZBorder = -0.02523155540332;
      REP_AdvertisementZCentral_Z1 = -0.07553394592731;
      REP_AdvertisementZE_Central = -0.1656560520273;
      REP_AdvertisementZN_Central = -0.02873720309638;
      REP_AdvertisementZN_East = -0.05130124009742;
      REP_AdvertisementZN_West = -0.08632923037105;
      REP_AdvertisementZNE_Z1 = -0.05292291895022;
      REP_AdvertisementZNE_Z2 = -0.03283921030656;
      REP_AdvertisementZNE_Z3 = -0.07010956560674;
      REP_AdvertisementZS_Central = -0.10870245920649;
      REP_AdvertisementZS_East = -0.09384022195848;
      REP_AdvertisementZS_West = 1.47480263481501;
      REP_AdvertisementZU = -0.03905952239168;
      REP_AdvertisementZW_Central = -0.07706419797192;
   end;
   else if _dm10 = 'U'  then do;
      REP_AdvertisementZBorder = -0.02523155540332;
      REP_AdvertisementZCentral_Z1 = -0.07553394592731;
      REP_AdvertisementZE_Central = -0.1656560520273;
      REP_AdvertisementZN_Central = -0.02873720309638;
      REP_AdvertisementZN_East = -0.05130124009742;
      REP_AdvertisementZN_West = -0.08632923037105;
      REP_AdvertisementZNE_Z1 = -0.05292291895022;
      REP_AdvertisementZNE_Z2 = -0.03283921030656;
      REP_AdvertisementZNE_Z3 = -0.07010956560674;
      REP_AdvertisementZS_Central = -0.10870245920649;
      REP_AdvertisementZS_East = -0.09384022195848;
      REP_AdvertisementZS_West = -0.0484302133404;
      REP_AdvertisementZU = 1.82861954948755;
      REP_AdvertisementZW_Central = -0.07706419797192;
   end;
   else if _dm10 = 'NE Z2'  then do;
      REP_AdvertisementZBorder = -0.02523155540332;
      REP_AdvertisementZCentral_Z1 = -0.07553394592731;
      REP_AdvertisementZE_Central = -0.1656560520273;
      REP_AdvertisementZN_Central = -0.02873720309638;
      REP_AdvertisementZN_East = -0.05130124009742;
      REP_AdvertisementZN_West = -0.08632923037105;
      REP_AdvertisementZNE_Z1 = -0.05292291895022;
      REP_AdvertisementZNE_Z2 = 2.17499159000206;
      REP_AdvertisementZNE_Z3 = -0.07010956560674;
      REP_AdvertisementZS_Central = -0.10870245920649;
      REP_AdvertisementZS_East = -0.09384022195848;
      REP_AdvertisementZS_West = -0.0484302133404;
      REP_AdvertisementZU = -0.03905952239168;
      REP_AdvertisementZW_Central = -0.07706419797192;
   end;
   else if _dm10 = 'N CENTRAL'  then do;
      REP_AdvertisementZBorder = -0.02523155540332;
      REP_AdvertisementZCentral_Z1 = -0.07553394592731;
      REP_AdvertisementZE_Central = -0.1656560520273;
      REP_AdvertisementZN_Central = 2.48545434291281;
      REP_AdvertisementZN_East = -0.05130124009742;
      REP_AdvertisementZN_West = -0.08632923037105;
      REP_AdvertisementZNE_Z1 = -0.05292291895022;
      REP_AdvertisementZNE_Z2 = -0.03283921030656;
      REP_AdvertisementZNE_Z3 = -0.07010956560674;
      REP_AdvertisementZS_Central = -0.10870245920649;
      REP_AdvertisementZS_East = -0.09384022195848;
      REP_AdvertisementZS_West = -0.0484302133404;
      REP_AdvertisementZU = -0.03905952239168;
      REP_AdvertisementZW_Central = -0.07706419797192;
   end;
   else if _dm10 = 'BORDER'  then do;
      REP_AdvertisementZBorder = 2.83078094462867;
      REP_AdvertisementZCentral_Z1 = -0.07553394592731;
      REP_AdvertisementZE_Central = -0.1656560520273;
      REP_AdvertisementZN_Central = -0.02873720309638;
      REP_AdvertisementZN_East = -0.05130124009742;
      REP_AdvertisementZN_West = -0.08632923037105;
      REP_AdvertisementZNE_Z1 = -0.05292291895022;
      REP_AdvertisementZNE_Z2 = -0.03283921030656;
      REP_AdvertisementZNE_Z3 = -0.07010956560674;
      REP_AdvertisementZS_Central = -0.10870245920649;
      REP_AdvertisementZS_East = -0.09384022195848;
      REP_AdvertisementZS_West = -0.0484302133404;
      REP_AdvertisementZU = -0.03905952239168;
      REP_AdvertisementZW_Central = -0.07706419797192;
   end;
   else do;
      REP_AdvertisementZBorder = .;
      REP_AdvertisementZCentral_Z1 = .;
      REP_AdvertisementZE_Central = .;
      REP_AdvertisementZN_Central = .;
      REP_AdvertisementZN_East = .;
      REP_AdvertisementZN_West = .;
      REP_AdvertisementZNE_Z1 = .;
      REP_AdvertisementZNE_Z2 = .;
      REP_AdvertisementZNE_Z3 = .;
      REP_AdvertisementZS_Central = .;
      REP_AdvertisementZS_East = .;
      REP_AdvertisementZS_West = .;
      REP_AdvertisementZU = .;
      REP_AdvertisementZW_Central = .;
      _DM_BAD = 1;
   end;
end;

*** Generate dummy variables for REP_ClusterGroup ;
drop REP_ClusterGroupA REP_ClusterGroupB REP_ClusterGroupC REP_ClusterGroupD 
        REP_ClusterGroupE REP_ClusterGroupF REP_ClusterGroupU ;
if missing( REP_ClusterGroup ) then do;
   REP_ClusterGroupA = .;
   REP_ClusterGroupB = .;
   REP_ClusterGroupC = .;
   REP_ClusterGroupD = .;
   REP_ClusterGroupE = .;
   REP_ClusterGroupF = .;
   REP_ClusterGroupU = .;
end;
else do;
   length _dm1 $ 1; drop _dm1 ;
   _dm1 = put( REP_ClusterGroup , $CHAR1. );
   %DMNORMIP( _dm1 )
   _dm_find = 0; drop _dm_find;
   if _dm1 <= 'D'  then do;
      if _dm1 <= 'B'  then do;
         if _dm1 = 'A'  then do;
            REP_ClusterGroupA = 1.26120769071827;
            REP_ClusterGroupB = -0.18145776120828;
            REP_ClusterGroupC = -0.19221457895578;
            REP_ClusterGroupD = -0.18770918051196;
            REP_ClusterGroupE = -0.13797453417129;
            REP_ClusterGroupF = -0.17584220006902;
            REP_ClusterGroupU = -0.06804519304737;
            _dm_find = 1;
         end;
         else do;
            if _dm1 = 'B'  then do;
               REP_ClusterGroupA = -0.11326446352131;
               REP_ClusterGroupB = 0.78723561630517;
               REP_ClusterGroupC = -0.19221457895578;
               REP_ClusterGroupD = -0.18770918051196;
               REP_ClusterGroupE = -0.13797453417129;
               REP_ClusterGroupF = -0.17584220006902;
               REP_ClusterGroupU = -0.06804519304737;
               _dm_find = 1;
            end;
         end;
      end;
      else do;
         if _dm1 = 'C'  then do;
            REP_ClusterGroupA = -0.11326446352131;
            REP_ClusterGroupB = -0.18145776120828;
            REP_ClusterGroupC = 0.74317990474086;
            REP_ClusterGroupD = -0.18770918051196;
            REP_ClusterGroupE = -0.13797453417129;
            REP_ClusterGroupF = -0.17584220006902;
            REP_ClusterGroupU = -0.06804519304737;
            _dm_find = 1;
         end;
         else do;
            if _dm1 = 'D'  then do;
               REP_ClusterGroupA = -0.11326446352131;
               REP_ClusterGroupB = -0.18145776120828;
               REP_ClusterGroupC = -0.19221457895578;
               REP_ClusterGroupD = 0.76101771947725;
               REP_ClusterGroupE = -0.13797453417129;
               REP_ClusterGroupF = -0.17584220006902;
               REP_ClusterGroupU = -0.06804519304737;
               _dm_find = 1;
            end;
         end;
      end;
   end;
   else do;
      if _dm1 <= 'F'  then do;
         if _dm1 = 'E'  then do;
            REP_ClusterGroupA = -0.11326446352131;
            REP_ClusterGroupB = -0.18145776120828;
            REP_ClusterGroupC = -0.19221457895578;
            REP_ClusterGroupD = -0.18770918051196;
            REP_ClusterGroupE = 1.03533607369031;
            REP_ClusterGroupF = -0.17584220006902;
            REP_ClusterGroupU = -0.06804519304737;
            _dm_find = 1;
         end;
         else do;
            if _dm1 = 'F'  then do;
               REP_ClusterGroupA = -0.11326446352131;
               REP_ClusterGroupB = -0.18145776120828;
               REP_ClusterGroupC = -0.19221457895578;
               REP_ClusterGroupD = -0.18770918051196;
               REP_ClusterGroupE = -0.13797453417129;
               REP_ClusterGroupF = 0.81237616693881;
               REP_ClusterGroupU = -0.06804519304737;
               _dm_find = 1;
            end;
         end;
      end;
      else do;
         if _dm1 = 'U'  then do;
            REP_ClusterGroupA = -0.11326446352131;
            REP_ClusterGroupB = -0.18145776120828;
            REP_ClusterGroupC = -0.19221457895578;
            REP_ClusterGroupD = -0.18770918051196;
            REP_ClusterGroupE = -0.13797453417129;
            REP_ClusterGroupF = -0.17584220006902;
            REP_ClusterGroupU = 2.09934024845373;
            _dm_find = 1;
         end;
      end;
   end;
   if not _dm_find then do;
      REP_ClusterGroupA = .;
      REP_ClusterGroupB = .;
      REP_ClusterGroupC = .;
      REP_ClusterGroupD = .;
      REP_ClusterGroupE = .;
      REP_ClusterGroupF = .;
      REP_ClusterGroupU = .;
      _DM_BAD = 1;
   end;
end;

*** Generate dummy variables for REP_Gender ;
drop REP_GenderF REP_GenderM REP_GenderU ;
if missing( REP_Gender ) then do;
   REP_GenderF = .;
   REP_GenderM = .;
   REP_GenderU = .;
end;
else do;
   length _dm1 $ 1; drop _dm1 ;
   _dm1 = put( REP_Gender , $CHAR1. );
   %DMNORMIP( _dm1 )
   if _dm1 = 'F'  then do;
      REP_GenderF = 0.52704276885837;
      REP_GenderM = -0.3437201667065;
      REP_GenderU = -0.28221406496068;
   end;
   else if _dm1 = 'M'  then do;
      REP_GenderF = -0.63242817372179;
      REP_GenderM = 0.96973273048303;
      REP_GenderU = -0.28221406496068;
   end;
   else if _dm1 = 'U'  then do;
      REP_GenderF = -0.63242817372179;
      REP_GenderM = -0.3437201667065;
      REP_GenderU = 1.18107754774309;
   end;
   else do;
      REP_GenderF = .;
      REP_GenderM = .;
      REP_GenderU = .;
      _DM_BAD = 1;
   end;
end;

*** Generate dummy variables for REP_Region ;
drop REP_RegionCentral REP_RegionNorth REP_RegionNorthEast 
        REP_RegionSouth_East REP_RegionSouth_West REP_RegionU ;
if missing( REP_Region ) then do;
   REP_RegionCentral = .;
   REP_RegionNorth = .;
   REP_RegionNorthEast = .;
   REP_RegionSouth_East = .;
   REP_RegionSouth_West = .;
   REP_RegionU = .;
end;
else do;
   length _dm10 $ 10; drop _dm10 ;
   _dm10 = put( REP_Region , $CHAR10. );
   %DMNORMIP( _dm10 )
   _dm_find = 0; drop _dm_find;
   if _dm10 <= 'NORTHEAST'  then do;
      if _dm10 <= 'NORTH'  then do;
         if _dm10 = 'CENTRAL'  then do;
            REP_RegionCentral = 0.61753344891455;
            REP_RegionNorth = -0.20054669164282;
            REP_RegionNorthEast = -0.1044521638542;
            REP_RegionSouth_East = -0.32458888672878;
            REP_RegionSouth_West = -0.07397837285175;
            REP_RegionU = -0.05966440598957;
            _dm_find = 1;
         end;
         else do;
            if _dm10 = 'NORTH'  then do;
               REP_RegionCentral = -0.26987744256465;
               REP_RegionNorth = 0.83102018051739;
               REP_RegionNorthEast = -0.1044521638542;
               REP_RegionSouth_East = -0.32458888672878;
               REP_RegionSouth_West = -0.07397837285175;
               REP_RegionU = -0.05966440598957;
               _dm_find = 1;
            end;
         end;
      end;
      else do;
         if _dm10 = 'NORTHEAST'  then do;
            REP_RegionCentral = -0.26987744256465;
            REP_RegionNorth = -0.20054669164282;
            REP_RegionNorthEast = 1.59554710732287;
            REP_RegionSouth_East = -0.32458888672878;
            REP_RegionSouth_West = -0.07397837285175;
            REP_RegionU = -0.05966440598957;
            _dm_find = 1;
         end;
      end;
   end;
   else do;
      if _dm10 <= 'SOUTH WEST'  then do;
         if _dm10 = 'SOUTH EAST'  then do;
            REP_RegionCentral = -0.26987744256465;
            REP_RegionNorth = -0.20054669164282;
            REP_RegionNorthEast = -0.1044521638542;
            REP_RegionSouth_East = 0.51344440523142;
            REP_RegionSouth_West = -0.07397837285175;
            REP_RegionU = -0.05966440598957;
            _dm_find = 1;
         end;
         else do;
            if _dm10 = 'SOUTH WEST'  then do;
               REP_RegionCentral = -0.26987744256465;
               REP_RegionNorth = -0.20054669164282;
               REP_RegionNorthEast = -0.1044521638542;
               REP_RegionSouth_East = -0.32458888672878;
               REP_RegionSouth_West = 2.2527982363867;
               REP_RegionU = -0.05966440598957;
               _dm_find = 1;
            end;
         end;
      end;
      else do;
         if _dm10 = 'U'  then do;
            REP_RegionCentral = -0.26987744256465;
            REP_RegionNorth = -0.20054669164282;
            REP_RegionNorthEast = -0.1044521638542;
            REP_RegionSouth_East = -0.32458888672878;
            REP_RegionSouth_West = -0.07397837285175;
            REP_RegionU = 2.79326250093426;
            _dm_find = 1;
         end;
      end;
   end;
   if not _dm_find then do;
      REP_RegionCentral = .;
      REP_RegionNorth = .;
      REP_RegionNorthEast = .;
      REP_RegionSouth_East = .;
      REP_RegionSouth_West = .;
      REP_RegionU = .;
      _DM_BAD = 1;
   end;
end;

*** End Class Look-up, Standardization, Replacement ;


*** Omitted Cases;
if _dm_bad then do;
   _SEGMENT_ = .; Distance = .;
   goto CLUSvlex ;
end; *** omitted;

*** Compute Distances and Cluster Membership;
label _SEGMENT_ = 'Segment Id' ;
label Distance = 'Distance' ;
array CLUSvads [2] _temporary_;
drop _vqclus _vqmvar _vqnvar;
_vqmvar = 0;
do _vqclus = 1 to 2; CLUSvads [_vqclus] = 0; end;
if not missing( T_AffluenceGrade ) then do;
   CLUSvads [1] + ( T_AffluenceGrade - 0.13421747672747 )**2;
   CLUSvads [2] + ( T_AffluenceGrade - -0.21128517600726 )**2;
end;
else _vqmvar + 1;
if not missing( T_CleanserProducts ) then do;
   CLUSvads [1] + ( T_CleanserProducts - -0.01536217681992 )**2;
   CLUSvads [2] + ( T_CleanserProducts - 0.02418314151325 )**2;
end;
else _vqmvar + 1;
if not missing( T_DayCareProducts ) then do;
   CLUSvads [1] + ( T_DayCareProducts - 0.00062621573986 )**2;
   CLUSvads [2] + ( T_DayCareProducts - -0.00098578893034 )**2;
end;
else _vqmvar + 1;
if not missing( T_LotionProducts ) then do;
   CLUSvads [1] + ( T_LotionProducts - 0.00925981694869 )**2;
   CLUSvads [2] + ( T_LotionProducts - -0.01457680550627 )**2;
end;
else _vqmvar + 1;
if not missing( T_NightRepairProducts ) then do;
   CLUSvads [1] + ( T_NightRepairProducts - 0.04811467216809 )**2;
   CLUSvads [2] + ( T_NightRepairProducts - -0.07574212558186 )**2;
end;
else _vqmvar + 1;
if not missing( T_REP_Age ) then do;
   CLUSvads [1] + ( T_REP_Age - -0.49868128118489 )**2;
   CLUSvads [2] + ( T_REP_Age - 0.78502416254366 )**2;
end;
else _vqmvar + 1;
if not missing( T_REP_LoyaltyTime ) then do;
   CLUSvads [1] + ( T_REP_LoyaltyTime - -0.1225699027493 )**2;
   CLUSvads [2] + ( T_REP_LoyaltyTime - 0.19294956295571 )**2;
end;
else _vqmvar + 1;
if not missing( T_TimeSinceLastPurchase ) then do;
   CLUSvads [1] + ( T_TimeSinceLastPurchase - -0.15900719380803 )**2;
   CLUSvads [2] + ( T_TimeSinceLastPurchase - 0.25030915309465 )**2;
end;
else _vqmvar + 1;
if not missing( T_TotalSpend ) then do;
   CLUSvads [1] + ( T_TotalSpend - -0.47505307982576 )**2;
   CLUSvads [2] + ( T_TotalSpend - 0.74782864371384 )**2;
end;
else _vqmvar + 1;
if not missing( CampaignViewedEmail0 ) then do;
   CLUSvads [1] + ( CampaignViewedEmail0 - 0.00570209130291 )**2;
   CLUSvads [2] + ( CampaignViewedEmail0 - -0.00897623315473 )**2;
end;
else _vqmvar + 0.5;
if not missing( CampaignViewedEmail1 ) then do;
   CLUSvads [1] + ( CampaignViewedEmail1 - -0.00570209130291 )**2;
   CLUSvads [2] + ( CampaignViewedEmail1 - 0.00897623315473 )**2;
end;
else _vqmvar + 0.5;
if not missing( FacebookLike0 ) then do;
   CLUSvads [1] + ( FacebookLike0 - -0.09763574541385 )**2;
   CLUSvads [2] + ( FacebookLike0 - 0.15369820799312 )**2;
end;
else _vqmvar + 0.5;
if not missing( FacebookLike1 ) then do;
   CLUSvads [1] + ( FacebookLike1 - 0.09763574541385 )**2;
   CLUSvads [2] + ( FacebookLike1 - -0.15369820799312 )**2;
end;
else _vqmvar + 0.5;
if not missing( LoyaltyClassDiamond ) then do;
   CLUSvads [1] + ( LoyaltyClassDiamond - -0.09377810954231 )**2;
   CLUSvads [2] + ( LoyaltyClassDiamond - 0.14762551691019 )**2;
end;
else _vqmvar + 0.24999999999999;
if not missing( LoyaltyClassGold ) then do;
   CLUSvads [1] + ( LoyaltyClassGold - 0.09386761817656 )**2;
   CLUSvads [2] + ( LoyaltyClassGold - -0.1477664214184 )**2;
end;
else _vqmvar + 0.25;
if not missing( LoyaltyClassPlatinum ) then do;
   CLUSvads [1] + ( LoyaltyClassPlatinum - -0.24511326791327 )**2;
   CLUSvads [2] + ( LoyaltyClassPlatinum - 0.38585735043978 )**2;
end;
else _vqmvar + 0.25;
if not missing( LoyaltyClassSilver ) then do;
   CLUSvads [1] + ( LoyaltyClassSilver - 0.18196517814229 )**2;
   CLUSvads [2] + ( LoyaltyClassSilver - -0.28644961616337 )**2;
end;
else _vqmvar + 0.25;
if not missing( MobileApplications0 ) then do;
   CLUSvads [1] + ( MobileApplications0 - -0.02088069967461 )**2;
   CLUSvads [2] + ( MobileApplications0 - 0.03287040118375 )**2;
end;
else _vqmvar + 0.49999999999999;
if not missing( MobileApplications1 ) then do;
   CLUSvads [1] + ( MobileApplications1 - 0.02088069967461 )**2;
   CLUSvads [2] + ( MobileApplications1 - -0.03287040118375 )**2;
end;
else _vqmvar + 0.5;
if not missing( PreviousCampaign0 ) then do;
   CLUSvads [1] + ( PreviousCampaign0 - -0.02371176943277 )**2;
   CLUSvads [2] + ( PreviousCampaign0 - 0.03732707170633 )**2;
end;
else _vqmvar + 0.5;
if not missing( PreviousCampaign1 ) then do;
   CLUSvads [1] + ( PreviousCampaign1 - 0.02371176943277 )**2;
   CLUSvads [2] + ( PreviousCampaign1 - -0.03732707170633 )**2;
end;
else _vqmvar + 0.5;
if not missing( REP_AdvertisementZBorder ) then do;
   CLUSvads [1] + ( REP_AdvertisementZBorder - -0.0028533967351 )**2;
   CLUSvads [2] + ( REP_AdvertisementZBorder - 0.00449181765366 )**2;
end;
else _vqmvar + 0.07142857142857;
if not missing( REP_AdvertisementZCentral_Z1 ) then do;
   CLUSvads [1] + ( REP_AdvertisementZCentral_Z1 - 0.00089285190642 )**2;
   CLUSvads [2] + ( REP_AdvertisementZCentral_Z1 - -0.0014055276317 )**2;
end;
else _vqmvar + 0.07142857142857;
if not missing( REP_AdvertisementZE_Central ) then do;
   CLUSvads [1] + ( REP_AdvertisementZE_Central - 0.00025732918714 )**2;
   CLUSvads [2] + ( REP_AdvertisementZE_Central - -0.00040508765269 )**2;
end;
else _vqmvar + 0.07142857142857;
if not missing( REP_AdvertisementZN_Central ) then do;
   CLUSvads [1] + ( REP_AdvertisementZN_Central - -0.00041868911097 )**2;
   CLUSvads [2] + ( REP_AdvertisementZN_Central - 0.0006591004738 )**2;
end;
else _vqmvar + 0.07142857142857;
if not missing( REP_AdvertisementZN_East ) then do;
   CLUSvads [1] + ( REP_AdvertisementZN_East - 0.0018369514835 )**2;
   CLUSvads [2] + ( REP_AdvertisementZN_East - -0.00289172935576 )**2;
end;
else _vqmvar + 0.07142857142857;
if not missing( REP_AdvertisementZN_West ) then do;
   CLUSvads [1] + ( REP_AdvertisementZN_West - 0.00450235661607 )**2;
   CLUSvads [2] + ( REP_AdvertisementZN_West - -0.0070876105949 )**2;
end;
else _vqmvar + 0.07142857142857;
if not missing( REP_AdvertisementZNE_Z1 ) then do;
   CLUSvads [1] + ( REP_AdvertisementZNE_Z1 - -0.00278359623177 )**2;
   CLUSvads [2] + ( REP_AdvertisementZNE_Z1 - 0.00438193768877 )**2;
end;
else _vqmvar + 0.07142857142857;
if not missing( REP_AdvertisementZNE_Z2 ) then do;
   CLUSvads [1] + ( REP_AdvertisementZNE_Z2 - -0.00040291059585 )**2;
   CLUSvads [2] + ( REP_AdvertisementZNE_Z2 - 0.00063426193247 )**2;
end;
else _vqmvar + 0.07142857142857;
if not missing( REP_AdvertisementZNE_Z3 ) then do;
   CLUSvads [1] + ( REP_AdvertisementZNE_Z3 - 0.00054448307951 )**2;
   CLUSvads [2] + ( REP_AdvertisementZNE_Z3 - -0.00085712536171 )**2;
end;
else _vqmvar + 0.07142857142857;
if not missing( REP_AdvertisementZS_Central ) then do;
   CLUSvads [1] + ( REP_AdvertisementZS_Central - 0.00580073585756 )**2;
   CLUSvads [2] + ( REP_AdvertisementZS_Central - -0.00913151943041 )**2;
end;
else _vqmvar + 0.07142857142857;
if not missing( REP_AdvertisementZS_East ) then do;
   CLUSvads [1] + ( REP_AdvertisementZS_East - -0.00612369391471 )**2;
   CLUSvads [2] + ( REP_AdvertisementZS_East - 0.00963992006207 )**2;
end;
else _vqmvar + 0.07142857142857;
if not missing( REP_AdvertisementZS_West ) then do;
   CLUSvads [1] + ( REP_AdvertisementZS_West - -0.00528935484302 )**2;
   CLUSvads [2] + ( REP_AdvertisementZS_West - 0.00832650334533 )**2;
end;
else _vqmvar + 0.07142857142857;
if not missing( REP_AdvertisementZU ) then do;
   CLUSvads [1] + ( REP_AdvertisementZU - -0.00049252882447 )**2;
   CLUSvads [2] + ( REP_AdvertisementZU - 0.00077533896408 )**2;
end;
else _vqmvar + 0.07142857142857;
if not missing( REP_AdvertisementZW_Central ) then do;
   CLUSvads [1] + ( REP_AdvertisementZW_Central - -0.00135464928097 )**2;
   CLUSvads [2] + ( REP_AdvertisementZW_Central - 0.00213248914178 )**2;
end;
else _vqmvar + 0.07142857142857;
if not missing( REP_ClusterGroupA ) then do;
   CLUSvads [1] + ( REP_ClusterGroupA - -0.02553697212274 )**2;
   CLUSvads [2] + ( REP_ClusterGroupA - 0.04020030610918 )**2;
end;
else _vqmvar + 0.14285714285714;
if not missing( REP_ClusterGroupB ) then do;
   CLUSvads [1] + ( REP_ClusterGroupB - -0.03234286486561 )**2;
   CLUSvads [2] + ( REP_ClusterGroupB - 0.05091414368926 )**2;
end;
else _vqmvar + 0.14285714285714;
if not missing( REP_ClusterGroupC ) then do;
   CLUSvads [1] + ( REP_ClusterGroupC - -0.00631141475391 )**2;
   CLUSvads [2] + ( REP_ClusterGroupC - 0.00993543024089 )**2;
end;
else _vqmvar + 0.14285714285714;
if not missing( REP_ClusterGroupD ) then do;
   CLUSvads [1] + ( REP_ClusterGroupD - 0.01540138581775 )**2;
   CLUSvads [2] + ( REP_ClusterGroupD - -0.02424486432469 )**2;
end;
else _vqmvar + 0.14285714285714;
if not missing( REP_ClusterGroupE ) then do;
   CLUSvads [1] + ( REP_ClusterGroupE - 0.00749223152751 )**2;
   CLUSvads [2] + ( REP_ClusterGroupE - -0.0117942722183 )**2;
end;
else _vqmvar + 0.14285714285714;
if not missing( REP_ClusterGroupF ) then do;
   CLUSvads [1] + ( REP_ClusterGroupF - 0.03249668680505 )**2;
   CLUSvads [2] + ( REP_ClusterGroupF - -0.05115629021399 )**2;
end;
else _vqmvar + 0.14285714285714;
if not missing( REP_ClusterGroupU ) then do;
   CLUSvads [1] + ( REP_ClusterGroupU - 0.00696063679236 )**2;
   CLUSvads [2] + ( REP_ClusterGroupU - -0.0109574356906 )**2;
end;
else _vqmvar + 0.14285714285714;
if not missing( REP_GenderF ) then do;
   CLUSvads [1] + ( REP_GenderF - 0.03740004465745 )**2;
   CLUSvads [2] + ( REP_GenderF - -0.05887515702724 )**2;
end;
else _vqmvar + 0.33333333333333;
if not missing( REP_GenderM ) then do;
   CLUSvads [1] + ( REP_GenderM - -0.02232514664657 )**2;
   CLUSvads [2] + ( REP_GenderM - 0.03514424986686 )**2;
end;
else _vqmvar + 0.33333333333333;
if not missing( REP_GenderU ) then do;
   CLUSvads [1] + ( REP_GenderU - -0.02232812395159 )**2;
   CLUSvads [2] + ( REP_GenderU - 0.03514893674096 )**2;
end;
else _vqmvar + 0.33333333333333;
if not missing( REP_RegionCentral ) then do;
   CLUSvads [1] + ( REP_RegionCentral - 0.0061528306501 )**2;
   CLUSvads [2] + ( REP_RegionCentral - -0.00968578711616 )**2;
end;
else _vqmvar + 0.16666666666666;
if not missing( REP_RegionNorth ) then do;
   CLUSvads [1] + ( REP_RegionNorth - 0.00691174559213 )**2;
   CLUSvads [2] + ( REP_RegionNorth - -0.01088047115441 )**2;
end;
else _vqmvar + 0.16666666666666;
if not missing( REP_RegionNorthEast ) then do;
   CLUSvads [1] + ( REP_RegionNorthEast - -0.00538266666024 )**2;
   CLUSvads [2] + ( REP_RegionNorthEast - 0.00847339482478 )**2;
end;
else _vqmvar + 0.16666666666666;
if not missing( REP_RegionSouth_East ) then do;
   CLUSvads [1] + ( REP_RegionSouth_East - -0.00564102185688 )**2;
   CLUSvads [2] + ( REP_RegionSouth_East - 0.00888009762182 )**2;
end;
else _vqmvar + 0.16666666666666;
if not missing( REP_RegionSouth_West ) then do;
   CLUSvads [1] + ( REP_RegionSouth_West - -0.00807962298187 )**2;
   CLUSvads [2] + ( REP_RegionSouth_West - 0.01271894395142 )**2;
end;
else _vqmvar + 0.16666666666666;
if not missing( REP_RegionU ) then do;
   CLUSvads [1] + ( REP_RegionU - -0.0007523502067 )**2;
   CLUSvads [2] + ( REP_RegionU - 0.00118434983072 )**2;
end;
else _vqmvar + 0.16666666666666;
_vqnvar = 18 - _vqmvar;
if _vqnvar <= 1.0436451702844E-10 then do;
   _SEGMENT_ = .; Distance = .;
end;
else do;
   _SEGMENT_ = 1; Distance = CLUSvads [1];
   _vqfzdst = Distance * 0.99999999999988; drop _vqfzdst;
   do _vqclus = 2 to 2;
      if CLUSvads [_vqclus] < _vqfzdst then do;
         _SEGMENT_ = _vqclus; Distance = CLUSvads [_vqclus];
         _vqfzdst = Distance * 0.99999999999988;
      end;
   end;
   Distance = sqrt(Distance * (18 / _vqnvar));
end;
CLUSvlex :;

***************************************;
*** End Scoring Code from PROC DMVQ ***;
***************************************;
